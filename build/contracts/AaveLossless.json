{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_matchExpiryBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "awayBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "awayPointsAfterBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "awayPointsTrackers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "homePointsAfterBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homePointsTrackers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract ILendingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "matchExpiryBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AaveLossless.BetSide",
          "name": "betSide",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AaveLossless.BetSide",
          "name": "_winningSide",
          "type": "uint8"
        }
      ],
      "name": "setMatchWinnerAndWithdrawFromPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "internalType": "enum Lossless.MatchStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningSide",
      "outputs": [
        {
          "internalType": "enum AaveLossless.BetSide",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/baraa/.brownie/packages/aave/protocol-v2@1.0.1/contracts/interfaces/ILendingPoolAddressesProvider.sol",
    "2": "contracts/AaveLossless.sol",
    "4": "contracts/Lossless.sol",
    "5": "contracts/access/Context.sol",
    "6": "contracts/access/Ownable.sol",
    "7": "interfaces/IERC20.sol",
    "8": "interfaces/ILendingPool.sol"
  },
  "ast": {
    "absolutePath": "contracts/AaveLossless.sol",
    "exportedSymbols": {
      "AaveLossless": [
        320
      ]
    },
    "id": 321,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../../interfaces/ILendingPool.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 321,
        "sourceUnit": 1536,
        "src": "58:43:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 321,
        "sourceUnit": 1161,
        "src": "102:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Lossless.sol",
        "file": "./Lossless.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 321,
        "sourceUnit": 944,
        "src": "140:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "Lossless",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 943,
              "src": "192:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lossless_$943",
                "typeString": "contract Lossless"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "192:8:2"
          }
        ],
        "contractDependencies": [
          943,
          966,
          1076
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 320,
        "linearizedBaseContracts": [
          320,
          943,
          1076,
          966
        ],
        "name": "AaveLossless",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 8,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 320,
            "src": "209:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "209:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dfbf53ae",
            "id": 10,
            "mutability": "mutable",
            "name": "winner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 320,
            "src": "235:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "235:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fbf06338",
            "id": 12,
            "mutability": "mutable",
            "name": "winningSide",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 320,
            "src": "262:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_BetSide_$19",
              "typeString": "enum AaveLossless.BetSide"
            },
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "BetSide",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "262:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_BetSide_$19",
                "typeString": "enum AaveLossless.BetSide"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "294:39:2",
              "text": "Aave Lending pool to deposit tokens"
            },
            "functionSelector": "a59a9973",
            "id": 15,
            "mutability": "mutable",
            "name": "lendingPool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 320,
            "src": "338:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$1535",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "contractScope": null,
              "id": 14,
              "name": "ILendingPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1535,
              "src": "338:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1535",
                "typeString": "contract ILendingPool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "AaveLossless.BetSide",
            "id": 19,
            "members": [
              {
                "id": 16,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "389:4:2"
              },
              {
                "id": 17,
                "name": "HOME",
                "nodeType": "EnumValue",
                "src": "395:4:2"
              },
              {
                "id": 18,
                "name": "AWAY",
                "nodeType": "EnumValue",
                "src": "401:4:2"
              }
            ],
            "name": "BetSide",
            "nodeType": "EnumDefinition",
            "src": "375:31:2"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "549:190:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "559:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$581",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "MatchStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "568:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MatchStatus_$581_$",
                          "typeString": "type(enum Lossless.MatchStatus)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "568:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$581",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "src": "559:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MatchStatus_$581",
                      "typeString": "enum Lossless.MatchStatus"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "559:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "594:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "602:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "594:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "594:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "618:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$1535",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "_lendingPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "645:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "ILendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1535,
                        "src": "632:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingPool_$1535_$",
                          "typeString": "type(contract ILendingPool)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "632:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$1535",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "src": "618:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPool_$1535",
                      "typeString": "contract ILendingPool"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "618:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "675:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "BetSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "689:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                          "typeString": "type(enum AaveLossless.BetSide)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "689:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "675:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$19",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "675:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "711:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "728:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "720:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "720:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "711:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "711:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 28,
                    "name": "_matchExpiryBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "531:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 29,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "Lossless",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 943,
                  "src": "522:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Lossless_$943_$",
                    "typeString": "type(contract Lossless)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "522:27:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "442:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "458:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_matchExpiryBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "487:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "441:72:2"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:2"
            },
            "scope": 320,
            "src": "430:309:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "820:784:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "838:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "847:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "838:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616d6f756e74206d75737420626520706f7369746966",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "850:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f6a84be26313a47c494e5519d5ea7121abab403c4cc2e6b6555c16abf79142",
                          "typeString": "literal_string \"amount must be positif\""
                        },
                        "value": "amount must be positif"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f6a84be26313a47c494e5519d5ea7121abab403c4cc2e6b6555c16abf79142",
                          "typeString": "literal_string \"amount must be positif\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "830:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "830:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_BetSide_$19",
                            "typeString": "enum AaveLossless.BetSide"
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "betSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "893:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 77,
                              "name": "BetSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "904:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                                "typeString": "type(enum AaveLossless.BetSide)"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "HOME",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "904:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "src": "893:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_BetSide_$19",
                            "typeString": "enum AaveLossless.BetSide"
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "betSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "920:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 81,
                              "name": "BetSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "931:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                                "typeString": "type(enum AaveLossless.BetSide)"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "AWAY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "931:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "src": "920:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "893:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c696420617267756d656e7420666f722062657374696465",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "945:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3d05bf4ecc5b0c7887ef6c3c62c7e2cae69ef1a147f911e225d031ad3f89e36",
                          "typeString": "literal_string \"invalid argument for bestide\""
                        },
                        "value": "invalid argument for bestide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3d05bf4ecc5b0c7887ef6c3c62c7e2cae69ef1a147f911e225d031ad3f89e36",
                          "typeString": "literal_string \"invalid argument for bestide\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "885:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "885:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "885:91:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_BetSide_$19",
                      "typeString": "enum AaveLossless.BetSide"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "betSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "991:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "BetSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1000:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                          "typeString": "type(enum AaveLossless.BetSide)"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "HOME",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1000:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "991:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "betSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "1069:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$19",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 98,
                          "name": "BetSide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1078:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                            "typeString": "type(enum AaveLossless.BetSide)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AWAY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1078:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$19",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "src": "1069:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 106,
                    "nodeType": "IfStatement",
                    "src": "1065:72:2",
                    "trueBody": {
                      "id": 105,
                      "nodeType": "Block",
                      "src": "1092:45:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 102,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "1119:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 101,
                              "name": "placeAwayBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "1106:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1106:20:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 104,
                          "nodeType": "ExpressionStatement",
                          "src": "1106:20:2"
                        }
                      ]
                    }
                  },
                  "id": 107,
                  "nodeType": "IfStatement",
                  "src": "987:150:2",
                  "trueBody": {
                    "id": 96,
                    "nodeType": "Block",
                    "src": "1014:45:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "1041:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 92,
                            "name": "placeHomeBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "1028:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1028:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 95,
                        "nodeType": "ExpressionStatement",
                        "src": "1028:20:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "totalDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "1147:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1164:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1147:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "1180:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1194:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1194:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1180:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1209:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1180:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:35:2"
                },
                {
                  "assignments": [
                    120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 176,
                      "src": "1266:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1266:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1310:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1310:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 129,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1330:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1322:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1322:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1322:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1293:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 121,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1160,
                          "src": "1286:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1160_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1286:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1160",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1087,
                      "src": "1286:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1266:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 134,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1354:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1367:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1354:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1375:27:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        },
                        "value": "Check the token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1346:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1346:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1440:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1440:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1460:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1452:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1452:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1452:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1467:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1420:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 140,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1160,
                          "src": "1413:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1160_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1413:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1160",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1159,
                      "src": "1413:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "lendingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1514:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPool_$1535",
                              "typeString": "contract ILendingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILendingPool_$1535",
                              "typeString": "contract ILendingPool"
                            }
                          ],
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1506:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1506:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1506:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1528:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1491:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 153,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1160,
                          "src": "1484:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1160_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1484:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1160",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1096,
                      "src": "1484:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1565:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1572:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1588:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1580:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1580:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1580:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1594:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1545:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$1535",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1314,
                      "src": "1545:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:51:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dcb3b30e",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 66,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "isOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 603,
                  "src": "811:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "811:8:2"
              }
            ],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "betSide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "763:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BetSide_$19",
                    "typeString": "enum AaveLossless.BetSide"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 60,
                    "name": "BetSide",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "763:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$19",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "780:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:33:2"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:2"
            },
            "scope": 320,
            "src": "745:859:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "1651:218:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "playerBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "1670:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 186,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1684:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1684:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1670:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1696:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1670:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616c616e6365206973207a65726f",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1700:17:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20ebdcf32f87e43c3d3870ce83b2b6a253a91dd5f75691c4a8bed20f190b9ebf",
                          "typeString": "literal_string \"balance is zero\""
                        },
                        "value": "balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20ebdcf32f87e43c3d3870ce83b2b6a253a91dd5f75691c4a8bed20f190b9ebf",
                          "typeString": "literal_string \"balance is zero\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1662:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:56:2"
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 215,
                      "src": "1728:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "playerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "1745:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 197,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1759:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1759:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1745:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1728:42:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "1780:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 202,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 200,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1794:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1794:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1780:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1808:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1780:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1842:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1842:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "1854:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1826:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 206,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1160,
                          "src": "1819:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1160_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1160",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1148,
                      "src": "1819:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:42:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 180,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 179,
                  "name": "isPaid",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 627,
                  "src": "1642:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1642:8:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:2:2"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:0:2"
            },
            "scope": 320,
            "src": "1615:254:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "1972:299:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_BetSide_$19",
                            "typeString": "enum AaveLossless.BetSide"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 226,
                            "name": "_winningSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "1990:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 227,
                              "name": "BetSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2006:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                                "typeString": "type(enum AaveLossless.BetSide)"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "HOME",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2006:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "src": "1990:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_BetSide_$19",
                            "typeString": "enum AaveLossless.BetSide"
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "_winningSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2022:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 231,
                              "name": "BetSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2038:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                                "typeString": "type(enum AaveLossless.BetSide)"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "AWAY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2038:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$19",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "src": "2022:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1990:60:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e6720696e70757420666f722077696e6e6572",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c8d0ed0320d07589296aa23ca97bb8ec27a4d3eb6c913cf595da0b428f7a18d",
                          "typeString": "literal_string \"Wrong input for winner\""
                        },
                        "value": "Wrong input for winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c8d0ed0320d07589296aa23ca97bb8ec27a4d3eb6c913cf595da0b428f7a18d",
                          "typeString": "literal_string \"Wrong input for winner\""
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1982:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:95:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "2087:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$581",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "MatchStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "2096:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MatchStatus_$581_$",
                          "typeString": "type(enum Lossless.MatchStatus)"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PAID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2096:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$581",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "src": "2087:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MatchStatus_$581",
                      "typeString": "enum Lossless.MatchStatus"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2122:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 244,
                      "name": "_winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "2136:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "2122:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$19",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2179:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2191:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 252,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2191:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 251,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2186:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2186:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2186:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2210:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$320",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2202:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2202:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2202:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 247,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2158:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$1535",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1326,
                      "src": "2158:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 262,
                      "name": "findWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "2226:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2226:12:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 265,
                      "name": "payoutWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "2248:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2248:14:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "645a0047",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 221,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 220,
                  "name": "isFinished",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 615,
                  "src": "1947:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1947:12:2"
              },
              {
                "arguments": [],
                "id": 223,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 222,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1025,
                  "src": "1960:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1960:11:2"
              }
            ],
            "name": "setMatchWinnerAndWithdrawFromPool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "_winningSide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 269,
                  "src": "1918:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BetSide_$19",
                    "typeString": "enum AaveLossless.BetSide"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 217,
                    "name": "BetSide",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "1918:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$19",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1917:22:2"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:2"
            },
            "scope": 320,
            "src": "1875:396:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2308:187:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_BetSide_$19",
                      "typeString": "enum AaveLossless.BetSide"
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 272,
                      "name": "winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2321:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "BetSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2336:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                          "typeString": "type(enum AaveLossless.BetSide)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "HOME",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2336:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "2321:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_BetSide_$19",
                        "typeString": "enum AaveLossless.BetSide"
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 282,
                        "name": "winningSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2410:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$19",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 283,
                          "name": "BetSide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2425:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BetSide_$19_$",
                            "typeString": "type(enum AaveLossless.BetSide)"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AWAY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2425:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$19",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "src": "2410:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 292,
                    "nodeType": "IfStatement",
                    "src": "2406:83:2",
                    "trueBody": {
                      "id": 291,
                      "nodeType": "Block",
                      "src": "2439:50:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 286,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2453:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 287,
                                "name": "findAwayWinner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 922,
                                "src": "2462:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () returns (address)"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2462:16:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2453:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 290,
                          "nodeType": "ExpressionStatement",
                          "src": "2453:25:2"
                        }
                      ]
                    }
                  },
                  "id": 293,
                  "nodeType": "IfStatement",
                  "src": "2318:171:2",
                  "trueBody": {
                    "id": 281,
                    "nodeType": "Block",
                    "src": "2350:50:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 276,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2364:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 277,
                              "name": "findHomeWinner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "2373:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                "typeString": "function () returns (address)"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2373:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2364:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "2364:25:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findWinner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2296:2:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2308:0:2"
            },
            "scope": 320,
            "src": "2277:218:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "2535:141:2",
              "statements": [
                {
                  "assignments": [
                    299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 299,
                      "mutability": "mutable",
                      "name": "winnerPayout",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 318,
                      "src": "2545:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 298,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2545:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 306,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2600:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AaveLossless_$320",
                                "typeString": "contract AaveLossless"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AaveLossless_$320",
                                "typeString": "contract AaveLossless"
                              }
                            ],
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2592:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 304,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2592:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2592:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 301,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2575:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 300,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "2568:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1160_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2568:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1160",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1103,
                        "src": "2568:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2568:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "totalDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "2609:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2568:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2545:77:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "2632:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 314,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2646:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2632:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "winnerPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "2657:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2632:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payoutWinner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:2:2"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2535:0:2"
            },
            "scope": 320,
            "src": "2501:175:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 321,
        "src": "167:2548:2"
      }
    ],
    "src": "33:2682:2"
  },
  "bytecode": "",
  "bytecodeSha1": "6372a6c503d3cba8408a9d8563f822bade16371f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "AaveLossless",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {
        "AaveLossless.findWinner": {
          "60": [
            2321,
            2348,
            false
          ],
          "61": [
            2410,
            2437,
            false
          ]
        },
        "AaveLossless.placeBet": {
          "54": [
            838,
            848,
            true
          ],
          "55": [
            893,
            916,
            true
          ],
          "56": [
            920,
            943,
            true
          ],
          "57": [
            991,
            1012,
            false
          ],
          "58": [
            1069,
            1090,
            false
          ],
          "59": [
            1354,
            1373,
            true
          ]
        },
        "AaveLossless.setMatchWinnerAndWithdrawFromPool": {
          "52": [
            1990,
            2018,
            true
          ],
          "53": [
            2022,
            2050,
            true
          ]
        }
      },
      "4": {
        "AaveLossless.placeBet": {
          "64": [
            803,
            829,
            true
          ]
        },
        "AaveLossless.setMatchWinnerAndWithdrawFromPool": {
          "63": [
            984,
            1014,
            true
          ]
        },
        "AaveLossless.withdraw": {
          "62": [
            1097,
            1123,
            true
          ]
        },
        "Lossless.findAwayWinner": {
          "68": [
            2945,
            2975,
            false
          ],
          "69": [
            3179,
            3211,
            false
          ],
          "70": [
            3266,
            3297,
            false
          ]
        },
        "Lossless.findHomeWinner": {
          "65": [
            2276,
            2306,
            false
          ],
          "66": [
            2510,
            2542,
            false
          ],
          "67": [
            2597,
            2628,
            false
          ]
        }
      },
      "5": {},
      "6": {
        "Ownable.transferOwnership": {
          "71": [
            1290,
            1313,
            true
          ],
          "72": [
            2092,
            2114,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "2": {
        "AaveLossless.findWinner": {
          "26": [
            2364,
            2389
          ],
          "27": [
            2453,
            2478
          ]
        },
        "AaveLossless.payoutWinner": {
          "28": [
            2632,
            2669
          ]
        },
        "AaveLossless.placeBet": {
          "12": [
            830,
            875
          ],
          "13": [
            885,
            976
          ],
          "14": [
            1028,
            1048
          ],
          "15": [
            1106,
            1126
          ],
          "16": [
            1147,
            1170
          ],
          "17": [
            1180,
            1215
          ],
          "18": [
            1346,
            1403
          ],
          "19": [
            1413,
            1474
          ],
          "20": [
            1484,
            1535
          ],
          "21": [
            1545,
            1596
          ]
        },
        "AaveLossless.setMatchWinnerAndWithdrawFromPool": {
          "3": [
            1982,
            2077
          ],
          "4": [
            2087,
            2112
          ],
          "5": [
            2122,
            2148
          ],
          "6": [
            2158,
            2216
          ],
          "7": [
            2226,
            2238
          ],
          "8": [
            2248,
            2262
          ]
        },
        "AaveLossless.withdraw": {
          "0": [
            1662,
            1718
          ],
          "1": [
            1780,
            1809
          ],
          "2": [
            1819,
            1861
          ]
        }
      },
      "4": {
        "Lossless.findAwayWinner": {
          "45": [
            2895,
            2931
          ],
          "46": [
            2991,
            3014
          ],
          "47": [
            3230,
            3240
          ],
          "48": [
            3317,
            3329
          ],
          "49": [
            3368,
            3395
          ],
          "50": [
            3429,
            3453
          ]
        },
        "Lossless.findHomeWinner": {
          "39": [
            2226,
            2262
          ],
          "40": [
            2322,
            2345
          ],
          "41": [
            2561,
            2571
          ],
          "42": [
            2648,
            2660
          ],
          "43": [
            2699,
            2726
          ],
          "44": [
            2760,
            2784
          ]
        },
        "Lossless.placeAwayBet": {
          "34": [
            1902,
            1940
          ],
          "35": [
            1950,
            1978
          ],
          "36": [
            1988,
            2037
          ],
          "37": [
            2047,
            2083
          ],
          "38": [
            2093,
            2106
          ]
        },
        "Lossless.placeHomeBet": {
          "29": [
            1505,
            1543
          ],
          "30": [
            1553,
            1581
          ],
          "31": [
            1591,
            1640
          ],
          "32": [
            1650,
            1686
          ],
          "33": [
            1696,
            1709
          ]
        },
        "Lossless.random": {
          "51": [
            3528,
            3619
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "25": [
            678,
            695
          ]
        }
      },
      "6": {
        "Ownable.owner": {
          "11": [
            1143,
            1156
          ]
        },
        "Ownable.renounceOwnership": {
          "9": [
            1774,
            1819
          ],
          "10": [
            1829,
            1848
          ]
        },
        "Ownable.transferOwnership": {
          "22": [
            2084,
            2157
          ],
          "23": [
            2167,
            2210
          ],
          "24": [
            2220,
            2237
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "ILendingPool",
    "aave/protocol-v2@1.0.1/ILendingPoolAddressesProvider",
    "Lossless",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106101145760003560e01c8063b3db3ced116100a0578063dfbf53ae11610064578063dfbf53ae146102e3578063e8eaca75146102f8578063f2fde38b1461030d578063fbf0633814610340578063fc0c546a1461036557610114565b8063b3db3ced14610254578063bf363c3e1461027e578063c003aef314610293578063c69de224146102a8578063dcb3b30e146102bd57610114565b8063715018a6116100e7578063715018a6146101ba5780637d882097146101cf5780638da5cb5b146101e4578063a59a997314610215578063ad9ed66e1461022a57610114565b8063200d2ed21461011957806336201e531461014f5780633ccfd60b14610176578063645a00471461018d575b600080fd5b34801561012557600080fd5b5061012e61037a565b6040518082600381111561013e57fe5b815260200191505060405180910390f35b34801561015b57600080fd5b5061016461038a565b60408051918252519081900360200190f35b34801561018257600080fd5b5061018b610390565b005b34801561019957600080fd5b5061018b600480360360208110156101b057600080fd5b503560ff166104db565b3480156101c657600080fd5b5061018b6106f2565b3480156101db57600080fd5b506101646107b0565b3480156101f057600080fd5b506101f96107b6565b604080516001600160a01b039092168252519081900360200190f35b34801561022157600080fd5b506101f96107c6565b34801561023657600080fd5b506101646004803603602081101561024d57600080fd5b50356107d5565b34801561026057600080fd5b506101646004803603602081101561027757600080fd5b50356107f3565b34801561028a57600080fd5b50610164610800565b34801561029f57600080fd5b50610164610806565b3480156102b457600080fd5b5061016461080c565b61018b600480360360408110156102d357600080fd5b5060ff8135169060200135610812565b3480156102ef57600080fd5b506101f9610c3a565b34801561030457600080fd5b50610164610c49565b34801561031957600080fd5b5061018b6004803603602081101561033057600080fd5b50356001600160a01b0316610c4f565b34801561034c57600080fd5b50610355610d63565b6040518082600281111561013e57fe5b34801561037157600080fd5b506101f9610d73565b600054600160a01b900460ff1681565b60035481565b6003600054600160a01b900460ff1660038111156103aa57fe5b146103ed576040805162461bcd60e51b815260206004820152600e60248201526d13585d18da081b9bdd081c185a5960921b604482015290519081900360640190fd5b336000908152600b6020526040902054610440576040805162461bcd60e51b815260206004820152600f60248201526e62616c616e6365206973207a65726f60881b604482015290519081900360640190fd5b336000818152600b60209081526040808320805490849055600e54825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169363a9059cbb93604480850194919392918390030190829087803b1580156104ac57600080fd5b505af11580156104c0573d6000803e3d6000fd5b505050506040513d60208110156104d657600080fd5b505050565b6002600054600160a01b900460ff1660038111156104f557fe5b1461053c576040805162461bcd60e51b815260206004820152601260248201527113585d18da081b9bdd08199a5b9a5cda195960721b604482015290519081900360640190fd5b610544610d82565b6001600160a01b03166105556107b6565b6001600160a01b0316146105b0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60018160028111156105be57fe5b14806105d5575060028160028111156105d357fe5b145b61061f576040805162461bcd60e51b81526020600482015260166024820152752bb937b7339034b7383aba103337b9103bb4b73732b960511b604482015290519081900360640190fd5b60008054600360a01b60ff60a01b1991821617909155600f8054839216600160a01b83600281111561064d57fe5b0217905550601054600e5460408051631a4ca37b60e21b81526001600160a01b0392831660048201526000196024820152306044820152905191909216916369328dec9160648083019260209291908290030181600087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b506106e79050610d86565b6106ef610e1e565b50565b6106fa610d82565b6001600160a01b031661070b6107b6565b6001600160a01b031614610766576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60025481565b6000546001600160a01b03165b90565b6010546001600160a01b031681565b600781815481106107e257fe5b600091825260209091200154905081565b600881815481106107e257fe5b60015481565b60045481565b60065481565b60008054600160a01b900460ff16600381111561082b57fe5b1461086e576040805162461bcd60e51b815260206004820152600e60248201526d26b0ba31b4103737ba1037b832b760911b604482015290519081900360640190fd5b60015443106108b9576040805162461bcd60e51b815260206004820152601260248201527143616e7420706c61636520626574206e6f7760701b604482015290519081900360640190fd5b60008111610907576040805162461bcd60e51b815260206004820152601660248201527530b6b7bab73a1036bab9ba103132903837b9b4ba34b360511b604482015290519081900360640190fd5b600182600281111561091557fe5b148061092c5750600282600281111561092a57fe5b145b61097d576040805162461bcd60e51b815260206004820152601c60248201527f696e76616c696420617267756d656e7420666f72206265737469646500000000604482015290519081900360640190fd5b600182600281111561098b57fe5b141561099f5761099a81610ec1565b6109bc565b60028260028111156109ad57fe5b14156109bc576109bc81610f3a565b6002805482019055336000818152600b60209081526040808320805486019055600e548151636eb1769f60e11b81526004810195909552306024860152905192936001600160a01b039091169263dd62ed3e92604480840193919291829003018186803b158015610a2c57600080fd5b505afa158015610a40573d6000803e3d6000fd5b505050506040513d6020811015610a5657600080fd5b5051905081811015610aaf576040805162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000604482015290519081900360640190fd5b600e54604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015610b0957600080fd5b505af1158015610b1d573d6000803e3d6000fd5b505050506040513d6020811015610b3357600080fd5b5050600e546010546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018690529051919092169163095ea7b39160448083019260209291908290030181600087803b158015610b8e57600080fd5b505af1158015610ba2573d6000803e3d6000fd5b505050506040513d6020811015610bb857600080fd5b5050601054600e546040805163e8eda9df60e01b81526001600160a01b039283166004820152602481018690523060448201526000606482018190529151929093169263e8eda9df926084808301939282900301818387803b158015610c1d57600080fd5b505af1158015610c31573d6000803e3d6000fd5b50505050505050565b600f546001600160a01b031681565b60055481565b610c57610d82565b6001600160a01b0316610c686107b6565b6001600160a01b031614610cc3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610d085760405162461bcd60e51b81526004018080602001828103825260268152602001806112516026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600f54600160a01b900460ff1681565b600e546001600160a01b031681565b3390565b6001600f54600160a01b900460ff166002811115610da057fe5b1415610dd357610dae610fb3565b600f80546001600160a01b0319166001600160a01b0392909216919091179055610e1c565b6002600f54600160a01b900460ff166002811115610ded57fe5b1415610e1c57610dfb6110e5565b600f80546001600160a01b0319166001600160a01b03929092169190911790555b565b600254600e54604080516370a0823160e01b81523060048201529051600093926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610e6d57600080fd5b505afa158015610e81573d6000803e3d6000fd5b505050506040513d6020811015610e9757600080fd5b5051600f546001600160a01b03166000908152600b60205260409020805492909103909101905550565b600154336000908152600c6020526040902080544392839003840290810190915560038054820190819055600554600780549091908110610efe57fe5b600091825260208083209091019290925560058054825260099092526040902080546001600160a01b0319163317905580546001019055505050565b600154336000908152600d6020526040902080544392839003840290810190915560048054820190819055600654600880549091908110610f7757fe5b6000918252602080832090910192909255600680548252600a9092526040902080546001600160a01b0319163317905580546001019055505050565b600080610fbe611217565b90506003548181610fcb57fe5b0690506007600081548110610fdc57fe5b90600052602060002001548110156110295750506000805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b546001600160a01b03166107c3565b6007546000190160015b8181116110c6576000600282840304820190506007818154811061105357fe5b9060005260206000200154841015611070576001810392506110c0565b6007818154811061107d57fe5b906000526020600020015484111561109a578060010191506110c0565b6001016000908152600960205260409020546001600160a01b031693506107c392505050565b50611033565b6000908152600960205260409020546001600160a01b03169250505090565b6000806110f0611217565b905060045481816110fd57fe5b069050600860008154811061110e57fe5b906000526020600020015481101561115b57505060008052600a6020527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e3546001600160a01b03166107c3565b6008546000190160015b8181116111f8576000600282840304820190506008818154811061118557fe5b90600052602060002001548410156111a2576001810392506111f2565b600881815481106111af57fe5b90600052602060002001548411156111cc578060010191506111f2565b6001016000908152600a60205260409020546001600160a01b031693506107c392505050565b50611165565b6000908152600a60205260409020546001600160a01b03169250505090565b6002546040805144602080830191909152428284015260608083019490945282518083039094018452608090910190915281519101209056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122091bb2ff810719da9de5e8730e047ce2ed6e6b2eec91cf0e398a164b383be414764736f6c634300060c0033",
  "deployedSourceMap": "167:2548:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;128:25:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;230:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1615:254:2;;;;;;;;;;;;;:::i;:::-;;1875:396;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1875:396:2;;;;:::i;1710:145:6:-;;;;;;;;;;;;;:::i;196:28:4:-;;;;;;;;;;;;;:::i;1078:85:6:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1078:85:6;;;;;;;;;;;;;;338:31:2;;;;;;;;;;;;;:::i;366:36:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;366:36:4;;:::i;408:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;408:36:4;;:::i;159:31::-;;;;;;;;;;;;;:::i;269:33::-;;;;;;;;;;;;;:::i;337:23::-;;;;;;;;;;;;;:::i;745:859:2:-;;;;;;;;;;;;;;;;-1:-1:-1;745:859:2;;;;;;;;;:::i;235:21::-;;;;;;;;;;;;;:::i;308:23:4:-;;;;;;;;;;;;;:::i;2004:240:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2004:240:6;-1:-1:-1;;;;;2004:240:6;;:::i;262:26:2:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;209:20;;;;;;;;;;;;;:::i;128:25:4:-;;;-1:-1:-1;;;128:25:4;;;;;:::o;230:33::-;;;;:::o;1615:254:2:-;1107:16:4;1097:6;;-1:-1:-1;;;1097:6:4;;;;:26;;;;;;;;;1089:53;;;;;-1:-1:-1;;;1089:53:4;;;;;;;;;;;;-1:-1:-1;;;1089:53:4;;;;;;;;;;;;;;;1684:10:2::1;1696:1;1670:25:::0;;;:13:::1;:25;::::0;;;;;1662:56:::1;;;::::0;;-1:-1:-1;;;1662:56:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1662:56:2;;;;;;;;;;;;;::::1;;1759:10;1728:14;1745:25:::0;;;:13:::1;:25;::::0;;;;;;;;;1780:29;;;;1826:5:::1;::::0;1819:42;;-1:-1:-1;;;1819:42:2;;::::1;::::0;::::1;::::0;;;;;;;;;;;;1745:25;;-1:-1:-1;;;;;1826:5:2;;::::1;::::0;1819:22:::1;::::0;:42;;;;;1745:25;;1819:42;;;;;;;;;1826:5;1819:42;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;1615:254:2:o;1875:396::-;994:20:4;984:6;;-1:-1:-1;;;984:6:4;;;;:30;;;;;;;;;976:61;;;;;-1:-1:-1;;;976:61:4;;;;;;;;;;;;-1:-1:-1;;;976:61:4;;;;;;;;;;;;;;;1301:12:6::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1290:23:6::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1290:23:6::1;;1282:68;;;::::0;;-1:-1:-1;;;1282:68:6;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2006:12:2::2;1990;:28;;;;;;;;;:60;;;-1:-1:-1::0;2038:12:2::2;2022;:28;;;;;;;;;1990:60;1982:95;;;::::0;;-1:-1:-1;;;1982:95:2;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;1982:95:2;;;;;;;;;;;;;::::2;;2087:6;:25:::0;;-1:-1:-1;;;;;;;2087:25:2;;::::2;;::::0;;;2122:11:::2;:26:::0;;2136:12;;2122:26:::2;-1:-1:-1::0;;;2136:12:2;2122:26:::2;::::0;::::2;;;;;;;;::::0;;-1:-1:-1;2158:11:2::2;::::0;2179:5:::2;::::0;2158:58:::2;::::0;;-1:-1:-1;;;2158:58:2;;-1:-1:-1;;;;;2179:5:2;;::::2;2158:58;::::0;::::2;::::0;-1:-1:-1;;2158:58:2;;;;2210:4:::2;2158:58:::0;;;;;;:11;;;::::2;::::0;:20:::2;::::0;:58;;;;;::::2;::::0;;;;;;;;:11:::2;::::0;:58;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;2226:12:2::2;::::0;-1:-1:-1;2226:10:2::2;:12::i;:::-;2248:14;:12;:14::i;:::-;1875:396:::0;:::o;1710:145:6:-;1301:12;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:6;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:6;;1282:68;;;;;-1:-1:-1;;;1282:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:1:::1;1800:6:::0;;1779:40:::1;::::0;-1:-1:-1;;;;;1800:6:6;;::::1;::::0;1779:40:::1;::::0;1816:1;;1779:40:::1;1846:1;1829:19:::0;;-1:-1:-1;;;;;;1829:19:6::1;::::0;;1710:145::o;196:28:4:-;;;;:::o;1078:85:6:-;1124:7;1150:6;-1:-1:-1;;;;;1150:6:6;1078:85;;:::o;338:31:2:-;;;-1:-1:-1;;;;;338:31:2;;:::o;366:36:4:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;366:36:4;:::o;408:::-;;;;;;;;;;159:31;;;;:::o;269:33::-;;;;:::o;337:23::-;;;;:::o;745:859:2:-;813:16:4;803:6;;-1:-1:-1;;;803:6:4;;;;:26;;;;;;;;;795:53;;;;;-1:-1:-1;;;795:53:4;;;;;;;;;;;;-1:-1:-1;;;795:53:4;;;;;;;;;;;;;;;881:16;;866:12;:31;858:62;;;;;-1:-1:-1;;;858:62:4;;;;;;;;;;;;-1:-1:-1;;;858:62:4;;;;;;;;;;;;;;;847:1:2::1;838:6;:10;830:45;;;::::0;;-1:-1:-1;;;830:45:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;830:45:2;;;;;;;;;;;;;::::1;;904:12;893:7;:23;;;;;;;;;:50;;;-1:-1:-1::0;931:12:2::1;920:7;:23;;;;;;;;;893:50;885:91;;;::::0;;-1:-1:-1;;;885:91:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1000:12;991:7;:21;;;;;;;;;987:150;;;1028:20;1041:6;1028:12;:20::i;:::-;987:150;;;1078:12;1069:7;:21;;;;;;;;;1065:72;;;1106:20;1119:6;1106:12;:20::i;:::-;1147:13;:23:::0;;;::::1;::::0;;1194:10:::1;-1:-1:-1::0;1180:25:2;;;:13:::1;:25;::::0;;;;;;;:35;;;::::1;::::0;;1293:5:::1;::::0;1286:50;;-1:-1:-1;;;1286:50:2;;::::1;::::0;::::1;::::0;;;;1330:4:::1;1286:50:::0;;;;;;-1:-1:-1;;;;;;;1293:5:2;;::::1;::::0;1286:23:::1;::::0;:50;;;;;1180:25;;1286:50;;;;;;1293:5;1286:50;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;1286:50:2;;-1:-1:-1;1354:19:2;;::::1;;1346:57;;;::::0;;-1:-1:-1;;;1346:57:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1420:5;::::0;1413:61:::1;::::0;;-1:-1:-1;;;1413:61:2;;1440:10:::1;1413:61;::::0;::::1;::::0;1460:4:::1;1413:61:::0;;;;;;;;;;;;-1:-1:-1;;;;;1420:5:2;;::::1;::::0;1413:26:::1;::::0;:61;;;;;::::1;::::0;;;;;;;;;1420:5:::1;::::0;1413:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;1491:5:2::1;::::0;1514:11:::1;::::0;1484:51:::1;::::0;;-1:-1:-1;;;1484:51:2;;-1:-1:-1;;;;;1514:11:2;;::::1;1484:51;::::0;::::1;::::0;;;;;;;;;1491:5;;;::::1;::::0;1484:21:::1;::::0;:51;;;;;1413:61:::1;::::0;1484:51;;;;;;;1491:5:::1;::::0;1484:51;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;1545:11:2::1;::::0;1565:5:::1;::::0;1545:51:::1;::::0;;-1:-1:-1;;;1545:51:2;;-1:-1:-1;;;;;1565:5:2;;::::1;1545:51;::::0;::::1;::::0;;;;;;;1588:4:::1;1545:51:::0;;;;:11:::1;:51:::0;;;;;;;;:11;;;::::1;::::0;:19:::1;::::0;:51;;;;;:11;:51;;;;;:11;;:51;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;930:1:4;745:859:2::0;;:::o;235:21::-;;;-1:-1:-1;;;;;235:21:2;;:::o;308:23:4:-;;;;:::o;2004:240:6:-;1301:12;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:6;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:6;;1282:68;;;;;-1:-1:-1;;;1282:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2092:22:6;::::1;2084:73;;;;-1:-1:-1::0;;;2084:73:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:6;::::0;;2172:38:::1;::::0;-1:-1:-1;;;;;2172:38:6;;::::1;::::0;2193:6;::::1;::::0;2172:38:::1;::::0;::::1;2220:6;:17:::0;;-1:-1:-1;;;;;;2220:17:6::1;-1:-1:-1::0;;;;;2220:17:6;;;::::1;::::0;;;::::1;::::0;;2004:240::o;262:26:2:-;;;-1:-1:-1;;;262:26:2;;;;;:::o;209:20::-;;;-1:-1:-1;;;;;209:20:2;;:::o;598:104:5:-;685:10;598:104;:::o;2277:218:2:-;2336:12;2321:11;;-1:-1:-1;;;2321:11:2;;;;:27;;;;;;;;;2318:171;;;2373:16;:14;:16::i;:::-;2364:6;:25;;-1:-1:-1;;;;;;2364:25:2;-1:-1:-1;;;;;2364:25:2;;;;;;;;;;2318:171;;;2425:12;2410:11;;-1:-1:-1;;;2410:11:2;;;;:27;;;;;;;;;2406:83;;;2462:16;:14;:16::i;:::-;2453:6;:25;;-1:-1:-1;;;;;;2453:25:2;-1:-1:-1;;;;;2453:25:2;;;;;;;;;;2406:83;2277:218::o;2501:175::-;2609:13;;2575:5;;2568:38;;;-1:-1:-1;;;2568:38:2;;2600:4;2568:38;;;;;;2545:20;;2609:13;-1:-1:-1;;;;;2575:5:2;;2568:23;;:38;;;;;;;;;;;;;;2575:5;2568:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2568:38:2;2646:6;;-1:-1:-1;;;;;2646:6:2;2632:21;;;;:13;2568:38;2632:21;;;;:37;;2568:54;;;;2632:37;;;;;-1:-1:-1;2501:175:2:o;1333:392:4:-;1463:16;;1522:10;1390:20;1505:28;;;:16;:28;;;;;:38;;1413:12;1463:31;;;;1452:43;;1505:38;;;;;;1553:18;:28;;;;;;;;1610:8;;1591:18;:28;;:18;;1610:8;1591:28;;;;;;;;;;;;;;;;;:49;;;;1664:8;;;1650:23;;:13;:23;;;;;;:36;;-1:-1:-1;;;;;;1650:36:4;1676:10;1650:36;;;1696:13;;1650:36;1696:13;;;-1:-1:-1;;;1333:392:4:o;1731:391::-;1860:16;;1919:10;1788:20;1902:28;;;:16;:28;;;;;:38;;1811:12;1860:31;;;;1850:42;;1902:38;;;;;;1950:18;:28;;;;;;;;2007:8;;1988:18;:28;;:18;;2007:8;1988:28;;;;;;;;;;;;;;;;;:49;;;;2061:8;;;2047:23;;:13;:23;;;;;;:36;;-1:-1:-1;;;;;;2047:36:4;2073:10;2047:36;;;2093:13;;2047:36;2093:13;;;-1:-1:-1;;;1731:391:4:o;2129:663::-;2172:7;2191:14;2208:8;:6;:8::i;:::-;2191:25;;2244:18;;2235:6;:27;;;;;;2226:36;;2285:18;2304:1;2285:21;;;;;;;;;;;;;;;;2276:6;:30;2273:83;;;-1:-1:-1;;2329:16:4;;;:13;:16;;;;-1:-1:-1;;;;;2329:16:4;2322:23;;2273:83;2376:18;:25;-1:-1:-1;;2376:27:4;2402:1;2435:316;2447:2;2441;:8;2435:316;;2465:11;2492:1;2485:5;;;2484:9;2479:2;:14;2465:28;;2519:18;2538:3;2519:23;;;;;;;;;;;;;;;;2510:6;:32;2507:234;;;2570:1;2566:3;:5;2561:10;;2507:234;;;2605:18;2624:3;2605:23;;;;;;;;;;;;;;;;2597:6;:31;2593:148;;;2653:3;2659:1;2653:7;2648:12;;2593:148;;;2724:1;2720:5;2706:20;;;;:13;:20;;;;;;-1:-1:-1;;;;;2706:20:4;;-1:-1:-1;2699:27:4;;-1:-1:-1;;;2699:27:4;2593:148;2435:316;;;;2767:17;;;;:13;:17;;;;;;-1:-1:-1;;;;;2767:17:4;;-1:-1:-1;;;2129:663:4;:::o;2798:::-;2841:7;2860:14;2877:8;:6;:8::i;:::-;2860:25;;2913:18;;2904:6;:27;;;;;;2895:36;;2954:18;2973:1;2954:21;;;;;;;;;;;;;;;;2945:6;:30;2942:83;;;-1:-1:-1;;2998:16:4;;;:13;:16;;;;-1:-1:-1;;;;;2998:16:4;2991:23;;2942:83;3045:18;:25;-1:-1:-1;;3045:27:4;3071:1;3104:316;3116:2;3110;:8;3104:316;;3134:11;3161:1;3154:5;;;3153:9;3148:2;:14;3134:28;;3188:18;3207:3;3188:23;;;;;;;;;;;;;;;;3179:6;:32;3176:234;;;3239:1;3235:3;:5;3230:10;;3176:234;;;3274:18;3293:3;3274:23;;;;;;;;;;;;;;;;3266:6;:31;3262:148;;;3322:3;3328:1;3322:7;3317:12;;3262:148;;;3393:1;3389:5;3375:20;;;;:13;:20;;;;;;-1:-1:-1;;;;;3375:20:4;;-1:-1:-1;3368:27:4;;-1:-1:-1;;;3368:27:4;3262:148;3104:316;;;;3436:17;;;;:13;:17;;;;;;-1:-1:-1;;;;;3436:17:4;;-1:-1:-1;;;2798:663:4;:::o;3473:153::-;3602:13;;3550:67;;;3567:16;3550:67;;;;;;;;3585:15;3550:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3540:78;;;;;3473:153;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "lendingPool()": {
        "notice": "Aave Lending pool to deposit tokens"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    167,
    2715
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB3DB3CED GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDFBF53AE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xE8EACA75 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xFBF06338 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x365 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xB3DB3CED EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xBF363C3E EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xC003AEF3 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xC69DE224 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xDCB3B30E EQ PUSH2 0x2BD JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xAD9ED66E EQ PUSH2 0x22A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x36201E53 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x645A0047 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x390 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x4DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x6F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x7B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x7C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x800 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x806 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0xC3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0xC49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3AA JUMPI INVALID JUMPDEST EQ PUSH2 0x3ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13585D18DA081B9BDD081C185A59 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x440 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x62616C616E6365206973207A65726F PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0xE SLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD DUP3 SWAP1 MSTORE SWAP2 MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F5 JUMPI INVALID JUMPDEST EQ PUSH2 0x53C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585D18DA081B9BDD08199A5B9A5CDA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x544 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x555 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5BE JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x5D5 JUMPI POP PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5D3 JUMPI INVALID JUMPDEST EQ JUMPDEST PUSH2 0x61F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2BB937B7339034B7383ABA103337B9103BB4B73732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x3 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP1 SLOAD DUP4 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x64D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x69328DEC SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 SWAP1 POP PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0xE1E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6FA PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x70B PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x766 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7E2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7E2 JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x82B JUMPI INVALID JUMPDEST EQ PUSH2 0x86E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26B0BA31B4103737BA1037B832B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0x8B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E7420706C61636520626574206E6F77 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x907 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B6B7BAB73A1036BAB9BA103132903837B9B4BA34B3 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x915 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x92C JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x92A JUMPI INVALID JUMPDEST EQ JUMPDEST PUSH2 0x97D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E7420666F72206265737469646500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x98B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x99F JUMPI PUSH2 0x99A DUP2 PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9AD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x9BC JUMPI PUSH2 0x9BC DUP2 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE PUSH1 0xE SLOAD DUP2 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAAF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0xE SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0xE8EDA9DF SWAP3 PUSH1 0x84 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC68 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1251 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA0 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDAE PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x2 PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDED JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xE1C JUMPI PUSH2 0xDFB PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP2 SUB SWAP1 SWAP2 ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD NUMBER SWAP3 DUP4 SWAP1 SUB DUP5 MUL SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xEFE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD NUMBER SWAP3 DUP4 SWAP1 SUB DUP5 MUL SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xF77 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFBE PUSH2 0x1217 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 DUP2 PUSH2 0xFCB JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xFDC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1029 JUMPI POP POP PUSH1 0x0 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 NOT ADD PUSH1 0x1 JUMPDEST DUP2 DUP2 GT PUSH2 0x10C6 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 SUB DIV DUP3 ADD SWAP1 POP PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1053 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 LT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x1 DUP2 SUB SWAP3 POP PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x107D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 GT ISZERO PUSH2 0x109A JUMPI DUP1 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0x7C3 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10F0 PUSH2 0x1217 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 DUP2 PUSH2 0x10FD JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x110E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x115B JUMPI POP POP PUSH1 0x0 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 NOT ADD PUSH1 0x1 JUMPDEST DUP2 DUP2 GT PUSH2 0x11F8 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 SUB DIV DUP3 ADD SWAP1 POP PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1185 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 LT ISZERO PUSH2 0x11A2 JUMPI PUSH1 0x1 DUP2 SUB SWAP3 POP PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11AF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 GT ISZERO PUSH2 0x11CC JUMPI DUP1 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0x7C3 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DIFFICULTY PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A264697066735822122091BB2FF81071 SWAP14 0xA9 0xDE 0x5E DUP8 ADDRESS 0xE0 SELFBALANCE 0xCE 0x2E 0xD6 0xE6 0xB2 0xEE 0xC9 SHR CREATE 0xE3 SWAP9 LOG1 PUSH5 0xB383BE4147 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        167,
        2715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "12": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB3DB3CED"
    },
    "25": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDFBF53AE"
    },
    "36": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDFBF53AE"
    },
    "47": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E3"
    },
    "51": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8EACA75"
    },
    "58": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F8"
    },
    "62": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "73": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFBF06338"
    },
    "80": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "84": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFC0C546A"
    },
    "91": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x365"
    },
    "95": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "99": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMP",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB3DB3CED"
    },
    "107": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x254"
    },
    "111": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBF363C3E"
    },
    "118": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "122": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC003AEF3"
    },
    "129": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x293"
    },
    "133": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC69DE224"
    },
    "140": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "144": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDCB3B30E"
    },
    "151": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BD"
    },
    "155": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "159": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMP",
      "path": "2"
    },
    "160": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "167": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "GT",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "178": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA"
    },
    "182": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7D882097"
    },
    "189": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CF"
    },
    "193": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "200": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E4"
    },
    "204": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA59A9973"
    },
    "211": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x215"
    },
    "215": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAD9ED66E"
    },
    "222": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22A"
    },
    "226": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "230": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMP",
      "path": "2"
    },
    "231": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x200D2ED2"
    },
    "238": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119"
    },
    "242": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x36201E53"
    },
    "249": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "253": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CCFD60B"
    },
    "260": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "264": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x645A0047"
    },
    "271": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D"
    },
    "275": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "279": {
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "280": {
      "first_revert": true,
      "fn": null,
      "offset": [
        167,
        2715
      ],
      "op": "REVERT",
      "path": "2"
    },
    "281": {
      "offset": [
        128,
        153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "282": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "283": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "284": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x125"
    },
    "288": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "292": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "REVERT",
      "path": "4"
    },
    "293": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "294": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "POP",
      "path": "4"
    },
    "295": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "298": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37A"
    },
    "301": {
      "fn": null,
      "jump": "i",
      "offset": [
        128,
        153
      ],
      "op": "JUMP",
      "path": "4"
    },
    "302": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "303": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "305": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "306": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "307": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP3",
      "path": "4"
    },
    "308": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "310": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "311": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "GT",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "313": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13E"
    },
    "316": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "317": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "INVALID",
      "path": "4"
    },
    "318": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "319": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "320": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "321": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "323": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "ADD",
      "path": "4"
    },
    "324": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "325": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "POP",
      "path": "4"
    },
    "326": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "POP",
      "path": "4"
    },
    "327": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "329": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "330": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "331": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "332": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "SUB",
      "path": "4"
    },
    "333": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "334": {
      "fn": null,
      "offset": [
        128,
        153
      ],
      "op": "RETURN",
      "path": "4"
    },
    "335": {
      "offset": [
        230,
        263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "336": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "337": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "DUP1",
      "path": "4"
    },
    "338": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "339": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B"
    },
    "342": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "343": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "345": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "DUP1",
      "path": "4"
    },
    "346": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "REVERT",
      "path": "4"
    },
    "347": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "348": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "POP",
      "path": "4"
    },
    "349": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "352": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38A"
    },
    "355": {
      "fn": null,
      "jump": "i",
      "offset": [
        230,
        263
      ],
      "op": "JUMP",
      "path": "4"
    },
    "356": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "357": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "359": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "DUP1",
      "path": "4"
    },
    "360": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "361": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "362": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "DUP3",
      "path": "4"
    },
    "363": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "364": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "365": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "366": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "DUP2",
      "path": "4"
    },
    "367": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "368": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "SUB",
      "path": "4"
    },
    "369": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "371": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "ADD",
      "path": "4"
    },
    "372": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "373": {
      "fn": null,
      "offset": [
        230,
        263
      ],
      "op": "RETURN",
      "path": "4"
    },
    "374": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "376": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "DUP1",
      "path": "2"
    },
    "377": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "378": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x182"
    },
    "381": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "382": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "384": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "DUP1",
      "path": "2"
    },
    "385": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "REVERT",
      "path": "2"
    },
    "386": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "387": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "POP",
      "path": "2"
    },
    "388": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B"
    },
    "391": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x390"
    },
    "394": {
      "fn": "AaveLossless.withdraw",
      "jump": "i",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMP",
      "path": "2"
    },
    "395": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "396": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "STOP",
      "path": "2"
    },
    "397": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "398": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "399": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "400": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "401": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199"
    },
    "404": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "405": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "407": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "REVERT",
      "path": "2"
    },
    "409": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "410": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "POP",
      "path": "2"
    },
    "411": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B"
    },
    "414": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "416": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "417": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "418": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "SUB",
      "path": "2"
    },
    "419": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "421": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "422": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "LT",
      "path": "2"
    },
    "423": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "424": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "427": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "428": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "430": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "431": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "REVERT",
      "path": "2"
    },
    "432": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "op": "POP"
    },
    "434": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "435": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "437": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "AND",
      "path": "2"
    },
    "438": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB"
    },
    "441": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "i",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "444": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "DUP1",
      "path": "6"
    },
    "445": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "446": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C6"
    },
    "449": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "450": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "452": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "DUP1",
      "path": "6"
    },
    "453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "REVERT",
      "path": "6"
    },
    "454": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "455": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "POP",
      "path": "6"
    },
    "456": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "459": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F2"
    },
    "462": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMP",
      "path": "6"
    },
    "463": {
      "offset": [
        196,
        224
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "464": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "465": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "DUP1",
      "path": "4"
    },
    "466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DB"
    },
    "470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "471": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "473": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "DUP1",
      "path": "4"
    },
    "474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "REVERT",
      "path": "4"
    },
    "475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "POP",
      "path": "4"
    },
    "477": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "480": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B0"
    },
    "483": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        196,
        224
      ],
      "op": "JUMP",
      "path": "4"
    },
    "484": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "485": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "486": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP1",
      "path": "6"
    },
    "487": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "488": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F0"
    },
    "491": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "492": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "494": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP1",
      "path": "6"
    },
    "495": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "REVERT",
      "path": "6"
    },
    "496": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "497": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "POP",
      "path": "6"
    },
    "498": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F9"
    },
    "501": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B6"
    },
    "504": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMP",
      "path": "6"
    },
    "505": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "508": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP1",
      "path": "6"
    },
    "509": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "SUB"
    },
    "518": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "519": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "520": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "AND",
      "path": "6"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP3",
      "path": "6"
    },
    "522": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "524": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "525": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP2",
      "path": "6"
    },
    "526": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "527": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SUB",
      "path": "6"
    },
    "528": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "530": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "ADD",
      "path": "6"
    },
    "531": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "532": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "RETURN",
      "path": "6"
    },
    "533": {
      "offset": [
        338,
        369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "534": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "535": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "536": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "537": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "540": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "541": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "543": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "544": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "REVERT",
      "path": "2"
    },
    "545": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "546": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "POP",
      "path": "2"
    },
    "547": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "550": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C6"
    },
    "553": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        338,
        369
      ],
      "op": "JUMP",
      "path": "2"
    },
    "554": {
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "555": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "556": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP1",
      "path": "4"
    },
    "557": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "558": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x236"
    },
    "561": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "562": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP1",
      "path": "4"
    },
    "565": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "REVERT",
      "path": "4"
    },
    "566": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "567": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "POP",
      "path": "4"
    },
    "568": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "571": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP1",
      "path": "4"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SUB",
      "path": "4"
    },
    "576": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "578": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "579": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "LT",
      "path": "4"
    },
    "580": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "581": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D"
    },
    "584": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "585": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "587": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP1",
      "path": "4"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "REVERT",
      "path": "4"
    },
    "589": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "offset": [
        366,
        402
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "592": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D5"
    },
    "595": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        366,
        402
      ],
      "op": "JUMP",
      "path": "4"
    },
    "596": {
      "offset": [
        408,
        444
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "597": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "598": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP1",
      "path": "4"
    },
    "599": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "600": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x260"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "604": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "606": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP1",
      "path": "4"
    },
    "607": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "REVERT",
      "path": "4"
    },
    "608": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "609": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "POP",
      "path": "4"
    },
    "610": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "613": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP1",
      "path": "4"
    },
    "616": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "617": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "SUB",
      "path": "4"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "620": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP2",
      "path": "4"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "LT",
      "path": "4"
    },
    "622": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "623": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x277"
    },
    "626": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "627": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "629": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP1",
      "path": "4"
    },
    "630": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "REVERT",
      "path": "4"
    },
    "631": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "offset": [
        408,
        444
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "634": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F3"
    },
    "637": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        408,
        444
      ],
      "op": "JUMP",
      "path": "4"
    },
    "638": {
      "offset": [
        159,
        190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "639": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "640": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "DUP1",
      "path": "4"
    },
    "641": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "642": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28A"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "646": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "648": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "DUP1",
      "path": "4"
    },
    "649": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "REVERT",
      "path": "4"
    },
    "650": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "651": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "POP",
      "path": "4"
    },
    "652": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "655": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x800"
    },
    "658": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        159,
        190
      ],
      "op": "JUMP",
      "path": "4"
    },
    "659": {
      "offset": [
        269,
        302
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "660": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "DUP1",
      "path": "4"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "663": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F"
    },
    "666": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "667": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "669": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "DUP1",
      "path": "4"
    },
    "670": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "REVERT",
      "path": "4"
    },
    "671": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "672": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "POP",
      "path": "4"
    },
    "673": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "676": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x806"
    },
    "679": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        269,
        302
      ],
      "op": "JUMP",
      "path": "4"
    },
    "680": {
      "offset": [
        337,
        360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "681": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "682": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "683": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "684": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B4"
    },
    "687": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "688": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "690": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "691": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "REVERT",
      "path": "4"
    },
    "692": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "693": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "POP",
      "path": "4"
    },
    "694": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80C"
    },
    "700": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        337,
        360
      ],
      "op": "JUMP",
      "path": "4"
    },
    "701": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "702": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B"
    },
    "705": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "707": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "708": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "709": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "SUB",
      "path": "2"
    },
    "710": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "712": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "713": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "LT",
      "path": "2"
    },
    "714": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "715": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3"
    },
    "718": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "719": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "721": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "722": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "REVERT",
      "path": "2"
    },
    "723": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "727": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "728": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "729": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "AND",
      "path": "2"
    },
    "730": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "731": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "733": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "ADD",
      "path": "2"
    },
    "734": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "735": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x812"
    },
    "738": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        745,
        1604
      ],
      "op": "JUMP",
      "path": "2"
    },
    "739": {
      "offset": [
        235,
        256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "740": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "741": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "DUP1",
      "path": "2"
    },
    "742": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "743": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF"
    },
    "746": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "747": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "749": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "DUP1",
      "path": "2"
    },
    "750": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "REVERT",
      "path": "2"
    },
    "751": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "752": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "POP",
      "path": "2"
    },
    "753": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "756": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3A"
    },
    "759": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        235,
        256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "760": {
      "offset": [
        308,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "761": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "762": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "DUP1",
      "path": "4"
    },
    "763": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "764": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x304"
    },
    "767": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "768": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "770": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "DUP1",
      "path": "4"
    },
    "771": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "REVERT",
      "path": "4"
    },
    "772": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "773": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "POP",
      "path": "4"
    },
    "774": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "777": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC49"
    },
    "780": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        308,
        331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "785": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x319"
    },
    "788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "REVERT",
      "path": "6"
    },
    "793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "794": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "SUB",
      "path": "6"
    },
    "803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "LT",
      "path": "6"
    },
    "807": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x330"
    },
    "811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "REVERT",
      "path": "6"
    },
    "816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "op": "SUB"
    },
    "827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "AND",
      "path": "6"
    },
    "828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC4F"
    },
    "831": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "832": {
      "offset": [
        262,
        288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DUP1",
      "path": "2"
    },
    "835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C"
    },
    "839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DUP1",
      "path": "2"
    },
    "843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "REVERT",
      "path": "2"
    },
    "844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "POP",
      "path": "2"
    },
    "846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355"
    },
    "849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD63"
    },
    "852": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        262,
        288
      ],
      "op": "JUMP",
      "path": "2"
    },
    "853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DUP1",
      "path": "2"
    },
    "858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DUP3",
      "path": "2"
    },
    "859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DUP2",
      "path": "2"
    },
    "862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "GT",
      "path": "2"
    },
    "863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E"
    },
    "867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "INVALID",
      "path": "2"
    },
    "869": {
      "offset": [
        209,
        229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371"
    },
    "876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "REVERT",
      "path": "2"
    },
    "881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "POP",
      "path": "2"
    },
    "883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD73"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        209,
        229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "890": {
      "offset": [
        128,
        153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        128,
        153
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "offset": [
        128,
        153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        128,
        153
      ],
      "op": "DIV",
      "path": "4"
    },
    "901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        128,
        153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        128,
        153
      ],
      "op": "AND",
      "path": "4"
    },
    "904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        128,
        153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "905": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        128,
        153
      ],
      "op": "JUMP",
      "path": "4"
    },
    "906": {
      "offset": [
        230,
        263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        230,
        263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        230,
        263
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        230,
        263
      ],
      "op": "DUP2",
      "path": "4"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        230,
        263
      ],
      "op": "JUMP",
      "path": "4"
    },
    "912": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "913": {
      "offset": [
        1107,
        1123
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "915": {
      "offset": [
        1097,
        1103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "917": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1103
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "922": {
      "op": "SHL"
    },
    "923": {
      "offset": [
        1097,
        1103
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "924": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1103
      ],
      "op": "DIV",
      "path": "4"
    },
    "925": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "927": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1103
      ],
      "op": "AND",
      "path": "4"
    },
    "928": {
      "offset": [
        1097,
        1123
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "930": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "DUP2",
      "path": "4"
    },
    "931": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "GT",
      "path": "4"
    },
    "932": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "933": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3AA"
    },
    "936": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "937": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "INVALID",
      "path": "4"
    },
    "938": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "939": {
      "branch": 62,
      "fn": "AaveLossless.withdraw",
      "offset": [
        1097,
        1123
      ],
      "op": "EQ",
      "path": "4"
    },
    "940": {
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3ED"
    },
    "943": {
      "branch": 62,
      "offset": [
        1089,
        1142
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "944": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "946": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "947": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "offset": [
        1089,
        1142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "956": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "957": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "959": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "961": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "962": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "963": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "964": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "966": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "968": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "969": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "970": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "971": {
      "op": "PUSH14",
      "value": "0x13585D18DA081B9BDD081C185A59"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "991": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "992": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "993": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "994": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "995": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "996": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "997": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "998": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "999": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "SUB",
      "path": "4"
    },
    "1000": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1002": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "1003": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1004": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1005": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1089,
        1142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1006": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1684,
        1694
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 0
    },
    "1007": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1696,
        1697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1009": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1010": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1011": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1012": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1014": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1016": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1017": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1019": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1020": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1021": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1670,
        1695
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1022": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1025": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1026": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1028": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1029": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1038": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1039": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1041": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1043": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1044": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "ADD",
      "path": "2"
    },
    "1045": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1046": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1048": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1050": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1051": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "ADD",
      "path": "2"
    },
    "1052": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1053": {
      "op": "PUSH15",
      "value": "0x62616C616E6365206973207A65726F"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1074": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1075": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "ADD",
      "path": "2"
    },
    "1076": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1077": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1078": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1079": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1080": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1081": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1082": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "SUB",
      "path": "2"
    },
    "1083": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1085": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "ADD",
      "path": "2"
    },
    "1086": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1087": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1088": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1662,
        1718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1089": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1759,
        1769
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1090": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1728,
        1742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1092": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1093": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1094": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1095": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1097": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1099": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1100": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1101": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1102": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1104": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1105": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1106": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1107": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1108": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1109": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1780,
        1809
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 1
    },
    "1110": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1780,
        1809
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1111": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1780,
        1809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1112": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1780,
        1809
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1113": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0xE"
    },
    "1115": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1116": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1117": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1118": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1127": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1128": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1130": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1131": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ADD",
      "path": "2"
    },
    "1132": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "1133": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1134": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "1135": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1136": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1138": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1139": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ADD",
      "path": "2"
    },
    "1140": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1141": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1142": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1143": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1144": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1145": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1146": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "op": "SUB"
    },
    "1155": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1156": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1157": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "AND",
      "path": "2"
    },
    "1158": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1159": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1841
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1164": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1841
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1165": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1167": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1168": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1169": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ADD",
      "path": "2"
    },
    "1170": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1171": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1172": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1745,
        1770
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1173": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1174": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1175": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1176": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1177": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SUB",
      "path": "2"
    },
    "1178": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ADD",
      "path": "2"
    },
    "1179": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1180": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1181": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1182": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1826,
        1831
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1183": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1184": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1185": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1186": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1187": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1188": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1191": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1192": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1194": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1195": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1196": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "POP",
      "path": "2"
    },
    "1198": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "GAS",
      "path": "2"
    },
    "1199": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "CALL",
      "path": "2"
    },
    "1200": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1201": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1202": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1203": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0"
    },
    "1206": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1207": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1208": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1210": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1211": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1212": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1213": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1215": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1216": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1217": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "POP",
      "path": "2"
    },
    "1218": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "POP",
      "path": "2"
    },
    "1219": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "POP",
      "path": "2"
    },
    "1220": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "POP",
      "path": "2"
    },
    "1221": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1223": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1224": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1225": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1227": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1228": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "LT",
      "path": "2"
    },
    "1229": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1230": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D6"
    },
    "1233": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1234": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1236": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1237": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1238": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        1819,
        1861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "fn": "AaveLossless.withdraw",
      "jump": "o",
      "offset": [
        1615,
        1869
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1243": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1244": {
      "offset": [
        994,
        1014
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1246": {
      "offset": [
        984,
        990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1248": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        990
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "offset": [
        984,
        990
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1255": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        990
      ],
      "op": "DIV",
      "path": "4"
    },
    "1256": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1258": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        990
      ],
      "op": "AND",
      "path": "4"
    },
    "1259": {
      "offset": [
        984,
        1014
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1261": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1262": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "GT",
      "path": "4"
    },
    "1263": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1264": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F5"
    },
    "1267": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1268": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "INVALID",
      "path": "4"
    },
    "1269": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1270": {
      "branch": 63,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        984,
        1014
      ],
      "op": "EQ",
      "path": "4"
    },
    "1271": {
      "offset": [
        976,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x53C"
    },
    "1274": {
      "branch": 63,
      "offset": [
        976,
        1037
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1275": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1277": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1278": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "offset": [
        976,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1287": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1288": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1290": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1292": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1293": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "1294": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1295": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "1297": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1299": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1300": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "1301": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1302": {
      "op": "PUSH18",
      "value": "0x13585D18DA081B9BDD08199A5B9A5CDA1959"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "1326": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1327": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "1328": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1329": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1330": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1331": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1332": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1333": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1334": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "SUB",
      "path": "4"
    },
    "1335": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1337": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "1338": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1339": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1340": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        976,
        1037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1341": {
      "offset": [
        1301,
        1313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x544"
    },
    "1344": {
      "offset": [
        1301,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD82"
    },
    "1347": {
      "jump": "i",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1348": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "SUB"
    },
    "1357": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "6"
    },
    "1358": {
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x555"
    },
    "1361": {
      "offset": [
        1290,
        1295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B6"
    },
    "1364": {
      "jump": "i",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1365": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "6"
    },
    "1375": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1290,
        1313
      ],
      "op": "EQ",
      "path": "6"
    },
    "1376": {
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B0"
    },
    "1379": {
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1380": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1382": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1383": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1392": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1393": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1395": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1397": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1398": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1399": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1400": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1401": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1402": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1404": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1405": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1406": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1407": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1440": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1442": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1443": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1444": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1445": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1446": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1447": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1448": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1449": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1450": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SUB",
      "path": "6"
    },
    "1451": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1453": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1454": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1455": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1456": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1457": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2006,
        2018
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "1459": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2002
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1460": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1462": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1463": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "GT",
      "path": "2"
    },
    "1464": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1465": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BE"
    },
    "1468": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1469": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1470": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1471": {
      "branch": 52,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2018
      ],
      "op": "EQ",
      "path": "2"
    },
    "1472": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2050
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1473": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D5"
    },
    "1476": {
      "branch": 52,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2050
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2038,
        2050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1480": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1481": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1483": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1484": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "GT",
      "path": "2"
    },
    "1485": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1486": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D3"
    },
    "1489": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1490": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1491": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1492": {
      "branch": 53,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2022,
        2050
      ],
      "op": "EQ",
      "path": "2"
    },
    "1493": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1990,
        2050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1494": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61F"
    },
    "1497": {
      "branch": 53,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1498": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1500": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1501": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1510": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1511": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1513": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1515": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1516": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "ADD",
      "path": "2"
    },
    "1517": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1518": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "1520": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1522": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1523": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "ADD",
      "path": "2"
    },
    "1524": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1525": {
      "op": "PUSH22",
      "value": "0x2BB937B7339034B7383ABA103337B9103BB4B73732B9"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1553": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1554": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "ADD",
      "path": "2"
    },
    "1555": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1556": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1557": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1558": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1559": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1560": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1561": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "SUB",
      "path": "2"
    },
    "1562": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1564": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "ADD",
      "path": "2"
    },
    "1565": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1566": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1567": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1982,
        2077
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1568": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2093
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x0"
    },
    "1570": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1571": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "op": "NOT"
    },
    "1583": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1584": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1585": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "AND",
      "path": "2"
    },
    "1586": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "OR",
      "path": "2"
    },
    "1587": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1588": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1589": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2087,
        2112
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1590": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2133
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0xF"
    },
    "1592": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1593": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1594": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2136,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1595": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2136,
        2148
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1596": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2136,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1603": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1605": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1606": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "GT",
      "path": "2"
    },
    "1607": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1608": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64D"
    },
    "1611": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1612": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1613": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1614": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "MUL",
      "path": "2"
    },
    "1615": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "1616": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1617": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2122,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x10"
    },
    "1621": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1622": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2179,
        2184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "1624": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2179,
        2184
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1625": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1627": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1628": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1629": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1638": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2179,
        2184
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1648": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2179,
        2184
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1649": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2179,
        2184
      ],
      "op": "AND",
      "path": "2"
    },
    "1650": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1652": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1653": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ADD",
      "path": "2"
    },
    "1654": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1657": {
      "op": "NOT"
    },
    "1658": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1660": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1661": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ADD",
      "path": "2"
    },
    "1662": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1663": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2210,
        2214
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1664": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1666": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1667": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ADD",
      "path": "2"
    },
    "1668": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1669": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1670": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1671": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1672": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1673": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1674": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "AND",
      "path": "2"
    },
    "1675": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1676": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2178
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69328DEC"
    },
    "1681": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2178
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1682": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1684": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1685": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1686": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ADD",
      "path": "2"
    },
    "1687": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1688": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1690": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1691": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1692": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1693": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1694": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1695": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "SUB",
      "path": "2"
    },
    "1696": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ADD",
      "path": "2"
    },
    "1697": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1698": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1700": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2169
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1701": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1702": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1703": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1704": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1705": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1706": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B2"
    },
    "1709": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1710": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1712": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1713": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1714": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1715": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "POP",
      "path": "2"
    },
    "1716": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "GAS",
      "path": "2"
    },
    "1717": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "CALL",
      "path": "2"
    },
    "1718": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1719": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1720": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1721": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C6"
    },
    "1724": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1725": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1726": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1728": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1729": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1730": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1731": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1733": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1734": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1735": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "POP",
      "path": "2"
    },
    "1736": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "POP",
      "path": "2"
    },
    "1737": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "POP",
      "path": "2"
    },
    "1738": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "POP",
      "path": "2"
    },
    "1739": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1741": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1742": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1743": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1745": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1746": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "LT",
      "path": "2"
    },
    "1747": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1748": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DC"
    },
    "1751": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1752": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1754": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1755": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1756": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2158,
        2216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2226,
        2238
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x6E7"
    },
    "1761": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2226,
        2238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2226,
        2236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD86"
    },
    "1766": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "i",
      "offset": [
        2226,
        2238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1767": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2226,
        2238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1768": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2248,
        2262
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x6EF"
    },
    "1771": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1E"
    },
    "1774": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "i",
      "offset": [
        2248,
        2262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1775": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        2248,
        2262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1776": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1875,
        2271
      ],
      "op": "POP",
      "path": "2"
    },
    "1777": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "o",
      "offset": [
        1875,
        2271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1779": {
      "offset": [
        1301,
        1313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FA"
    },
    "1782": {
      "offset": [
        1301,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD82"
    },
    "1785": {
      "jump": "i",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "op": "SUB"
    },
    "1795": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "6"
    },
    "1796": {
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70B"
    },
    "1799": {
      "offset": [
        1290,
        1295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B6"
    },
    "1802": {
      "jump": "i",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "6"
    },
    "1813": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1290,
        1313
      ],
      "op": "EQ",
      "path": "6"
    },
    "1814": {
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x766"
    },
    "1817": {
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1821": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1835": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1842": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1878": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1880": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1881": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1882": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1888": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SUB",
      "path": "6"
    },
    "1889": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1891": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "1892": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1893": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1816,
        1817
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "1897": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1901": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1911": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "AND",
      "path": "6"
    },
    "1913": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1914": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1947": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1948": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1816,
        1817
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1949": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1816,
        1817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1951": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1846,
        1847
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x0"
    },
    "1953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1954": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "op": "SUB"
    },
    "1963": {
      "op": "NOT"
    },
    "1964": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "AND",
      "path": "6"
    },
    "1965": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1966": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1967": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1968": {
      "offset": [
        196,
        224
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1969": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1971": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1972": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        196,
        224
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1973": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        196,
        224
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1974": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1975": {
      "fn": "Ownable.owner",
      "offset": [
        1124,
        1131
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1977": {
      "fn": "Ownable.owner",
      "offset": [
        1150,
        1156
      ],
      "op": "SLOAD",
      "path": "6",
      "statement": 11
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "fn": "Ownable.owner",
      "offset": [
        1150,
        1156
      ],
      "op": "AND",
      "path": "6"
    },
    "1987": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1988": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1989": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1990": {
      "offset": [
        338,
        369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1991": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "1993": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "offset": [
        338,
        369
      ],
      "op": "AND",
      "path": "2"
    },
    "2003": {
      "fn": "Ownable.owner",
      "offset": [
        338,
        369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2004": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        338,
        369
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2005": {
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2006": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2008": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2009": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2010": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2011": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2012": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "LT",
      "path": "4"
    },
    "2013": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E2"
    },
    "2016": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2017": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "INVALID",
      "path": "4"
    },
    "2018": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2019": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2021": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2022": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2023": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2024": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2026": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2027": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2028": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2029": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "ADD",
      "path": "4"
    },
    "2030": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2031": {
      "fn": "Ownable.owner",
      "offset": [
        366,
        402
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "offset": [
        366,
        402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2034": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        366,
        402
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2035": {
      "offset": [
        408,
        444
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2036": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2038": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2039": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2040": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2041": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2042": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "LT",
      "path": "4"
    },
    "2043": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E2"
    },
    "2046": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2047": {
      "fn": "Ownable.owner",
      "offset": [
        408,
        444
      ],
      "op": "INVALID",
      "path": "4"
    },
    "2048": {
      "offset": [
        159,
        190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2049": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2051": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2052": {
      "fn": "Ownable.owner",
      "offset": [
        159,
        190
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2053": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        159,
        190
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2054": {
      "offset": [
        269,
        302
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2055": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2057": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2058": {
      "fn": "Ownable.owner",
      "offset": [
        269,
        302
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2059": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        269,
        302
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2060": {
      "offset": [
        337,
        360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2061": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "2063": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2064": {
      "fn": "Ownable.owner",
      "offset": [
        337,
        360
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2065": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        337,
        360
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2066": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2067": {
      "offset": [
        813,
        829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2069": {
      "offset": [
        803,
        809
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2070": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        809
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "offset": [
        803,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2077": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        809
      ],
      "op": "DIV",
      "path": "4"
    },
    "2078": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        809
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2080": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        809
      ],
      "op": "AND",
      "path": "4"
    },
    "2081": {
      "offset": [
        803,
        829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2083": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2084": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "GT",
      "path": "4"
    },
    "2085": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2086": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82B"
    },
    "2089": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2090": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "INVALID",
      "path": "4"
    },
    "2091": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2092": {
      "branch": 64,
      "fn": "AaveLossless.placeBet",
      "offset": [
        803,
        829
      ],
      "op": "EQ",
      "path": "4"
    },
    "2093": {
      "offset": [
        795,
        848
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86E"
    },
    "2096": {
      "branch": 64,
      "offset": [
        795,
        848
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2097": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2099": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2100": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2101": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2107": {
      "op": "SHL"
    },
    "2108": {
      "offset": [
        795,
        848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2109": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2110": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2112": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2114": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2115": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "ADD",
      "path": "4"
    },
    "2116": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2117": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "2119": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "2121": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2122": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "ADD",
      "path": "4"
    },
    "2123": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2124": {
      "op": "PUSH14",
      "value": "0x26B0BA31B4103737BA1037B832B7"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "2144": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2145": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "ADD",
      "path": "4"
    },
    "2146": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2147": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2148": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2149": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2150": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2151": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2152": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "SUB",
      "path": "4"
    },
    "2153": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "2155": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "ADD",
      "path": "4"
    },
    "2156": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2157": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2158": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        795,
        848
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2159": {
      "offset": [
        881,
        897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2161": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        881,
        897
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2162": {
      "offset": [
        866,
        878
      ],
      "op": "NUMBER",
      "path": "4"
    },
    "2163": {
      "offset": [
        866,
        897
      ],
      "op": "LT",
      "path": "4"
    },
    "2164": {
      "offset": [
        858,
        920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B9"
    },
    "2167": {
      "offset": [
        858,
        920
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2168": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2170": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2171": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "offset": [
        858,
        920
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2180": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2181": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2183": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2185": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2186": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "ADD",
      "path": "4"
    },
    "2187": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2188": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "2190": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "2192": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2193": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "ADD",
      "path": "4"
    },
    "2194": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2195": {
      "op": "PUSH18",
      "value": "0x43616E7420706C61636520626574206E6F77"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "2219": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2220": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "ADD",
      "path": "4"
    },
    "2221": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2222": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2223": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2224": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2225": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2226": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2227": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "SUB",
      "path": "4"
    },
    "2228": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "2230": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "ADD",
      "path": "4"
    },
    "2231": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2232": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2233": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        858,
        920
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2234": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        847,
        848
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x0"
    },
    "2236": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        838,
        844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2237": {
      "branch": 54,
      "fn": "AaveLossless.placeBet",
      "offset": [
        838,
        848
      ],
      "op": "GT",
      "path": "2"
    },
    "2238": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x907"
    },
    "2241": {
      "branch": 54,
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2242": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2244": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2245": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2252": {
      "op": "SHL"
    },
    "2253": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2254": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2255": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2257": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2259": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2260": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "ADD",
      "path": "2"
    },
    "2261": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2262": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "2264": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2266": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2267": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "ADD",
      "path": "2"
    },
    "2268": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2269": {
      "op": "PUSH22",
      "value": "0x30B6B7BAB73A1036BAB9BA103132903837B9B4BA34B3"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2297": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2298": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "ADD",
      "path": "2"
    },
    "2299": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2300": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2301": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2302": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2303": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2304": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2305": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "SUB",
      "path": "2"
    },
    "2306": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2308": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "ADD",
      "path": "2"
    },
    "2309": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2310": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2311": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        830,
        875
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2312": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        904,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x1"
    },
    "2314": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        900
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2315": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2317": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2318": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "GT",
      "path": "2"
    },
    "2319": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2320": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x915"
    },
    "2323": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2324": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2325": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2326": {
      "branch": 55,
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        916
      ],
      "op": "EQ",
      "path": "2"
    },
    "2327": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        943
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2328": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92C"
    },
    "2331": {
      "branch": 55,
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        943
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        931,
        943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2335": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2336": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2338": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2339": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "GT",
      "path": "2"
    },
    "2340": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2341": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92A"
    },
    "2344": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2345": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2346": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2347": {
      "branch": 56,
      "fn": "AaveLossless.placeBet",
      "offset": [
        920,
        943
      ],
      "op": "EQ",
      "path": "2"
    },
    "2348": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        893,
        943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2349": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97D"
    },
    "2352": {
      "branch": 56,
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2353": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2355": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2356": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2365": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2366": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2368": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2370": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2371": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "ADD",
      "path": "2"
    },
    "2372": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2373": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "2375": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2377": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2378": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "ADD",
      "path": "2"
    },
    "2379": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2380": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x696E76616C696420617267756D656E7420666F72206265737469646500000000"
    },
    "2413": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2415": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2416": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "ADD",
      "path": "2"
    },
    "2417": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2418": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2419": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2420": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2421": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2422": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2423": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "SUB",
      "path": "2"
    },
    "2424": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2426": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "ADD",
      "path": "2"
    },
    "2427": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2428": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2429": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        885,
        976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2430": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1000,
        1012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2432": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        998
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2433": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2435": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2436": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "GT",
      "path": "2"
    },
    "2437": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2438": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x98B"
    },
    "2441": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2442": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2443": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2444": {
      "branch": 57,
      "fn": "AaveLossless.placeBet",
      "offset": [
        991,
        1012
      ],
      "op": "EQ",
      "path": "2"
    },
    "2445": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        987,
        1137
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2446": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        987,
        1137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x99F"
    },
    "2449": {
      "branch": 57,
      "fn": "AaveLossless.placeBet",
      "offset": [
        987,
        1137
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2450": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1028,
        1048
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x99A"
    },
    "2453": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1041,
        1047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2454": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1028,
        1040
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEC1"
    },
    "2457": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        1028,
        1048
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2458": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1028,
        1048
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2459": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        987,
        1137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BC"
    },
    "2462": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        987,
        1137
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2463": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        987,
        1137
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2464": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1078,
        1090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2466": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1076
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2467": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2469": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2470": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "GT",
      "path": "2"
    },
    "2471": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2472": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9AD"
    },
    "2475": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2476": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2477": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2478": {
      "branch": 58,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1069,
        1090
      ],
      "op": "EQ",
      "path": "2"
    },
    "2479": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1065,
        1137
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2480": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1065,
        1137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BC"
    },
    "2483": {
      "branch": 58,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1065,
        1137
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2484": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1106,
        1126
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x9BC"
    },
    "2487": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1119,
        1125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2488": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1106,
        1118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3A"
    },
    "2491": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        1106,
        1126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2492": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1106,
        1126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2493": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1160
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x2"
    },
    "2495": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2496": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1170
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2497": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2498": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1170
      ],
      "op": "ADD",
      "path": "2"
    },
    "2499": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2500": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1147,
        1170
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2501": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1194,
        1204
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 17
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2504": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2505": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2506": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2507": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1193
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2509": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2511": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2512": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2513": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2514": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2516": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2517": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2518": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2519": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1215
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2520": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2521": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1215
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2522": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1215
      ],
      "op": "ADD",
      "path": "2"
    },
    "2523": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2524": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1215
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2525": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "2527": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2528": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2529": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2530": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2539": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2540": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2542": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2543": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ADD",
      "path": "2"
    },
    "2544": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2545": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2546": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2547": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2548": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1330,
        1334
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2549": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2551": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2552": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ADD",
      "path": "2"
    },
    "2553": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2554": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2555": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2556": {
      "op": "SWAP3"
    },
    "2557": {
      "op": "SWAP4"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "SUB"
    },
    "2566": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2567": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2568": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "AND",
      "path": "2"
    },
    "2569": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2570": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1309
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "2575": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1309
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2576": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2578": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2579": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2580": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ADD",
      "path": "2"
    },
    "2581": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2582": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2583": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1180,
        1205
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2584": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2585": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2586": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2587": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SUB",
      "path": "2"
    },
    "2588": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ADD",
      "path": "2"
    },
    "2589": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2590": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1293,
        1298
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2591": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2592": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2593": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2594": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2595": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2596": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2C"
    },
    "2599": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2600": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2602": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2603": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2604": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2605": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "POP",
      "path": "2"
    },
    "2606": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "GAS",
      "path": "2"
    },
    "2607": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2608": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2609": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2610": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2611": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA40"
    },
    "2614": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2615": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2616": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2618": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2619": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2620": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2621": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2623": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2624": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2625": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "POP",
      "path": "2"
    },
    "2626": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "POP",
      "path": "2"
    },
    "2627": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "POP",
      "path": "2"
    },
    "2628": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "POP",
      "path": "2"
    },
    "2629": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2631": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2632": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2633": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2635": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2636": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "LT",
      "path": "2"
    },
    "2637": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2638": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA56"
    },
    "2641": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2642": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2644": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2645": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2646": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2649": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1286,
        1336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1354,
        1373
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 18
    },
    "2652": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1354,
        1373
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2653": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1354,
        1373
      ],
      "op": "LT",
      "path": "2"
    },
    "2654": {
      "branch": 59,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1354,
        1373
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2655": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAAF"
    },
    "2658": {
      "branch": 59,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2659": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2661": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2662": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2671": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2672": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2674": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2676": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2677": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "ADD",
      "path": "2"
    },
    "2678": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2679": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "2681": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2683": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2684": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "ADD",
      "path": "2"
    },
    "2685": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2686": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000"
    },
    "2719": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2721": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2722": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "ADD",
      "path": "2"
    },
    "2723": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2724": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2725": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2726": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2727": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2728": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2729": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "SUB",
      "path": "2"
    },
    "2730": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2732": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "ADD",
      "path": "2"
    },
    "2733": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2734": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2735": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1346,
        1403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2736": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0xE"
    },
    "2738": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2739": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2741": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2742": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2743": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2750": {
      "op": "SHL"
    },
    "2751": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2752": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2753": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1440,
        1450
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2754": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2756": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2757": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ADD",
      "path": "2"
    },
    "2758": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2759": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1460,
        1464
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2760": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2762": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2763": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ADD",
      "path": "2"
    },
    "2764": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2765": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2767": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2768": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ADD",
      "path": "2"
    },
    "2769": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2770": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2771": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2772": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2773": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2783": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2784": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "AND",
      "path": "2"
    },
    "2785": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2786": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "2791": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2792": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2794": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2795": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2796": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ADD",
      "path": "2"
    },
    "2797": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2798": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2800": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2801": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2802": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2803": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2804": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2805": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2806": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SUB",
      "path": "2"
    },
    "2807": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ADD",
      "path": "2"
    },
    "2808": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2809": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2811": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1420,
        1425
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2812": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2813": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2814": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2815": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2816": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2817": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB09"
    },
    "2820": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2821": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2823": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2824": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2825": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2826": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "POP",
      "path": "2"
    },
    "2827": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "GAS",
      "path": "2"
    },
    "2828": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "CALL",
      "path": "2"
    },
    "2829": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2830": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2831": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2832": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB1D"
    },
    "2835": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2836": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2837": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2839": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2840": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2841": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2842": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2844": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2845": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2846": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "POP",
      "path": "2"
    },
    "2847": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "POP",
      "path": "2"
    },
    "2848": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "POP",
      "path": "2"
    },
    "2849": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "POP",
      "path": "2"
    },
    "2850": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2852": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2853": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2854": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2856": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2857": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "LT",
      "path": "2"
    },
    "2858": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2859": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB33"
    },
    "2862": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2863": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2865": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2866": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2867": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0xE"
    },
    "2872": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2873": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1514,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "2875": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1514,
        1525
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2876": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2878": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2879": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2880": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2889": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "op": "SUB"
    },
    "2898": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1514,
        1525
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2899": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1514,
        1525
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2900": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1514,
        1525
      ],
      "op": "AND",
      "path": "2"
    },
    "2901": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2903": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2904": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ADD",
      "path": "2"
    },
    "2905": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2906": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2908": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2909": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ADD",
      "path": "2"
    },
    "2910": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2911": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2912": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2913": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2914": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2915": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2916": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2917": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2918": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "AND",
      "path": "2"
    },
    "2919": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2920": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1505
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "2925": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2926": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2928": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2929": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2930": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ADD",
      "path": "2"
    },
    "2931": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2932": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2934": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1413,
        1474
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2935": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2936": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2937": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2938": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2939": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "SUB",
      "path": "2"
    },
    "2940": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ADD",
      "path": "2"
    },
    "2941": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2942": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2944": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1491,
        1496
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2945": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2946": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2947": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2948": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2949": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2950": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8E"
    },
    "2953": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2954": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2956": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2957": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2958": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2959": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "POP",
      "path": "2"
    },
    "2960": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "GAS",
      "path": "2"
    },
    "2961": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "CALL",
      "path": "2"
    },
    "2962": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2963": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2964": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2965": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA2"
    },
    "2968": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2969": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2970": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2972": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2973": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2974": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2975": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2977": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2978": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2979": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "POP",
      "path": "2"
    },
    "2980": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "POP",
      "path": "2"
    },
    "2981": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "POP",
      "path": "2"
    },
    "2982": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "POP",
      "path": "2"
    },
    "2983": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2985": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2986": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2987": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2989": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2990": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "LT",
      "path": "2"
    },
    "2991": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2992": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB8"
    },
    "2995": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2996": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2998": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2999": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3000": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1484,
        1535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3001": {
      "op": "POP"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x10"
    },
    "3005": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3006": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1565,
        1570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "3008": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1565,
        1570
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3009": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3011": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3012": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3013": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3022": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "op": "SUB"
    },
    "3031": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1565,
        1570
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3032": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1565,
        1570
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3033": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1565,
        1570
      ],
      "op": "AND",
      "path": "2"
    },
    "3034": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3036": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3037": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ADD",
      "path": "2"
    },
    "3038": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3039": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3041": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3042": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ADD",
      "path": "2"
    },
    "3043": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3044": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3045": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3046": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1588,
        1592
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3047": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3049": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3050": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ADD",
      "path": "2"
    },
    "3051": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3052": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3054": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3056": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3057": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ADD",
      "path": "2"
    },
    "3058": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3059": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3061": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3062": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3063": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3064": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3065": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3066": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "AND",
      "path": "2"
    },
    "3067": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3068": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1564
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8EDA9DF"
    },
    "3073": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3074": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x84"
    },
    "3076": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3077": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3078": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ADD",
      "path": "2"
    },
    "3079": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3080": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3081": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3082": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3083": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "SUB",
      "path": "2"
    },
    "3084": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ADD",
      "path": "2"
    },
    "3085": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3086": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3087": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1556
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3088": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3089": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3090": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3091": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3092": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3093": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1D"
    },
    "3096": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3097": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3099": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3100": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3101": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3102": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "POP",
      "path": "2"
    },
    "3103": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "GAS",
      "path": "2"
    },
    "3104": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "CALL",
      "path": "2"
    },
    "3105": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3106": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3107": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3108": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC31"
    },
    "3111": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3112": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3113": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3115": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3116": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3117": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3118": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3120": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3121": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3122": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "POP",
      "path": "2"
    },
    "3123": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "POP",
      "path": "2"
    },
    "3124": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "POP",
      "path": "2"
    },
    "3125": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1545,
        1596
      ],
      "op": "POP",
      "path": "2"
    },
    "3126": {
      "offset": [
        930,
        931
      ],
      "op": "POP",
      "path": "4"
    },
    "3127": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "POP",
      "path": "2"
    },
    "3128": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        745,
        1604
      ],
      "op": "POP",
      "path": "2"
    },
    "3129": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        745,
        1604
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3130": {
      "offset": [
        235,
        256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3131": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "3133": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "SUB"
    },
    "3142": {
      "offset": [
        235,
        256
      ],
      "op": "AND",
      "path": "2"
    },
    "3143": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        235,
        256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3144": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        235,
        256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3145": {
      "offset": [
        308,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3146": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "3148": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3149": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        308,
        331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3150": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        308,
        331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3152": {
      "offset": [
        1301,
        1313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC57"
    },
    "3155": {
      "offset": [
        1301,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD82"
    },
    "3158": {
      "jump": "i",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "op": "SUB"
    },
    "3168": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "6"
    },
    "3169": {
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC68"
    },
    "3172": {
      "offset": [
        1290,
        1295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B6"
    },
    "3175": {
      "jump": "i",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "6"
    },
    "3186": {
      "branch": 71,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1290,
        1313
      ],
      "op": "EQ",
      "path": "6"
    },
    "3187": {
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC3"
    },
    "3190": {
      "branch": 71,
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3201": {
      "op": "SHL"
    },
    "3202": {
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "3210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "3215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "3217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "3253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "3255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SUB",
      "path": "6"
    },
    "3262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "3264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "3265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3274": {
      "op": "SHL"
    },
    "3275": {
      "op": "SUB"
    },
    "3276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2092,
        2114
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 22
    },
    "3277": {
      "branch": 72,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2092,
        2114
      ],
      "op": "AND",
      "path": "6"
    },
    "3278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD08"
    },
    "3281": {
      "branch": 72,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3282": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3285": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "6"
    },
    "3297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3299": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "6"
    },
    "3302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SUB",
      "path": "6"
    },
    "3305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "3309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "6"
    },
    "3314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1251"
    },
    "3318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "3320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "3322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "6"
    },
    "3325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "POP",
      "path": "6"
    },
    "3327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "POP",
      "path": "6"
    },
    "3328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SUB",
      "path": "6"
    },
    "3334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x0"
    },
    "3339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "op": "SUB"
    },
    "3352": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3353": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "AND",
      "path": "6"
    },
    "3355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3356": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "AND",
      "path": "6"
    },
    "3358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3392": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3393": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "LOG3",
      "path": "6"
    },
    "3394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2226
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x0"
    },
    "3396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "op": "SUB"
    },
    "3406": {
      "op": "NOT"
    },
    "3407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "AND",
      "path": "6"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3414": {
      "op": "SHL"
    },
    "3415": {
      "op": "SUB"
    },
    "3416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "AND",
      "path": "6"
    },
    "3420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "OR",
      "path": "6"
    },
    "3424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3426": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3427": {
      "offset": [
        262,
        288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "3430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "offset": [
        262,
        288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DIV",
      "path": "2"
    },
    "3438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "AND",
      "path": "2"
    },
    "3441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        262,
        288
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3442": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        262,
        288
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3443": {
      "offset": [
        209,
        229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "3446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3453": {
      "op": "SHL"
    },
    "3454": {
      "op": "SUB"
    },
    "3455": {
      "offset": [
        209,
        229
      ],
      "op": "AND",
      "path": "2"
    },
    "3456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        209,
        229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3457": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        209,
        229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3458": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3459": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 25
    },
    "3460": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3461": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3462": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2277,
        2495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3463": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2336,
        2348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3465": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "3467": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3474": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2332
      ],
      "op": "DIV",
      "path": "2"
    },
    "3475": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3477": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2332
      ],
      "op": "AND",
      "path": "2"
    },
    "3478": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3480": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3481": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "GT",
      "path": "2"
    },
    "3482": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3483": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA0"
    },
    "3486": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3487": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "INVALID",
      "path": "2"
    },
    "3488": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3489": {
      "branch": 60,
      "fn": "AaveLossless.findWinner",
      "offset": [
        2321,
        2348
      ],
      "op": "EQ",
      "path": "2"
    },
    "3490": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2318,
        2489
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3491": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2318,
        2489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD3"
    },
    "3494": {
      "branch": 60,
      "fn": "AaveLossless.findWinner",
      "offset": [
        2318,
        2489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3495": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2373,
        2389
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 26,
      "value": "0xDAE"
    },
    "3498": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2373,
        2387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB3"
    },
    "3501": {
      "fn": "AaveLossless.findWinner",
      "jump": "i",
      "offset": [
        2373,
        2389
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3502": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2373,
        2389
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3503": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "3505": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3506": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "op": "SUB"
    },
    "3515": {
      "op": "NOT"
    },
    "3516": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "AND",
      "path": "2"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3526": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3527": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3528": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "AND",
      "path": "2"
    },
    "3529": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3530": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3531": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3532": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "OR",
      "path": "2"
    },
    "3533": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3534": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2364,
        2389
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3535": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2318,
        2489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1C"
    },
    "3538": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2318,
        2489
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3539": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2318,
        2489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3540": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2425,
        2437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3542": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "3544": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2421
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3549": {
      "op": "SHL"
    },
    "3550": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3551": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2421
      ],
      "op": "DIV",
      "path": "2"
    },
    "3552": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3554": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2421
      ],
      "op": "AND",
      "path": "2"
    },
    "3555": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3557": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3558": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "GT",
      "path": "2"
    },
    "3559": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3560": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDED"
    },
    "3563": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3564": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "INVALID",
      "path": "2"
    },
    "3565": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3566": {
      "branch": 61,
      "fn": "AaveLossless.findWinner",
      "offset": [
        2410,
        2437
      ],
      "op": "EQ",
      "path": "2"
    },
    "3567": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2406,
        2489
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3568": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2406,
        2489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1C"
    },
    "3571": {
      "branch": 61,
      "fn": "AaveLossless.findWinner",
      "offset": [
        2406,
        2489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3572": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2462,
        2478
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 27,
      "value": "0xDFB"
    },
    "3575": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2462,
        2476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E5"
    },
    "3578": {
      "fn": "AaveLossless.findWinner",
      "jump": "i",
      "offset": [
        2462,
        2478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3579": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2462,
        2478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3580": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "3582": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3583": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "op": "NOT"
    },
    "3593": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "AND",
      "path": "2"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "op": "SUB"
    },
    "3602": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3603": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3604": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3605": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "AND",
      "path": "2"
    },
    "3606": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3607": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3608": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3609": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "OR",
      "path": "2"
    },
    "3610": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3611": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2453,
        2478
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3612": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        2406,
        2489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3613": {
      "fn": "AaveLossless.findWinner",
      "jump": "o",
      "offset": [
        2277,
        2495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3614": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2501,
        2676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3615": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2609,
        2622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3617": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2609,
        2622
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3618": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2575,
        2580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "3620": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2575,
        2580
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3621": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3623": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3624": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3625": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3632": {
      "op": "SHL"
    },
    "3633": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3634": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3635": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2600,
        2604
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3636": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3638": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3639": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ADD",
      "path": "2"
    },
    "3640": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3641": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3642": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3643": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2545,
        2565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3645": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2545,
        2565
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3646": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2609,
        2622
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2575,
        2580
      ],
      "op": "AND",
      "path": "2"
    },
    "3656": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2575,
        2580
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3657": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2591
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "3662": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3663": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3665": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3666": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3667": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ADD",
      "path": "2"
    },
    "3668": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3669": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3671": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3672": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3673": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3674": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3675": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3676": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "SUB",
      "path": "2"
    },
    "3677": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ADD",
      "path": "2"
    },
    "3678": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3679": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2575,
        2580
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3680": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3681": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3682": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3683": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3684": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3685": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6D"
    },
    "3688": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3689": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3691": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3692": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3693": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3694": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "POP",
      "path": "2"
    },
    "3695": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "GAS",
      "path": "2"
    },
    "3696": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "3697": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3698": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3699": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3700": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE81"
    },
    "3703": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3704": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3705": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3707": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3708": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3709": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3710": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3712": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3713": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3714": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "POP",
      "path": "2"
    },
    "3715": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "POP",
      "path": "2"
    },
    "3716": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "POP",
      "path": "2"
    },
    "3717": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "POP",
      "path": "2"
    },
    "3718": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3720": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3721": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3722": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3724": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3725": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "LT",
      "path": "2"
    },
    "3726": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3727": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE97"
    },
    "3730": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3731": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3733": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3734": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3735": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3738": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2646,
        2652
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0xF"
    },
    "3740": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2646,
        2652
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3747": {
      "op": "SHL"
    },
    "3748": {
      "op": "SUB"
    },
    "3749": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2646,
        2652
      ],
      "op": "AND",
      "path": "2"
    },
    "3750": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3752": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3753": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3754": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3755": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3757": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3759": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3760": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3762": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3763": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2653
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3764": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3765": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3766": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2622
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3767": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2622
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3768": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2622
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3769": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2568,
        2622
      ],
      "op": "SUB",
      "path": "2"
    },
    "3770": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3771": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3772": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "ADD",
      "path": "2"
    },
    "3773": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3774": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        2632,
        2669
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "fn": "AaveLossless.payoutWinner",
      "jump": "o",
      "offset": [
        2501,
        2676
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3777": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1333,
        1725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3778": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1463,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3780": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1463,
        1479
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3781": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1522,
        1532
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 29
    },
    "3782": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1390,
        1410
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3784": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3785": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3786": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3787": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1521
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "3789": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3791": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3792": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3794": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3795": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1533
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3796": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3797": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3798": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1413,
        1425
      ],
      "op": "NUMBER",
      "path": "4"
    },
    "3799": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1463,
        1494
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3800": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1463,
        1494
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3801": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1463,
        1494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3802": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1463,
        1494
      ],
      "op": "SUB",
      "path": "4"
    },
    "3803": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1452,
        1495
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3804": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1452,
        1495
      ],
      "op": "MUL",
      "path": "4"
    },
    "3805": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3806": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3807": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "ADD",
      "path": "4"
    },
    "3808": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3809": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3810": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1505,
        1543
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3811": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1571
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 30,
      "value": "0x3"
    },
    "3813": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3814": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3815": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3816": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "ADD",
      "path": "4"
    },
    "3817": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3818": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3819": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3820": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1553,
        1581
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3821": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1610,
        1618
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 31,
      "value": "0x5"
    },
    "3823": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1610,
        1618
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3824": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1609
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "3826": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3827": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3828": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3829": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1609
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3830": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1610,
        1618
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3831": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3832": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "LT",
      "path": "4"
    },
    "3833": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEFE"
    },
    "3836": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3837": {
      "dev": "Index out of range",
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "INVALID",
      "path": "4"
    },
    "3838": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3839": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3841": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3842": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3843": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3844": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3846": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3847": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3848": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3849": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3850": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3851": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1619
      ],
      "op": "ADD",
      "path": "4"
    },
    "3852": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1640
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3853": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3854": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1640
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3855": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1591,
        1640
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3856": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1664,
        1672
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 32,
      "value": "0x5"
    },
    "3858": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1664,
        1672
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3859": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1664,
        1672
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3860": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3861": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3862": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1663
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "3864": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3865": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3866": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3867": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3869": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3870": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1673
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3871": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3872": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3879": {
      "op": "SHL"
    },
    "3880": {
      "op": "SUB"
    },
    "3881": {
      "op": "NOT"
    },
    "3882": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "AND",
      "path": "4"
    },
    "3883": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1676,
        1686
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3884": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "OR",
      "path": "4"
    },
    "3885": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3886": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3887": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1696,
        1709
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 33
    },
    "3888": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1696,
        1709
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3889": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1650,
        1686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3891": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1696,
        1709
      ],
      "op": "ADD",
      "path": "4"
    },
    "3892": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1696,
        1709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3893": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        1696,
        1709
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3894": {
      "op": "POP"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "fn": "Lossless.placeHomeBet",
      "jump": "o",
      "offset": [
        1333,
        1725
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3898": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1731,
        2122
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3899": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1860,
        1876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3901": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1860,
        1876
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3902": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1919,
        1929
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 34
    },
    "3903": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1788,
        1808
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3905": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3906": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3907": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3908": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1918
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "3910": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3912": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3913": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3915": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3916": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1930
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3917": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3918": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3919": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1811,
        1823
      ],
      "op": "NUMBER",
      "path": "4"
    },
    "3920": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1860,
        1891
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3921": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1860,
        1891
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3922": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1860,
        1891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3923": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1860,
        1891
      ],
      "op": "SUB",
      "path": "4"
    },
    "3924": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1850,
        1892
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3925": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1850,
        1892
      ],
      "op": "MUL",
      "path": "4"
    },
    "3926": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3927": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3928": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "ADD",
      "path": "4"
    },
    "3929": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3930": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3931": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1902,
        1940
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3932": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1968
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 35,
      "value": "0x4"
    },
    "3934": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3935": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3936": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3937": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "ADD",
      "path": "4"
    },
    "3938": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3939": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3940": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3941": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1950,
        1978
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3942": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2007,
        2015
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 36,
      "value": "0x6"
    },
    "3944": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2007,
        2015
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3945": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2006
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "3947": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3948": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3949": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2006
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3950": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2006
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3951": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2007,
        2015
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3952": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3953": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "LT",
      "path": "4"
    },
    "3954": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF77"
    },
    "3957": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3958": {
      "dev": "Index out of range",
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "INVALID",
      "path": "4"
    },
    "3959": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3960": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3962": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3963": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3964": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3965": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3967": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3968": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3969": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3970": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3971": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3972": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2016
      ],
      "op": "ADD",
      "path": "4"
    },
    "3973": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2037
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3974": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3975": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2037
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3976": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        1988,
        2037
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3977": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2061,
        2069
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 37,
      "value": "0x6"
    },
    "3979": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2061,
        2069
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3980": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2061,
        2069
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3981": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3982": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3983": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3985": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3986": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3987": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3988": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3990": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3991": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2070
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3992": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3993": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4000": {
      "op": "SHL"
    },
    "4001": {
      "op": "SUB"
    },
    "4002": {
      "op": "NOT"
    },
    "4003": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "AND",
      "path": "4"
    },
    "4004": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2073,
        2083
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4005": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "OR",
      "path": "4"
    },
    "4006": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4007": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4008": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2093,
        2106
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 38
    },
    "4009": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2093,
        2106
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4010": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2047,
        2083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4012": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2093,
        2106
      ],
      "op": "ADD",
      "path": "4"
    },
    "4013": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2093,
        2106
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4014": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        2093,
        2106
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4015": {
      "op": "POP"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "fn": "Lossless.placeAwayBet",
      "jump": "o",
      "offset": [
        1731,
        2122
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4019": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2129,
        2792
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4020": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2172,
        2179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4022": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2191,
        2205
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4023": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2208,
        2216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFBE"
    },
    "4026": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2208,
        2214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1217"
    },
    "4029": {
      "fn": "Lossless.findHomeWinner",
      "jump": "i",
      "offset": [
        2208,
        2216
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4030": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2208,
        2216
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4031": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2191,
        2216
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4032": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2191,
        2216
      ],
      "op": "POP",
      "path": "4"
    },
    "4033": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 39,
      "value": "0x3"
    },
    "4035": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2244,
        2262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4036": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2241
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4037": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4038": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFCB"
    },
    "4041": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2262
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4042": {
      "dev": "Modulus by zero",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2262
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4043": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2262
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4044": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2235,
        2262
      ],
      "op": "MOD",
      "path": "4"
    },
    "4045": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2226,
        2262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4046": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2226,
        2262
      ],
      "op": "POP",
      "path": "4"
    },
    "4047": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2303
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "4049": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2304,
        2305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4051": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4052": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4053": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4054": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "LT",
      "path": "4"
    },
    "4055": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFDC"
    },
    "4058": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4059": {
      "dev": "Index out of range",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4060": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4061": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4062": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4064": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4065": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4067": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4069": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4070": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "ADD",
      "path": "4"
    },
    "4071": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2285,
        2306
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4072": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2276,
        2282
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4073": {
      "branch": 65,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2276,
        2306
      ],
      "op": "LT",
      "path": "4"
    },
    "4074": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2273,
        2356
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4075": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2273,
        2356
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1029"
    },
    "4078": {
      "branch": 65,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2273,
        2356
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 40,
      "value": "0x0"
    },
    "4083": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4084": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4085": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2342
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "4087": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4089": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4090": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B"
    },
    "4123": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4130": {
      "op": "SHL"
    },
    "4131": {
      "op": "SUB"
    },
    "4132": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2329,
        2345
      ],
      "op": "AND",
      "path": "4"
    },
    "4133": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2322,
        2345
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C3"
    },
    "4136": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2322,
        2345
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4137": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2273,
        2356
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4138": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2376,
        2394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "4140": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2376,
        2401
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4143": {
      "op": "NOT"
    },
    "4144": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2376,
        2403
      ],
      "op": "ADD",
      "path": "4"
    },
    "4145": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2402,
        2403
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4147": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4148": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2447,
        2449
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4149": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2441,
        2443
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4150": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2441,
        2449
      ],
      "op": "GT",
      "path": "4"
    },
    "4151": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C6"
    },
    "4154": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4155": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2465,
        2476
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4157": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2492,
        2493
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "4159": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2485,
        2490
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4160": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2485,
        2490
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4161": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2485,
        2490
      ],
      "op": "SUB",
      "path": "4"
    },
    "4162": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2484,
        2493
      ],
      "op": "DIV",
      "path": "4"
    },
    "4163": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2479,
        2481
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4164": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2479,
        2493
      ],
      "op": "ADD",
      "path": "4"
    },
    "4165": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2465,
        2493
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4166": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2465,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "4167": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "4169": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2538,
        2541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4170": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4171": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4172": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4173": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "LT",
      "path": "4"
    },
    "4174": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1053"
    },
    "4177": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4178": {
      "dev": "Index out of range",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4179": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4180": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4181": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4183": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4184": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4186": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4188": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4189": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "ADD",
      "path": "4"
    },
    "4190": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2519,
        2542
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4191": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2510,
        2516
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4192": {
      "branch": 66,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2510,
        2542
      ],
      "op": "LT",
      "path": "4"
    },
    "4193": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2507,
        2741
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4194": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2507,
        2741
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1070"
    },
    "4197": {
      "branch": 66,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2507,
        2741
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4198": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2570,
        2571
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 41,
      "value": "0x1"
    },
    "4200": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2566,
        2569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4201": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2566,
        2571
      ],
      "op": "SUB",
      "path": "4"
    },
    "4202": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2561,
        2571
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4203": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2561,
        2571
      ],
      "op": "POP",
      "path": "4"
    },
    "4204": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2507,
        2741
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C0"
    },
    "4207": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2507,
        2741
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4208": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2507,
        2741
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4209": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "4211": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2624,
        2627
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4212": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4213": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4214": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4215": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "LT",
      "path": "4"
    },
    "4216": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x107D"
    },
    "4219": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4220": {
      "dev": "Index out of range",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4221": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4222": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4223": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4225": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4226": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4228": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4230": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4231": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "ADD",
      "path": "4"
    },
    "4232": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2605,
        2628
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4233": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2597,
        2603
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4234": {
      "branch": 67,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2597,
        2628
      ],
      "op": "GT",
      "path": "4"
    },
    "4235": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4236": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x109A"
    },
    "4239": {
      "branch": 67,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4240": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2653,
        2656
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 42
    },
    "4241": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2659,
        2660
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4243": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2653,
        2660
      ],
      "op": "ADD",
      "path": "4"
    },
    "4244": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2648,
        2660
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4245": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2648,
        2660
      ],
      "op": "POP",
      "path": "4"
    },
    "4246": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C0"
    },
    "4249": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4250": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4251": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2724,
        2725
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x1"
    },
    "4253": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2720,
        2725
      ],
      "op": "ADD",
      "path": "4"
    },
    "4254": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4256": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4257": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4258": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4259": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "4261": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4263": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4264": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4266": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4267": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4268": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4275": {
      "op": "SHL"
    },
    "4276": {
      "op": "SUB"
    },
    "4277": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "AND",
      "path": "4"
    },
    "4278": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2706,
        2726
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2699,
        2726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C3"
    },
    "4283": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2699,
        2726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4284": {
      "op": "POP"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2699,
        2726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4288": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2593,
        2741
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4289": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "POP",
      "path": "4"
    },
    "4290": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1033"
    },
    "4293": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4294": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2435,
        2751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4295": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 44,
      "value": "0x0"
    },
    "4297": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4298": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4299": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4300": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2780
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "4302": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4304": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4305": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4307": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4308": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4309": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4316": {
      "op": "SHL"
    },
    "4317": {
      "op": "SUB"
    },
    "4318": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "AND",
      "path": "4"
    },
    "4319": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2767,
        2784
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        2129,
        2792
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4324": {
      "fn": "Lossless.findHomeWinner",
      "jump": "o",
      "offset": [
        2129,
        2792
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4325": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2798,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4326": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2841,
        2848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4328": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2860,
        2874
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4329": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2877,
        2885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F0"
    },
    "4332": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2877,
        2883
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1217"
    },
    "4335": {
      "fn": "Lossless.findAwayWinner",
      "jump": "i",
      "offset": [
        2877,
        2885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4336": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2877,
        2885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4337": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2860,
        2885
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4338": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2860,
        2885
      ],
      "op": "POP",
      "path": "4"
    },
    "4339": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2913,
        2931
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 45,
      "value": "0x4"
    },
    "4341": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2913,
        2931
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4342": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2910
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4343": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2931
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4344": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2931
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10FD"
    },
    "4347": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2931
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4348": {
      "dev": "Modulus by zero",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2931
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4349": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2931
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4350": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2904,
        2931
      ],
      "op": "MOD",
      "path": "4"
    },
    "4351": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2895,
        2931
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4352": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2895,
        2931
      ],
      "op": "POP",
      "path": "4"
    },
    "4353": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4355": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2973,
        2974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4357": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4358": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4359": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4360": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "LT",
      "path": "4"
    },
    "4361": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x110E"
    },
    "4364": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4365": {
      "dev": "Index out of range",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4366": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4367": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4368": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4370": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4371": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4373": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4375": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4376": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "ADD",
      "path": "4"
    },
    "4377": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2954,
        2975
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4378": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2945,
        2951
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4379": {
      "branch": 68,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2945,
        2975
      ],
      "op": "LT",
      "path": "4"
    },
    "4380": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2942,
        3025
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4381": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2942,
        3025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115B"
    },
    "4384": {
      "branch": 68,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2942,
        3025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "op": "POP"
    },
    "4387": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 46,
      "value": "0x0"
    },
    "4389": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4390": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4391": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "4393": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4395": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4396": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3"
    },
    "4429": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4436": {
      "op": "SHL"
    },
    "4437": {
      "op": "SUB"
    },
    "4438": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2998,
        3014
      ],
      "op": "AND",
      "path": "4"
    },
    "4439": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2991,
        3014
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C3"
    },
    "4442": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2991,
        3014
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4443": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2942,
        3025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4444": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3045,
        3063
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4446": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3045,
        3070
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4449": {
      "op": "NOT"
    },
    "4450": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3045,
        3072
      ],
      "op": "ADD",
      "path": "4"
    },
    "4451": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3071,
        3072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4453": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4454": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3116,
        3118
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4455": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3110,
        3112
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4456": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3110,
        3118
      ],
      "op": "GT",
      "path": "4"
    },
    "4457": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F8"
    },
    "4460": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4461": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3134,
        3145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4463": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3161,
        3162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "4465": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3154,
        3159
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4466": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3154,
        3159
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4467": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3154,
        3159
      ],
      "op": "SUB",
      "path": "4"
    },
    "4468": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3153,
        3162
      ],
      "op": "DIV",
      "path": "4"
    },
    "4469": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3148,
        3150
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4470": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3148,
        3162
      ],
      "op": "ADD",
      "path": "4"
    },
    "4471": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3134,
        3162
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4472": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3134,
        3162
      ],
      "op": "POP",
      "path": "4"
    },
    "4473": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3206
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4475": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3207,
        3210
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4476": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4477": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4478": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4479": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "LT",
      "path": "4"
    },
    "4480": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1185"
    },
    "4483": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4484": {
      "dev": "Index out of range",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4485": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4486": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4487": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4489": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4490": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4492": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4494": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4495": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "ADD",
      "path": "4"
    },
    "4496": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3188,
        3211
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4497": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3179,
        3185
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4498": {
      "branch": 69,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3179,
        3211
      ],
      "op": "LT",
      "path": "4"
    },
    "4499": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3176,
        3410
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4500": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3176,
        3410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11A2"
    },
    "4503": {
      "branch": 69,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3176,
        3410
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4504": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3239,
        3240
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 47,
      "value": "0x1"
    },
    "4506": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3235,
        3238
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4507": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3235,
        3240
      ],
      "op": "SUB",
      "path": "4"
    },
    "4508": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3230,
        3240
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4509": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3230,
        3240
      ],
      "op": "POP",
      "path": "4"
    },
    "4510": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3176,
        3410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F2"
    },
    "4513": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3176,
        3410
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4514": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3176,
        3410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4515": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4517": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3293,
        3296
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4518": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4519": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4520": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4521": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "LT",
      "path": "4"
    },
    "4522": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11AF"
    },
    "4525": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4526": {
      "dev": "Index out of range",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4527": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4528": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4529": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4531": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4532": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4534": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4536": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4537": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "ADD",
      "path": "4"
    },
    "4538": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3274,
        3297
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4539": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3266,
        3272
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4540": {
      "branch": 70,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3266,
        3297
      ],
      "op": "GT",
      "path": "4"
    },
    "4541": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4542": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11CC"
    },
    "4545": {
      "branch": 70,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4546": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3322,
        3325
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 48
    },
    "4547": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3328,
        3329
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4549": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3322,
        3329
      ],
      "op": "ADD",
      "path": "4"
    },
    "4550": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3317,
        3329
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4551": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3317,
        3329
      ],
      "op": "POP",
      "path": "4"
    },
    "4552": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F2"
    },
    "4555": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4556": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4557": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3393,
        3394
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 49,
      "value": "0x1"
    },
    "4559": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3389,
        3394
      ],
      "op": "ADD",
      "path": "4"
    },
    "4560": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4562": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4563": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4564": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4565": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3388
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "4567": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4569": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4570": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4572": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4573": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4574": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4581": {
      "op": "SHL"
    },
    "4582": {
      "op": "SUB"
    },
    "4583": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "AND",
      "path": "4"
    },
    "4584": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3375,
        3395
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4585": {
      "op": "POP"
    },
    "4586": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3368,
        3395
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C3"
    },
    "4589": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3368,
        3395
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "POP"
    },
    "4593": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3368,
        3395
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4594": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3262,
        3410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4595": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "POP",
      "path": "4"
    },
    "4596": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1165"
    },
    "4599": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4600": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3104,
        3420
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4601": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 50,
      "value": "0x0"
    },
    "4603": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4604": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4605": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4606": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "4608": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4610": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4611": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4613": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4614": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4615": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "op": "SUB"
    },
    "4624": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "AND",
      "path": "4"
    },
    "4625": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        3436,
        3453
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4626": {
      "op": "POP"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        2798,
        3461
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4630": {
      "fn": "Lossless.findAwayWinner",
      "jump": "o",
      "offset": [
        2798,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4631": {
      "fn": "Lossless.random",
      "offset": [
        3473,
        3626
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4632": {
      "fn": "Lossless.random",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 51,
      "value": "0x2"
    },
    "4634": {
      "fn": "Lossless.random",
      "offset": [
        3602,
        3615
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4635": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4637": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4638": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4639": {
      "fn": "Lossless.random",
      "offset": [
        3567,
        3583
      ],
      "op": "DIFFICULTY",
      "path": "4"
    },
    "4640": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4642": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4643": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4644": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "ADD",
      "path": "4"
    },
    "4645": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4646": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4647": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4648": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4649": {
      "fn": "Lossless.random",
      "offset": [
        3585,
        3600
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "4650": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4651": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4652": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "ADD",
      "path": "4"
    },
    "4653": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4654": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4656": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4657": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4658": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "ADD",
      "path": "4"
    },
    "4659": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4660": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4661": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4662": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4663": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4664": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4665": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4666": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4667": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SUB",
      "path": "4"
    },
    "4668": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4669": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4670": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "ADD",
      "path": "4"
    },
    "4671": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4672": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4673": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "4675": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4676": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4677": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "ADD",
      "path": "4"
    },
    "4678": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4679": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4680": {
      "fn": "Lossless.random",
      "offset": [
        3550,
        3617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4681": {
      "fn": "Lossless.random",
      "offset": [
        3540,
        3618
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4682": {
      "fn": "Lossless.random",
      "offset": [
        3540,
        3618
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4683": {
      "fn": "Lossless.random",
      "offset": [
        3540,
        3618
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4684": {
      "fn": "Lossless.random",
      "offset": [
        3540,
        3618
      ],
      "op": "ADD",
      "path": "4"
    },
    "4685": {
      "fn": "Lossless.random",
      "offset": [
        3540,
        3618
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4686": {
      "fn": "Lossless.random",
      "offset": [
        3473,
        3626
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4687": {
      "fn": "Lossless.random",
      "jump": "o",
      "offset": [
        3473,
        3626
      ],
      "op": "JUMP",
      "path": "4"
    }
  },
  "sha1": "f1831ec66908d666e793beeab9d7492a953acff7",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport '../../interfaces/ILendingPool.sol';\nimport '../../interfaces/IERC20.sol';\nimport './Lossless.sol';\n\n\ncontract AaveLossless is Lossless  {\n\n    address public token;\n    address public winner;\n    BetSide public winningSide;\n    /// Aave Lending pool to deposit tokens\n    ILendingPool public lendingPool;\n    enum BetSide {OPEN, HOME, AWAY}\n    \n    \n    \n  \n     constructor(address _token, address _lendingPoolAddress, uint256 _matchExpiryBlock) public  Lossless(_matchExpiryBlock){\n        status = MatchStatus.OPEN;\n        token = _token;\n        lendingPool = ILendingPool(_lendingPoolAddress);\n        winningSide = BetSide.OPEN;\n        winner = address(0);\n\n\n    }\n\n    function placeBet(BetSide betSide, uint256 amount) public payable isOpen() {\n        require(amount > 0, 'amount must be positif');\n        require(betSide == BetSide.HOME || betSide == BetSide.AWAY, 'invalid argument for bestide');\n\n        if (betSide==BetSide.HOME) {\n            placeHomeBet(amount);\n        } else if (betSide==BetSide.AWAY) {\n            placeAwayBet(amount);\n        } \n        totalDeposits += amount;\n        playerBalance[msg.sender] += amount;\n        // placing money in aave logique\n        uint256 allowance = IERC20(token).allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Check the token allowance\");\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\n        IERC20(token).approve(address(lendingPool), amount);\n        lendingPool.deposit(token, amount, address(this),0);\n\n    }\n    \n\n    function withdraw() public isPaid() {\n\n        require(playerBalance[msg.sender]>0 , 'balance is zero');\n        uint256 amount = playerBalance[msg.sender];\n        playerBalance[msg.sender] = 0;\n        IERC20(token).transfer(msg.sender, amount);\n\n    }\n\n    function setMatchWinnerAndWithdrawFromPool(BetSide _winningSide) public isFinished() onlyOwner() {\n        require(_winningSide == BetSide.HOME || _winningSide == BetSide.AWAY, 'Wrong input for winner');\n        status = MatchStatus.PAID;\n        winningSide = _winningSide;\n        lendingPool.withdraw(token, type(uint).max, address(this));\n        findWinner();\n        payoutWinner(); \n\n    }\n\n    function findWinner() internal {\n        if(winningSide == BetSide.HOME) {\n            winner = findHomeWinner();\n        } else if (winningSide == BetSide.AWAY) {\n            winner = findAwayWinner();\n        }\n    }\n\n    function payoutWinner() internal  {\n        uint256 winnerPayout = IERC20(token).balanceOf(address(this)) - totalDeposits;\n        playerBalance[winner] += winnerPayout;\n    }\n   \n  \n\n\n    \n   \n    \n     \n  \n\n  \n\n}",
  "sourceMap": "167:2548:2:-:0;;;430:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:309:2;;;;;;;;;;;;;;;877:17:6;897:12;:10;:12::i;:::-;919:6;:18;;-1:-1:-1;;;;;;919:18:6;-1:-1:-1;;;;;919:18:6;;;;;;;952:43;;919:18;;-1:-1:-1;919:18:6;952:43;;919:6;;952:43;-1:-1:-1;1236:16:4;1227:25;;-1:-1:-1;;;;1227:25:4;;;-1:-1:-1;1262:36:4;-1:-1:-1;594:5:2::1;:14:::0;;-1:-1:-1;;;;;594:14:2;;::::1;-1:-1:-1::0;;;;;;594:14:2;;::::1;;::::0;;;618:11:::1;:47:::0;;;;;::::1;::::0;::::1;;::::0;;675:11:::1;:26:::0;;-1:-1:-1;;;;;;711:19:2;;;167:2548;;598:104:5;685:10;598:104;:::o;167:2548:2:-;;;;;;;",
  "sourcePath": "contracts/AaveLossless.sol",
  "type": "contract"
}