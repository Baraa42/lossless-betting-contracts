{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_matchStartBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_matchFinishBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum AaveLossless.BetSide",
          "name": "betside",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_block",
          "type": "uint256"
        }
      ],
      "name": "BetPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        }
      ],
      "name": "Winner",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "awayBetPlacer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "awayBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "awayPointsAfterBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "awayPointsTrackers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "drawBetPlacer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "drawBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "drawPointsAfterBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "drawPointsTrackers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "homeBetPlacer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "homePointsAfterBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homePointsTrackers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract ILendingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "matchFinishBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "matchStartBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AaveLossless.BetSide",
          "name": "betSide",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerAwayPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerDrawPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerHomePoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AaveLossless.BetSide",
          "name": "_winningSide",
          "type": "uint8"
        }
      ],
      "name": "setMatchWinnerAndWithdrawFromPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsorDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "internalType": "enum Lossless.MatchStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningSide",
      "outputs": [
        {
          "internalType": "enum AaveLossless.BetSide",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/baraa/.brownie/packages/aave/protocol-v2@1.0.1/contracts/interfaces/ILendingPoolAddressesProvider.sol",
    "2": "contracts/AaveLossless.sol",
    "3": "contracts/Lossless.sol",
    "4": "contracts/access/Context.sol",
    "5": "contracts/access/Ownable.sol",
    "6": "interfaces/IERC20.sol",
    "7": "interfaces/ILendingPool.sol"
  },
  "ast": {
    "absolutePath": "contracts/AaveLossless.sol",
    "exportedSymbols": {
      "AaveLossless": [
        486
      ]
    },
    "id": 487,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../../interfaces/ILendingPool.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 487,
        "sourceUnit": 1550,
        "src": "58:43:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 487,
        "sourceUnit": 1175,
        "src": "102:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Lossless.sol",
        "file": "./Lossless.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 487,
        "sourceUnit": 1091,
        "src": "140:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Lossless",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1090,
              "src": "617:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lossless_$1090",
                "typeString": "contract Lossless"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "617:8:2"
          }
        ],
        "contractDependencies": [
          1090,
          1659,
          1871
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "168:423:2",
          "text": "@title AaveLossless\n  @dev This contract implement is a lossless betting contracts for football 1X2 that use Aave to generate yield\n Contract has an owner to settle the bet, to be replaced by Chainlink.\n Process : - Owner creates contract, sets token and lendingpool : token for betting and lending pool to use.\n           - Contract can also be sponsored : someone deposit without participating in betting."
        },
        "fullyImplemented": true,
        "id": 486,
        "linearizedBaseContracts": [
          486,
          1090,
          1659,
          1871
        ],
        "name": "AaveLossless",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "634:21:2",
              "text": "token used to bet"
            },
            "functionSelector": "fc0c546a",
            "id": 10,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 486,
            "src": "660:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "660:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11,
              "nodeType": "StructuredDocumentation",
              "src": "686:52:2",
              "text": "player winning the lottery after game is settled"
            },
            "functionSelector": "dfbf53ae",
            "id": 13,
            "mutability": "mutable",
            "name": "winner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 486,
            "src": "743:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "743:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 14,
              "nodeType": "StructuredDocumentation",
              "src": "770:33:2",
              "text": "amount of deposit by sponsors"
            },
            "functionSelector": "788e26e7",
            "id": 16,
            "mutability": "mutable",
            "name": "sponsorDeposit",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 486,
            "src": "808:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "808:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "843:16:2",
              "text": "team winning"
            },
            "functionSelector": "fbf06338",
            "id": 19,
            "mutability": "mutable",
            "name": "winningSide",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 486,
            "src": "864:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_BetSide_$27",
              "typeString": "enum AaveLossless.BetSide"
            },
            "typeName": {
              "contractScope": null,
              "id": 18,
              "name": "BetSide",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27,
              "src": "864:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_BetSide_$27",
                "typeString": "enum AaveLossless.BetSide"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "896:39:2",
              "text": "Aave Lending pool to deposit tokens"
            },
            "functionSelector": "a59a9973",
            "id": 22,
            "mutability": "mutable",
            "name": "lendingPool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 486,
            "src": "940:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$1549",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "contractScope": null,
              "id": 21,
              "name": "ILendingPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1549,
              "src": "940:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1549",
                "typeString": "contract ILendingPool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "AaveLossless.BetSide",
            "id": 27,
            "members": [
              {
                "id": 23,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "991:4:2"
              },
              {
                "id": 24,
                "name": "HOME",
                "nodeType": "EnumValue",
                "src": "997:4:2"
              },
              {
                "id": 25,
                "name": "DRAW",
                "nodeType": "EnumValue",
                "src": "1003:4:2"
              },
              {
                "id": 26,
                "name": "AWAY",
                "nodeType": "EnumValue",
                "src": "1009:4:2"
              }
            ],
            "name": "BetSide",
            "nodeType": "EnumDefinition",
            "src": "977:37:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37,
            "name": "BetPlaced",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 37,
                  "src": "1040:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "betside",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 37,
                  "src": "1056:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BetSide_$27",
                    "typeString": "enum AaveLossless.BetSide"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 30,
                    "name": "BetSide",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "1056:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 37,
                  "src": "1073:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_block",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 37,
                  "src": "1089:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1039:65:2"
            },
            "src": "1024:81:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 41,
            "name": "Winner",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "1123:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1122:17:2"
            },
            "src": "1110:30:2"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1247:145:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_BetSide_$27",
                              "typeString": "enum AaveLossless.BetSide"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 47,
                              "name": "betSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1265:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BetSide_$27",
                                "typeString": "enum AaveLossless.BetSide"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 48,
                                "name": "BetSide",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1276:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                                  "typeString": "type(enum AaveLossless.BetSide)"
                                }
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "HOME",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1276:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BetSide_$27",
                                "typeString": "enum AaveLossless.BetSide"
                              }
                            },
                            "src": "1265:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_BetSide_$27",
                              "typeString": "enum AaveLossless.BetSide"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 51,
                              "name": "betSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1292:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BetSide_$27",
                                "typeString": "enum AaveLossless.BetSide"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 52,
                                "name": "BetSide",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1303:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                                  "typeString": "type(enum AaveLossless.BetSide)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "AWAY",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1303:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BetSide_$27",
                                "typeString": "enum AaveLossless.BetSide"
                              }
                            },
                            "src": "1292:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1265:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_BetSide_$27",
                            "typeString": "enum AaveLossless.BetSide"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 56,
                            "name": "betSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "1318:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$27",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 57,
                              "name": "BetSide",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1329:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                                "typeString": "type(enum AaveLossless.BetSide)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "DRAW",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1329:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BetSide_$27",
                              "typeString": "enum AaveLossless.BetSide"
                            }
                          },
                          "src": "1318:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1265:76:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c696420617267756d656e7420666f722062657374696465",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1343:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3d05bf4ecc5b0c7887ef6c3c62c7e2cae69ef1a147f911e225d031ad3f89e36",
                          "typeString": "literal_string \"invalid argument for bestide\""
                        },
                        "value": "invalid argument for bestide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3d05bf4ecc5b0c7887ef6c3c62c7e2cae69ef1a147f911e225d031ad3f89e36",
                          "typeString": "literal_string \"invalid argument for bestide\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1257:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:117:2"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "1384:1:2"
                }
              ]
            },
            "documentation": {
              "id": 42,
              "nodeType": "StructuredDocumentation",
              "src": "1151:54:2",
              "text": " @dev Throws if betside is not valid"
            },
            "id": 66,
            "name": "correctBet",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "betSide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 66,
                  "src": "1230:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BetSide_$27",
                    "typeString": "enum AaveLossless.BetSide"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 43,
                    "name": "BetSide",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "1230:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1229:17:2"
            },
            "src": "1210:182:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1693:188:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "1703:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$571",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "MatchStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "1712:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MatchStatus_$571_$",
                          "typeString": "type(enum Lossless.MatchStatus)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1712:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$571",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "src": "1703:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MatchStatus_$571",
                      "typeString": "enum Lossless.MatchStatus"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1738:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1746:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1738:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1762:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$1549",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "_lendingPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1789:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 92,
                        "name": "ILendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1549,
                        "src": "1776:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingPool_$1549_$",
                          "typeString": "type(contract ILendingPool)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1776:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$1549",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "src": "1762:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPool_$1549",
                      "typeString": "contract ILendingPool"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 97,
                      "name": "winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1819:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "BetSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1833:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                          "typeString": "type(enum AaveLossless.BetSide)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1833:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "1819:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1855:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1872:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1864:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1864:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1864:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1855:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:19:2"
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "1398:117:2",
              "text": " @dev Initialize the contract settings : matchStartBlock, matchFinishBlock, token and lending pool."
            },
            "id": 110,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 78,
                    "name": "_matchStartBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "1656:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 79,
                    "name": "_matchFinishBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "1674:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 80,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 77,
                  "name": "Lossless",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1090,
                  "src": "1647:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Lossless_$1090_$",
                    "typeString": "type(contract Lossless)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:46:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1532:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1548:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_matchStartBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1577:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_matchFinishBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1603:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1531:98:2"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1693:0:2"
            },
            "scope": 486,
            "src": "1520:361:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2041:516:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2059:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2068:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2059:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616d6f756e74206d75737420626520706f7369746966",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2071:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f6a84be26313a47c494e5519d5ea7121abab403c4cc2e6b6555c16abf79142",
                          "typeString": "literal_string \"amount must be positif\""
                        },
                        "value": "amount must be positif"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f6a84be26313a47c494e5519d5ea7121abab403c4cc2e6b6555c16abf79142",
                          "typeString": "literal_string \"amount must be positif\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2051:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2051:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:45:2"
                },
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 197,
                      "src": "2106:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2106:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2150:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2150:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 135,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2170:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2162:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 133,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2162:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2162:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 128,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2133:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 127,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "2126:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2126:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "2126:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2126:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2106:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2194:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2207:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2194:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:27:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        },
                        "value": "Check the token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2186:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2186:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2186:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2280:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2280:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2300:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2292:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2292:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2292:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2307:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2260:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 146,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "2253:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2253:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1173,
                      "src": "2253:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 165,
                            "name": "lendingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "2354:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPool_$1549",
                              "typeString": "contract ILendingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILendingPool_$1549",
                              "typeString": "contract ILendingPool"
                            }
                          ],
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2346:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 163,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2346:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2346:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2368:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2331:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 159,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "2324:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2324:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1110,
                      "src": "2324:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2405:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2412:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2428:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2420:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2420:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2420:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2434:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2385:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$1549",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1328,
                      "src": "2385:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "totalDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "2446:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2463:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2446:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 186,
                      "name": "sponsorDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2479:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2497:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2479:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2513:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 193,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2527:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2527:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2513:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2542:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2513:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:35:2"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "1887:92:2",
              "text": " @dev Sponsor the contract, funds received will be used to generate yield."
            },
            "functionSelector": "b6cce5e2",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "isOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 592,
                  "src": "2032:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2032:8:2"
              }
            ],
            "name": "sponsor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 198,
                  "src": "2001:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2000:16:2"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2041:0:2"
            },
            "scope": 486,
            "src": "1984:573:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "2702:835:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 212,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2720:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2729:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2720:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616d6f756e74206d75737420626520706f7369746966",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f6a84be26313a47c494e5519d5ea7121abab403c4cc2e6b6555c16abf79142",
                          "typeString": "literal_string \"amount must be positif\""
                        },
                        "value": "amount must be positif"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f6a84be26313a47c494e5519d5ea7121abab403c4cc2e6b6555c16abf79142",
                          "typeString": "literal_string \"amount must be positif\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2712:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:45:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 218,
                      "name": "betSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "2771:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "BetSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2780:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                          "typeString": "type(enum AaveLossless.BetSide)"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "HOME",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2780:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "2771:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "betSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2849:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 228,
                          "name": "BetSide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2858:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                            "typeString": "type(enum AaveLossless.BetSide)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AWAY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2858:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "src": "2849:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 236,
                          "name": "betSide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "2927:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BetSide_$27",
                            "typeString": "enum AaveLossless.BetSide"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "BetSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2936:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                              "typeString": "type(enum AaveLossless.BetSide)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DRAW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2936:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BetSide_$27",
                            "typeString": "enum AaveLossless.BetSide"
                          }
                        },
                        "src": "2927:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 245,
                      "nodeType": "IfStatement",
                      "src": "2923:72:2",
                      "trueBody": {
                        "id": 244,
                        "nodeType": "Block",
                        "src": "2950:45:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 241,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "2977:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 240,
                                "name": "placeDrawBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "2964:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2964:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 243,
                            "nodeType": "ExpressionStatement",
                            "src": "2964:20:2"
                          }
                        ]
                      }
                    },
                    "id": 246,
                    "nodeType": "IfStatement",
                    "src": "2845:150:2",
                    "trueBody": {
                      "id": 235,
                      "nodeType": "Block",
                      "src": "2872:45:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 232,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "2899:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 231,
                              "name": "placeAwayBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "2886:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2886:20:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 234,
                          "nodeType": "ExpressionStatement",
                          "src": "2886:20:2"
                        }
                      ]
                    }
                  },
                  "id": 247,
                  "nodeType": "IfStatement",
                  "src": "2767:228:2",
                  "trueBody": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "2794:45:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 223,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2821:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 222,
                            "name": "placeHomeBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 689,
                            "src": "2808:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2808:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "2808:20:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 325,
                      "src": "3054:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3054:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3098:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3098:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3118:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3110:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3110:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3110:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 251,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3081:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 250,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "3074:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3074:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "3074:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3074:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3054:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 263,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "3142:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "3155:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3142:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3163:27:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        },
                        "value": "Check the token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3134:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3228:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3248:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3240:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3240:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3240:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 279,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3255:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 270,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3208:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 269,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "3201:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3201:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1173,
                      "src": "3201:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "3201:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 288,
                            "name": "lendingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3302:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPool_$1549",
                              "typeString": "contract ILendingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILendingPool_$1549",
                              "typeString": "contract ILendingPool"
                            }
                          ],
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3294:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3294:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3294:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3316:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3279:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 282,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "3272:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3272:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1110,
                      "src": "3272:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "3272:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "3353:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3360:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3376:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3368:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 298,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3368:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3382:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3333:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$1549",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1328,
                      "src": "3333:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3333:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3333:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "totalDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "3394:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 306,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "3411:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3394:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3394:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "3427:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 312,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3441:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3441:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3427:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "3456:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3427:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:35:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 317,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3487:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3487:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 319,
                        "name": "betSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3499:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 320,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3508:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3516:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3516:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 316,
                      "name": "BetPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3477:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_BetSide_$27_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,enum AaveLossless.BetSide,uint256,uint256)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "EmitStatement",
                  "src": "3472:57:2"
                }
              ]
            },
            "documentation": {
              "id": 199,
              "nodeType": "StructuredDocumentation",
              "src": "2563:39:2",
              "text": " @dev Places the bet."
            },
            "functionSelector": "dcb3b30e",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 206,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 205,
                  "name": "isOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 592,
                  "src": "2673:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2673:8:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 208,
                    "name": "betSide",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 201,
                    "src": "2693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  }
                ],
                "id": 209,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 207,
                  "name": "correctBet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66,
                  "src": "2682:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_BetSide_$27_$",
                    "typeString": "modifier (enum AaveLossless.BetSide)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2682:19:2"
              }
            ],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "betSide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 326,
                  "src": "2625:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BetSide_$27",
                    "typeString": "enum AaveLossless.BetSide"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 200,
                    "name": "BetSide",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "2625:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 326,
                  "src": "2642:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2624:33:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2702:0:2"
            },
            "scope": 486,
            "src": "2607:930:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "3648:218:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "playerBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "3667:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 336,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 334,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3681:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3681:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3667:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3693:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3667:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616c616e6365206973207a65726f",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:17:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20ebdcf32f87e43c3d3870ce83b2b6a253a91dd5f75691c4a8bed20f190b9ebf",
                          "typeString": "literal_string \"balance is zero\""
                        },
                        "value": "balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20ebdcf32f87e43c3d3870ce83b2b6a253a91dd5f75691c4a8bed20f190b9ebf",
                          "typeString": "literal_string \"balance is zero\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3659:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:56:2"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 365,
                      "src": "3725:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3725:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 348,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 344,
                      "name": "playerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "3742:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 347,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3756:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3756:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3742:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3725:42:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 349,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "3777:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 352,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 350,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3791:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3791:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3777:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3805:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3777:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3839:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3839:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "3851:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3823:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 356,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "3816:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3816:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1162,
                      "src": "3816:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:42:2"
                }
              ]
            },
            "documentation": {
              "id": 327,
              "nodeType": "StructuredDocumentation",
              "src": "3547:60:2",
              "text": " @dev Withdraw balance after game is over."
            },
            "functionSelector": "3ccfd60b",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 330,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 329,
                  "name": "isPaid",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 618,
                  "src": "3639:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3639:8:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3629:2:2"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3648:0:2"
            },
            "scope": 486,
            "src": "3612:254:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "4118:294:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MatchStatus_$571",
                          "typeString": "enum Lossless.MatchStatus"
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 494,
                          "src": "4136:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MatchStatus_$571",
                            "typeString": "enum Lossless.MatchStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "MatchStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "4146:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MatchStatus_$571_$",
                              "typeString": "type(enum Lossless.MatchStatus)"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4146:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MatchStatus_$571",
                            "typeString": "enum Lossless.MatchStatus"
                          }
                        },
                        "src": "4136:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e7420736574746c652074686973206d61746368",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4164:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_642aa2469c1856310730038fe8aa16a339bac9fefe7f344548f0d8d3a93b58d1",
                          "typeString": "literal_string \"Cant settle this match\""
                        },
                        "value": "Cant settle this match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_642aa2469c1856310730038fe8aa16a339bac9fefe7f344548f0d8d3a93b58d1",
                          "typeString": "literal_string \"Cant settle this match\""
                        }
                      ],
                      "id": 379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4128:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4128:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "4128:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 387,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "4199:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$571",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "MatchStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "4208:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MatchStatus_$571_$",
                          "typeString": "type(enum Lossless.MatchStatus)"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PAID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4208:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MatchStatus_$571",
                        "typeString": "enum Lossless.MatchStatus"
                      }
                    },
                    "src": "4199:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MatchStatus_$571",
                      "typeString": "enum Lossless.MatchStatus"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "4199:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4234:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 393,
                      "name": "_winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "4248:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "4234:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4234:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "4291:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4303:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 401,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4303:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 400,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4298:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4298:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4298:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4322:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveLossless_$486",
                              "typeString": "contract AaveLossless"
                            }
                          ],
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4314:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 405,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4314:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4314:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 396,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4270:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$1549",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1340,
                      "src": "4270:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "4270:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 411,
                      "name": "findWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "4338:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4338:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4338:12:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 414,
                      "name": "payoutWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "4360:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:14:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "4397:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 417,
                      "name": "Winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "4390:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4390:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "EmitStatement",
                  "src": "4385:19:2"
                }
              ]
            },
            "documentation": {
              "id": 367,
              "nodeType": "StructuredDocumentation",
              "src": "3872:119:2",
              "text": " @dev can be called by owner to settle game and withdraw from the pool : To be replaced by chainlink."
            },
            "functionSelector": "645a0047",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 372,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 371,
                  "name": "isFinished",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 605,
                  "src": "4068:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4068:12:2"
              },
              {
                "arguments": [],
                "id": 374,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 373,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1608,
                  "src": "4081:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4081:11:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 376,
                    "name": "_winningSide",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 369,
                    "src": "4104:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  }
                ],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 375,
                  "name": "correctBet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66,
                  "src": "4093:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_BetSide_$27_$",
                    "typeString": "modifier (enum AaveLossless.BetSide)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4093:24:2"
              }
            ],
            "name": "setMatchWinnerAndWithdrawFromPool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "_winningSide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 422,
                  "src": "4039:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BetSide_$27",
                    "typeString": "enum AaveLossless.BetSide"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 368,
                    "name": "BetSide",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "4039:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4038:22:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:0:2"
            },
            "scope": 486,
            "src": "3996:416:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "4531:276:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_BetSide_$27",
                      "typeString": "enum AaveLossless.BetSide"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 426,
                      "name": "winningSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4544:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "BetSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4559:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                          "typeString": "type(enum AaveLossless.BetSide)"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "HOME",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4559:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      }
                    },
                    "src": "4544:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_BetSide_$27",
                        "typeString": "enum AaveLossless.BetSide"
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "winningSide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "4633:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 437,
                          "name": "BetSide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "4648:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                            "typeString": "type(enum AaveLossless.BetSide)"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AWAY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4648:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        }
                      },
                      "src": "4633:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_BetSide_$27",
                          "typeString": "enum AaveLossless.BetSide"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 446,
                          "name": "winningSide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "4722:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BetSide_$27",
                            "typeString": "enum AaveLossless.BetSide"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 447,
                            "name": "BetSide",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "4737:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BetSide_$27_$",
                              "typeString": "type(enum AaveLossless.BetSide)"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DRAW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4737:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BetSide_$27",
                            "typeString": "enum AaveLossless.BetSide"
                          }
                        },
                        "src": "4722:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 456,
                      "nodeType": "IfStatement",
                      "src": "4718:83:2",
                      "trueBody": {
                        "id": 455,
                        "nodeType": "Block",
                        "src": "4751:50:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 450,
                                "name": "winner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "4765:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 451,
                                  "name": "findDrawWinner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 973,
                                  "src": "4774:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                    "typeString": "function () returns (address)"
                                  }
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4774:16:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4765:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 454,
                            "nodeType": "ExpressionStatement",
                            "src": "4765:25:2"
                          }
                        ]
                      }
                    },
                    "id": 457,
                    "nodeType": "IfStatement",
                    "src": "4629:172:2",
                    "trueBody": {
                      "id": 445,
                      "nodeType": "Block",
                      "src": "4662:50:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 440,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "4676:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 441,
                                "name": "findAwayWinner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1066,
                                "src": "4685:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () returns (address)"
                                }
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4685:16:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4676:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 444,
                          "nodeType": "ExpressionStatement",
                          "src": "4676:25:2"
                        }
                      ]
                    }
                  },
                  "id": 458,
                  "nodeType": "IfStatement",
                  "src": "4541:260:2",
                  "trueBody": {
                    "id": 435,
                    "nodeType": "Block",
                    "src": "4573:50:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "4587:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 431,
                              "name": "findHomeWinner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "4596:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                "typeString": "function () returns (address)"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4596:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4587:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "4587:25:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 423,
              "nodeType": "StructuredDocumentation",
              "src": "4418:77:2",
              "text": " @dev Internal function to find the winnner of the lottery."
            },
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findWinner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4519:2:2"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4531:0:2"
            },
            "scope": 486,
            "src": "4500:307:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "4946:141:2",
              "statements": [
                {
                  "assignments": [
                    465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "winnerPayout",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 484,
                      "src": "4956:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4956:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 472,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5011:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AaveLossless_$486",
                                "typeString": "contract AaveLossless"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AaveLossless_$486",
                                "typeString": "contract AaveLossless"
                              }
                            ],
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5003:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 470,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5003:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5003:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 467,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "4986:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 466,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "4979:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1174_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4979:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1174",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "4979:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4979:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 475,
                      "name": "totalDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "5020:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4979:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4956:77:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "playerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "5043:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 480,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "5057:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5043:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 481,
                      "name": "winnerPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "5068:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5043:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:37:2"
                }
              ]
            },
            "documentation": {
              "id": 461,
              "nodeType": "StructuredDocumentation",
              "src": "4813:94:2",
              "text": " @dev Internal function to update the balance of the winnner of the lottery."
            },
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payoutWinner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4933:2:2"
            },
            "returnParameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4946:0:2"
            },
            "scope": 486,
            "src": "4912:175:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 487,
        "src": "592:4534:2"
      }
    ],
    "src": "33:5093:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051611e08380380611e088339818101604052608081101561003357600080fd5b508051602082015160408301516060909301519192909181816000610056610109565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b191690556001919091556002555050601480546001600160a01b03199081166001600160a01b039485161790915560178054610100600160a81b03191661010093909416929092029290921760ff1916905560158054909116905561010d565b3390565b611cec8061011c6000396000f3fe6080604052600436106101e35760003560e01c8063b168ba4b11610102578063d9d5216011610095578063e8eaca7511610064578063e8eaca75146105ac578063f2fde38b146105c1578063fbf06338146105f4578063fc0c546a14610619576101e3565b8063d9d5216014610532578063dcb3b30e1461055c578063dfbf53ae14610582578063e11f3f7714610597576101e3565b8063c003aef3116100d1578063c003aef3146104c0578063c69de224146104d5578063c734f0c3146104ea578063c7b8cad5146104ff576101e3565b8063b168ba4b14610431578063b3db3ced14610446578063b6cce5e214610470578063b810fe8d1461048d576101e3565b8063788e26e71161017a57806391c54ca41161014957806391c54ca41461039e578063a59a9973146103c8578063aa236df4146103dd578063ad9ed66e14610407576101e3565b8063788e26e71461031957806379db8a131461032e5780637d882097146103585780638da5cb5b1461036d576101e3565b80633ccfd60b116101b65780633ccfd60b1461028d5780634e33f83b146102a4578063645a0047146102d7578063715018a614610304576101e3565b80630873d9ec146101e857806309126f081461020f578063200d2ed21461024257806336201e5314610278575b600080fd5b3480156101f457600080fd5b506101fd61062e565b60408051918252519081900360200190f35b34801561021b57600080fd5b506101fd6004803603602081101561023257600080fd5b50356001600160a01b0316610634565b34801561024e57600080fd5b50610257610646565b6040518082600181111561026757fe5b815260200191505060405180910390f35b34801561028457600080fd5b506101fd610656565b34801561029957600080fd5b506102a261065c565b005b3480156102b057600080fd5b506101fd600480360360208110156102c757600080fd5b50356001600160a01b03166107a7565b3480156102e357600080fd5b506102a2600480360360208110156102fa57600080fd5b503560ff166107b9565b34801561031057600080fd5b506102a2610a7e565b34801561032557600080fd5b506101fd610b3c565b34801561033a57600080fd5b506101fd6004803603602081101561035157600080fd5b5035610b42565b34801561036457600080fd5b506101fd610b60565b34801561037957600080fd5b50610382610b66565b604080516001600160a01b039092168252519081900360200190f35b3480156103aa57600080fd5b50610382600480360360208110156103c157600080fd5b5035610b76565b3480156103d457600080fd5b50610382610b91565b3480156103e957600080fd5b506103826004803603602081101561040057600080fd5b5035610ba5565b34801561041357600080fd5b506101fd6004803603602081101561042a57600080fd5b5035610bc0565b34801561043d57600080fd5b506101fd610bcd565b34801561045257600080fd5b506101fd6004803603602081101561046957600080fd5b5035610bd3565b6102a26004803603602081101561048657600080fd5b5035610be0565b34801561049957600080fd5b506101fd600480360360208110156104b057600080fd5b50356001600160a01b0316610f5f565b3480156104cc57600080fd5b506101fd610f71565b3480156104e157600080fd5b506101fd610f77565b3480156104f657600080fd5b506101fd610f7d565b34801561050b57600080fd5b506101fd6004803603602081101561052257600080fd5b50356001600160a01b0316610f83565b34801561053e57600080fd5b506103826004803603602081101561055557600080fd5b5035610f95565b6102a26004803603604081101561057257600080fd5b5060ff8135169060200135610fb0565b34801561058e57600080fd5b50610382611475565b3480156105a357600080fd5b506101fd611484565b3480156105b857600080fd5b506101fd61148a565b3480156105cd57600080fd5b506102a2600480360360208110156105e457600080fd5b50356001600160a01b0316611490565b34801561060057600080fd5b506106096115a4565b6040518082600381111561026757fe5b34801561062557600080fd5b506103826115ad565b60085481565b60116020526000908152604090205481565b600054600160a01b900460ff1681565b60045481565b6001600054600160a01b900460ff16600181111561067657fe5b146106b9576040805162461bcd60e51b815260206004820152600e60248201526d13585d18da081b9bdd081c185a5960921b604482015290519081900360640190fd5b3360009081526010602052604090205461070c576040805162461bcd60e51b815260206004820152600f60248201526e62616c616e6365206973207a65726f60881b604482015290519081900360640190fd5b336000818152601060209081526040808320805490849055601454825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169363a9059cbb93604480850194919392918390030190829087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b505050506040513d60208110156107a257600080fd5b505050565b60106020526000908152604090205481565b6002544311610802576040805162461bcd60e51b815260206004820152601060248201526f11d85b59481a5cc8199a5b9a5cda195960821b604482015290519081900360640190fd5b61080a6115bc565b6001600160a01b031661081b610b66565b6001600160a01b031614610876576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b80600181600381111561088557fe5b148061089c5750600381600381111561089a57fe5b145b806108b2575060028160038111156108b057fe5b145b610903576040805162461bcd60e51b815260206004820152601c60248201527f696e76616c696420617267756d656e7420666f72206265737469646500000000604482015290519081900360640190fd5b60008054600160a01b900460ff16600181111561091c57fe5b14610967576040805162461bcd60e51b8152602060048201526016602482015275086c2dce840e6cae8e8d8ca40e8d0d2e640dac2e8c6d60531b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790556017805483919060ff1916600183600381111561099357fe5b021790555060175460145460408051631a4ca37b60e21b81526001600160a01b03928316600482015260001960248201523060448201529051610100909304909116916369328dec916064808201926020929091908290030181600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b505050506040513d6020811015610a2857600080fd5b50610a3390506115c0565b610a3b61166b565b601554604080516001600160a01b039092168252517f745c90b656b4aafe296c8ca35aeacfe56cb96c90e1d320e5da643fff1051b6c09181900360200190a15050565b610a866115bc565b6001600160a01b0316610a97610b66565b6001600160a01b031614610af2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60165481565b600b8181548110610b4f57fe5b600091825260209091200154905081565b60035481565b6000546001600160a01b03165b90565b600f602052600090815260409020546001600160a01b031681565b60175461010090046001600160a01b031681565b600e602052600090815260409020546001600160a01b031681565b600a8181548110610b4f57fe5b60015481565b600c8181548110610b4f57fe5b60008054600160a01b900460ff166001811115610bf957fe5b14610c3c576040805162461bcd60e51b815260206004820152600e60248201526d26b0ba31b4103737ba1037b832b760911b604482015290519081900360640190fd5b6001544310610c87576040805162461bcd60e51b815260206004820152601260248201527143616e7420706c61636520626574206e6f7760701b604482015290519081900360640190fd5b60008111610cd5576040805162461bcd60e51b815260206004820152601660248201527530b6b7bab73a1036bab9ba103132903837b9b4ba34b360511b604482015290519081900360640190fd5b60145460408051636eb1769f60e11b815233600482015230602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b158015610d2657600080fd5b505afa158015610d3a573d6000803e3d6000fd5b505050506040513d6020811015610d5057600080fd5b5051905081811015610da5576040805162461bcd60e51b8152602060048201526019602482015278436865636b2074686520746f6b656e20616c6c6f77616e636560381b604482015290519081900360640190fd5b601454604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050506040513d6020811015610e2957600080fd5b50506014546017546040805163095ea7b360e01b81526101009092046001600160a01b03908116600484015260248301869052905192169163095ea7b3916044808201926020929091908290030181600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b505050506040513d6020811015610eb357600080fd5b50506017546014546040805163e8eda9df60e01b81526001600160a01b0392831660048201526024810186905230604482015260006064820181905291516101009094049092169263e8eda9df92608480820193929182900301818387803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b50506003805485019055505060168054830190555033600090815260106020526040902080549091019055565b60136020526000908152604090205481565b60065481565b60095481565b60025481565b60126020526000908152604090205481565b600d602052600090815260409020546001600160a01b031681565b60008054600160a01b900460ff166001811115610fc957fe5b1461100c576040805162461bcd60e51b815260206004820152600e60248201526d26b0ba31b4103737ba1037b832b760911b604482015290519081900360640190fd5b6001544310611057576040805162461bcd60e51b815260206004820152601260248201527143616e7420706c61636520626574206e6f7760701b604482015290519081900360640190fd5b81600181600381111561106657fe5b148061107d5750600381600381111561107b57fe5b145b806110935750600281600381111561109157fe5b145b6110e4576040805162461bcd60e51b815260206004820152601c60248201527f696e76616c696420617267756d656e7420666f72206265737469646500000000604482015290519081900360640190fd5b60008211611132576040805162461bcd60e51b815260206004820152601660248201527530b6b7bab73a1036bab9ba103132903837b9b4ba34b360511b604482015290519081900360640190fd5b600183600381111561114057fe5b14156111545761114f8261170e565b61118e565b600383600381111561116257fe5b14156111715761114f82611797565b600283600381111561117f57fe5b141561118e5761118e82611820565b60145460408051636eb1769f60e11b815233600482015230602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b1580156111df57600080fd5b505afa1580156111f3573d6000803e3d6000fd5b505050506040513d602081101561120957600080fd5b505190508281101561125e576040805162461bcd60e51b8152602060048201526019602482015278436865636b2074686520746f6b656e20616c6c6f77616e636560381b604482015290519081900360640190fd5b601454604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156112b857600080fd5b505af11580156112cc573d6000803e3d6000fd5b505050506040513d60208110156112e257600080fd5b50506014546017546040805163095ea7b360e01b81526101009092046001600160a01b03908116600484015260248301879052905192169163095ea7b3916044808201926020929091908290030181600087803b15801561134257600080fd5b505af1158015611356573d6000803e3d6000fd5b505050506040513d602081101561136c57600080fd5b50506017546014546040805163e8eda9df60e01b81526001600160a01b0392831660048201526024810187905230604482015260006064820181905291516101009094049092169263e8eda9df92608480820193929182900301818387803b1580156113d757600080fd5b505af11580156113eb573d6000803e3d6000fd5b505060038054860181553360008181526010602090815260409182902080548a01905590518281527f8d3970b91d4f8dbb1a8368398f1ac8bdd7a7fb5682c8360b7396214f65d7e55f9550919350889288924392909190820190859081111561145057fe5b815260200183815260200182815260200194505050505060405180910390a150505050565b6015546001600160a01b031681565b60055481565b60075481565b6114986115bc565b6001600160a01b03166114a9610b66565b6001600160a01b031614611504576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166115495760405162461bcd60e51b8152600401808060200182810382526026815260200180611c916026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60175460ff1681565b6014546001600160a01b031681565b3390565b600160175460ff1660038111156115d357fe5b1415611606576115e16118ab565b601580546001600160a01b0319166001600160a01b0392909216919091179055611669565b600360175460ff16600381111561161957fe5b1415611627576115e16119dd565b600260175460ff16600381111561163a57fe5b141561166957611648611b0f565b601580546001600160a01b0319166001600160a01b03929092169190911790555b565b600354601454604080516370a0823160e01b81523060048201529051600093926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116ba57600080fd5b505afa1580156116ce573d6000803e3d6000fd5b505050506040513d60208110156116e457600080fd5b50516015546001600160a01b03166000908152601060205260409020805492909103909101905550565b60018054336000818152601160209081526040808320805443909603979097029485019096556004805490940193849055600a80548087019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80193909355600780548252600d9093529390932080546001600160a01b0319169093179092558154019055565b60018054336000818152601360209081526040808320805443909603979097029485019096556006805490940193849055600c80548087019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70193909355600980548252600f9093529390932080546001600160a01b0319169093179092558154019055565b60018054336000818152601260209081526040808320805443909603979097029485019096556005805490940193849055600b80548087019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901939093556007548152600e90925292902080546001600160a01b031916909217909155600880549091019055565b6000806118b6611c41565b905060045481816118c357fe5b069050600a6000815481106118d457fe5b906000526020600020015481101561192157505060008052600d6020527f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee546001600160a01b0316610b73565b600a546000190160005b8181116119be57600060028284030482019050600a818154811061194b57fe5b9060005260206000200154841015611968576001810392506119b8565b600a818154811061197557fe5b9060005260206000200154841115611992578060010191506119b8565b6001016000908152600d60205260409020546001600160a01b03169350610b7392505050565b5061192b565b6000908152600d60205260409020546001600160a01b03169250505090565b6000806119e8611c41565b905060065481816119f557fe5b069050600c600081548110611a0657fe5b9060005260206000200154811015611a5357505060008052600f6020527ff4803e074bd026baaf6ed2e288c9515f68c72fb7216eebdd7cae1718a53ec375546001600160a01b0316610b73565b600c546000190160005b818111611af057600060028284030482019050600c8181548110611a7d57fe5b9060005260206000200154841015611a9a57600181039250611aea565b600c8181548110611aa757fe5b9060005260206000200154841115611ac457806001019150611aea565b6001016000908152600f60205260409020546001600160a01b03169350610b7392505050565b50611a5d565b6000908152600f60205260409020546001600160a01b03169250505090565b600080611b1a611c41565b90506005548181611b2757fe5b069050600b600081548110611b3857fe5b9060005260206000200154811015611b8557505060008052600e6020527fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c546001600160a01b0316610b73565b600b546000190160005b818111611c2257600060028284030482019050600b8181548110611baf57fe5b9060005260206000200154841015611bcc57600181039250611c1c565b600b8181548110611bd957fe5b9060005260206000200154841115611bf657806001019150611c1c565b6001016000908152600e60205260409020546001600160a01b03169350610b7392505050565b50611b8f565b6000908152600e60205260409020546001600160a01b03169250505090565b600354600154600254604080514460208083019190915242828401526060820195909552608081019390935260a0808401929092528051808403909201825260c090920190915280519101209056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220b449c682e3dd8cb633f9677b9ffc5c6d91cce586c0da8384ed6c098076fdf4a264736f6c634300060c0033",
  "bytecodeSha1": "df802e27c9e9169a6a92cb145f03e8c50e53eec5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "AaveLossless",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {
        "AaveLossless.findWinner": {
          "85": [
            4544,
            4571,
            false
          ],
          "86": [
            4633,
            4660,
            false
          ],
          "87": [
            4722,
            4749,
            false
          ]
        },
        "AaveLossless.placeBet": {
          "77": [
            1265,
            1288,
            true
          ],
          "78": [
            1292,
            1315,
            true
          ],
          "79": [
            1318,
            1341,
            true
          ],
          "80": [
            2720,
            2730,
            true
          ],
          "81": [
            2771,
            2792,
            false
          ],
          "82": [
            2849,
            2870,
            false
          ],
          "83": [
            2927,
            2948,
            false
          ],
          "84": [
            3142,
            3161,
            true
          ]
        },
        "AaveLossless.setMatchWinnerAndWithdrawFromPool": {
          "74": [
            4136,
            4162,
            true
          ]
        },
        "AaveLossless.sponsor": {
          "75": [
            2059,
            2069,
            true
          ],
          "76": [
            2194,
            2213,
            true
          ]
        }
      },
      "3": {
        "AaveLossless.placeBet": {
          "89": [
            3114,
            3140,
            true
          ]
        },
        "AaveLossless.withdraw": {
          "88": [
            3545,
            3571,
            true
          ]
        },
        "Lossless.findAwayWinner": {
          "93": [
            6866,
            6896,
            false
          ],
          "94": [
            7100,
            7132,
            false
          ],
          "95": [
            7187,
            7218,
            false
          ]
        },
        "Lossless.findDrawWinner": {
          "96": [
            6151,
            6181,
            false
          ],
          "97": [
            6385,
            6417,
            false
          ],
          "98": [
            6472,
            6503,
            false
          ]
        },
        "Lossless.findHomeWinner": {
          "90": [
            5436,
            5466,
            false
          ],
          "91": [
            5670,
            5702,
            false
          ],
          "92": [
            5757,
            5788,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "Ownable.transferOwnership": {
          "99": [
            1290,
            1313,
            true
          ],
          "100": [
            2092,
            2114,
            true
          ]
        }
      },
      "6": {},
      "7": {}
    },
    "statements": {
      "0": {},
      "2": {
        "AaveLossless.findWinner": {
          "36": [
            4587,
            4612
          ],
          "37": [
            4676,
            4701
          ],
          "38": [
            4765,
            4790
          ]
        },
        "AaveLossless.payoutWinner": {
          "39": [
            5043,
            5080
          ]
        },
        "AaveLossless.placeBet": {
          "21": [
            2712,
            2757
          ],
          "22": [
            2808,
            2828
          ],
          "23": [
            2886,
            2906
          ],
          "24": [
            2964,
            2984
          ],
          "25": [
            3134,
            3191
          ],
          "26": [
            3201,
            3262
          ],
          "27": [
            3272,
            3323
          ],
          "28": [
            3333,
            3384
          ],
          "29": [
            3394,
            3417
          ],
          "30": [
            3427,
            3462
          ],
          "31": [
            3472,
            3529
          ]
        },
        "AaveLossless.setMatchWinnerAndWithdrawFromPool": {
          "3": [
            4128,
            4189
          ],
          "4": [
            4199,
            4224
          ],
          "5": [
            4234,
            4260
          ],
          "6": [
            4270,
            4328
          ],
          "7": [
            4338,
            4350
          ],
          "8": [
            4360,
            4374
          ],
          "9": [
            4385,
            4404
          ]
        },
        "AaveLossless.sponsor": {
          "13": [
            2051,
            2096
          ],
          "14": [
            2186,
            2243
          ],
          "15": [
            2253,
            2314
          ],
          "16": [
            2324,
            2375
          ],
          "17": [
            2385,
            2436
          ],
          "18": [
            2446,
            2469
          ],
          "19": [
            2479,
            2503
          ],
          "20": [
            2513,
            2548
          ]
        },
        "AaveLossless.withdraw": {
          "0": [
            3659,
            3715
          ],
          "1": [
            3777,
            3806
          ],
          "2": [
            3816,
            3858
          ]
        }
      },
      "3": {
        "Lossless.findAwayWinner": {
          "61": [
            6816,
            6852
          ],
          "62": [
            6912,
            6935
          ],
          "63": [
            7151,
            7161
          ],
          "64": [
            7238,
            7250
          ],
          "65": [
            7289,
            7316
          ],
          "66": [
            7350,
            7374
          ]
        },
        "Lossless.findDrawWinner": {
          "67": [
            6101,
            6137
          ],
          "68": [
            6197,
            6220
          ],
          "69": [
            6436,
            6446
          ],
          "70": [
            6523,
            6535
          ],
          "71": [
            6574,
            6601
          ],
          "72": [
            6635,
            6659
          ]
        },
        "Lossless.findHomeWinner": {
          "55": [
            5386,
            5422
          ],
          "56": [
            5482,
            5505
          ],
          "57": [
            5721,
            5731
          ],
          "58": [
            5808,
            5820
          ],
          "59": [
            5859,
            5886
          ],
          "60": [
            5920,
            5944
          ]
        },
        "Lossless.placeAwayBet": {
          "45": [
            5020,
            5058
          ],
          "46": [
            5068,
            5096
          ],
          "47": [
            5106,
            5149
          ],
          "48": [
            5160,
            5196
          ],
          "49": [
            5206,
            5219
          ]
        },
        "Lossless.placeDrawBet": {
          "50": [
            4585,
            4623
          ],
          "51": [
            4633,
            4661
          ],
          "52": [
            4671,
            4714
          ],
          "53": [
            4724,
            4760
          ],
          "54": [
            4770,
            4783
          ]
        },
        "Lossless.placeHomeBet": {
          "40": [
            4149,
            4187
          ],
          "41": [
            4197,
            4225
          ],
          "42": [
            4235,
            4278
          ],
          "43": [
            4288,
            4324
          ],
          "44": [
            4334,
            4347
          ]
        },
        "Lossless.random": {
          "73": [
            7555,
            7681
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "35": [
            678,
            695
          ]
        }
      },
      "5": {
        "Ownable.owner": {
          "12": [
            1143,
            1156
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            1774,
            1819
          ],
          "11": [
            1829,
            1848
          ]
        },
        "Ownable.transferOwnership": {
          "32": [
            2084,
            2157
          ],
          "33": [
            2167,
            2210
          ],
          "34": [
            2220,
            2237
          ]
        }
      },
      "6": {},
      "7": {}
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "ILendingPool",
    "aave/protocol-v2@1.0.1/ILendingPoolAddressesProvider",
    "Lossless",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106101e35760003560e01c8063b168ba4b11610102578063d9d5216011610095578063e8eaca7511610064578063e8eaca75146105ac578063f2fde38b146105c1578063fbf06338146105f4578063fc0c546a14610619576101e3565b8063d9d5216014610532578063dcb3b30e1461055c578063dfbf53ae14610582578063e11f3f7714610597576101e3565b8063c003aef3116100d1578063c003aef3146104c0578063c69de224146104d5578063c734f0c3146104ea578063c7b8cad5146104ff576101e3565b8063b168ba4b14610431578063b3db3ced14610446578063b6cce5e214610470578063b810fe8d1461048d576101e3565b8063788e26e71161017a57806391c54ca41161014957806391c54ca41461039e578063a59a9973146103c8578063aa236df4146103dd578063ad9ed66e14610407576101e3565b8063788e26e71461031957806379db8a131461032e5780637d882097146103585780638da5cb5b1461036d576101e3565b80633ccfd60b116101b65780633ccfd60b1461028d5780634e33f83b146102a4578063645a0047146102d7578063715018a614610304576101e3565b80630873d9ec146101e857806309126f081461020f578063200d2ed21461024257806336201e5314610278575b600080fd5b3480156101f457600080fd5b506101fd61062e565b60408051918252519081900360200190f35b34801561021b57600080fd5b506101fd6004803603602081101561023257600080fd5b50356001600160a01b0316610634565b34801561024e57600080fd5b50610257610646565b6040518082600181111561026757fe5b815260200191505060405180910390f35b34801561028457600080fd5b506101fd610656565b34801561029957600080fd5b506102a261065c565b005b3480156102b057600080fd5b506101fd600480360360208110156102c757600080fd5b50356001600160a01b03166107a7565b3480156102e357600080fd5b506102a2600480360360208110156102fa57600080fd5b503560ff166107b9565b34801561031057600080fd5b506102a2610a7e565b34801561032557600080fd5b506101fd610b3c565b34801561033a57600080fd5b506101fd6004803603602081101561035157600080fd5b5035610b42565b34801561036457600080fd5b506101fd610b60565b34801561037957600080fd5b50610382610b66565b604080516001600160a01b039092168252519081900360200190f35b3480156103aa57600080fd5b50610382600480360360208110156103c157600080fd5b5035610b76565b3480156103d457600080fd5b50610382610b91565b3480156103e957600080fd5b506103826004803603602081101561040057600080fd5b5035610ba5565b34801561041357600080fd5b506101fd6004803603602081101561042a57600080fd5b5035610bc0565b34801561043d57600080fd5b506101fd610bcd565b34801561045257600080fd5b506101fd6004803603602081101561046957600080fd5b5035610bd3565b6102a26004803603602081101561048657600080fd5b5035610be0565b34801561049957600080fd5b506101fd600480360360208110156104b057600080fd5b50356001600160a01b0316610f5f565b3480156104cc57600080fd5b506101fd610f71565b3480156104e157600080fd5b506101fd610f77565b3480156104f657600080fd5b506101fd610f7d565b34801561050b57600080fd5b506101fd6004803603602081101561052257600080fd5b50356001600160a01b0316610f83565b34801561053e57600080fd5b506103826004803603602081101561055557600080fd5b5035610f95565b6102a26004803603604081101561057257600080fd5b5060ff8135169060200135610fb0565b34801561058e57600080fd5b50610382611475565b3480156105a357600080fd5b506101fd611484565b3480156105b857600080fd5b506101fd61148a565b3480156105cd57600080fd5b506102a2600480360360208110156105e457600080fd5b50356001600160a01b0316611490565b34801561060057600080fd5b506106096115a4565b6040518082600381111561026757fe5b34801561062557600080fd5b506103826115ad565b60085481565b60116020526000908152604090205481565b600054600160a01b900460ff1681565b60045481565b6001600054600160a01b900460ff16600181111561067657fe5b146106b9576040805162461bcd60e51b815260206004820152600e60248201526d13585d18da081b9bdd081c185a5960921b604482015290519081900360640190fd5b3360009081526010602052604090205461070c576040805162461bcd60e51b815260206004820152600f60248201526e62616c616e6365206973207a65726f60881b604482015290519081900360640190fd5b336000818152601060209081526040808320805490849055601454825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169363a9059cbb93604480850194919392918390030190829087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b505050506040513d60208110156107a257600080fd5b505050565b60106020526000908152604090205481565b6002544311610802576040805162461bcd60e51b815260206004820152601060248201526f11d85b59481a5cc8199a5b9a5cda195960821b604482015290519081900360640190fd5b61080a6115bc565b6001600160a01b031661081b610b66565b6001600160a01b031614610876576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b80600181600381111561088557fe5b148061089c5750600381600381111561089a57fe5b145b806108b2575060028160038111156108b057fe5b145b610903576040805162461bcd60e51b815260206004820152601c60248201527f696e76616c696420617267756d656e7420666f72206265737469646500000000604482015290519081900360640190fd5b60008054600160a01b900460ff16600181111561091c57fe5b14610967576040805162461bcd60e51b8152602060048201526016602482015275086c2dce840e6cae8e8d8ca40e8d0d2e640dac2e8c6d60531b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790556017805483919060ff1916600183600381111561099357fe5b021790555060175460145460408051631a4ca37b60e21b81526001600160a01b03928316600482015260001960248201523060448201529051610100909304909116916369328dec916064808201926020929091908290030181600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b505050506040513d6020811015610a2857600080fd5b50610a3390506115c0565b610a3b61166b565b601554604080516001600160a01b039092168252517f745c90b656b4aafe296c8ca35aeacfe56cb96c90e1d320e5da643fff1051b6c09181900360200190a15050565b610a866115bc565b6001600160a01b0316610a97610b66565b6001600160a01b031614610af2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60165481565b600b8181548110610b4f57fe5b600091825260209091200154905081565b60035481565b6000546001600160a01b03165b90565b600f602052600090815260409020546001600160a01b031681565b60175461010090046001600160a01b031681565b600e602052600090815260409020546001600160a01b031681565b600a8181548110610b4f57fe5b60015481565b600c8181548110610b4f57fe5b60008054600160a01b900460ff166001811115610bf957fe5b14610c3c576040805162461bcd60e51b815260206004820152600e60248201526d26b0ba31b4103737ba1037b832b760911b604482015290519081900360640190fd5b6001544310610c87576040805162461bcd60e51b815260206004820152601260248201527143616e7420706c61636520626574206e6f7760701b604482015290519081900360640190fd5b60008111610cd5576040805162461bcd60e51b815260206004820152601660248201527530b6b7bab73a1036bab9ba103132903837b9b4ba34b360511b604482015290519081900360640190fd5b60145460408051636eb1769f60e11b815233600482015230602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b158015610d2657600080fd5b505afa158015610d3a573d6000803e3d6000fd5b505050506040513d6020811015610d5057600080fd5b5051905081811015610da5576040805162461bcd60e51b8152602060048201526019602482015278436865636b2074686520746f6b656e20616c6c6f77616e636560381b604482015290519081900360640190fd5b601454604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050506040513d6020811015610e2957600080fd5b50506014546017546040805163095ea7b360e01b81526101009092046001600160a01b03908116600484015260248301869052905192169163095ea7b3916044808201926020929091908290030181600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b505050506040513d6020811015610eb357600080fd5b50506017546014546040805163e8eda9df60e01b81526001600160a01b0392831660048201526024810186905230604482015260006064820181905291516101009094049092169263e8eda9df92608480820193929182900301818387803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b50506003805485019055505060168054830190555033600090815260106020526040902080549091019055565b60136020526000908152604090205481565b60065481565b60095481565b60025481565b60126020526000908152604090205481565b600d602052600090815260409020546001600160a01b031681565b60008054600160a01b900460ff166001811115610fc957fe5b1461100c576040805162461bcd60e51b815260206004820152600e60248201526d26b0ba31b4103737ba1037b832b760911b604482015290519081900360640190fd5b6001544310611057576040805162461bcd60e51b815260206004820152601260248201527143616e7420706c61636520626574206e6f7760701b604482015290519081900360640190fd5b81600181600381111561106657fe5b148061107d5750600381600381111561107b57fe5b145b806110935750600281600381111561109157fe5b145b6110e4576040805162461bcd60e51b815260206004820152601c60248201527f696e76616c696420617267756d656e7420666f72206265737469646500000000604482015290519081900360640190fd5b60008211611132576040805162461bcd60e51b815260206004820152601660248201527530b6b7bab73a1036bab9ba103132903837b9b4ba34b360511b604482015290519081900360640190fd5b600183600381111561114057fe5b14156111545761114f8261170e565b61118e565b600383600381111561116257fe5b14156111715761114f82611797565b600283600381111561117f57fe5b141561118e5761118e82611820565b60145460408051636eb1769f60e11b815233600482015230602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b1580156111df57600080fd5b505afa1580156111f3573d6000803e3d6000fd5b505050506040513d602081101561120957600080fd5b505190508281101561125e576040805162461bcd60e51b8152602060048201526019602482015278436865636b2074686520746f6b656e20616c6c6f77616e636560381b604482015290519081900360640190fd5b601454604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156112b857600080fd5b505af11580156112cc573d6000803e3d6000fd5b505050506040513d60208110156112e257600080fd5b50506014546017546040805163095ea7b360e01b81526101009092046001600160a01b03908116600484015260248301879052905192169163095ea7b3916044808201926020929091908290030181600087803b15801561134257600080fd5b505af1158015611356573d6000803e3d6000fd5b505050506040513d602081101561136c57600080fd5b50506017546014546040805163e8eda9df60e01b81526001600160a01b0392831660048201526024810187905230604482015260006064820181905291516101009094049092169263e8eda9df92608480820193929182900301818387803b1580156113d757600080fd5b505af11580156113eb573d6000803e3d6000fd5b505060038054860181553360008181526010602090815260409182902080548a01905590518281527f8d3970b91d4f8dbb1a8368398f1ac8bdd7a7fb5682c8360b7396214f65d7e55f9550919350889288924392909190820190859081111561145057fe5b815260200183815260200182815260200194505050505060405180910390a150505050565b6015546001600160a01b031681565b60055481565b60075481565b6114986115bc565b6001600160a01b03166114a9610b66565b6001600160a01b031614611504576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166115495760405162461bcd60e51b8152600401808060200182810382526026815260200180611c916026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60175460ff1681565b6014546001600160a01b031681565b3390565b600160175460ff1660038111156115d357fe5b1415611606576115e16118ab565b601580546001600160a01b0319166001600160a01b0392909216919091179055611669565b600360175460ff16600381111561161957fe5b1415611627576115e16119dd565b600260175460ff16600381111561163a57fe5b141561166957611648611b0f565b601580546001600160a01b0319166001600160a01b03929092169190911790555b565b600354601454604080516370a0823160e01b81523060048201529051600093926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116ba57600080fd5b505afa1580156116ce573d6000803e3d6000fd5b505050506040513d60208110156116e457600080fd5b50516015546001600160a01b03166000908152601060205260409020805492909103909101905550565b60018054336000818152601160209081526040808320805443909603979097029485019096556004805490940193849055600a80548087019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80193909355600780548252600d9093529390932080546001600160a01b0319169093179092558154019055565b60018054336000818152601360209081526040808320805443909603979097029485019096556006805490940193849055600c80548087019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70193909355600980548252600f9093529390932080546001600160a01b0319169093179092558154019055565b60018054336000818152601260209081526040808320805443909603979097029485019096556005805490940193849055600b80548087019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901939093556007548152600e90925292902080546001600160a01b031916909217909155600880549091019055565b6000806118b6611c41565b905060045481816118c357fe5b069050600a6000815481106118d457fe5b906000526020600020015481101561192157505060008052600d6020527f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee546001600160a01b0316610b73565b600a546000190160005b8181116119be57600060028284030482019050600a818154811061194b57fe5b9060005260206000200154841015611968576001810392506119b8565b600a818154811061197557fe5b9060005260206000200154841115611992578060010191506119b8565b6001016000908152600d60205260409020546001600160a01b03169350610b7392505050565b5061192b565b6000908152600d60205260409020546001600160a01b03169250505090565b6000806119e8611c41565b905060065481816119f557fe5b069050600c600081548110611a0657fe5b9060005260206000200154811015611a5357505060008052600f6020527ff4803e074bd026baaf6ed2e288c9515f68c72fb7216eebdd7cae1718a53ec375546001600160a01b0316610b73565b600c546000190160005b818111611af057600060028284030482019050600c8181548110611a7d57fe5b9060005260206000200154841015611a9a57600181039250611aea565b600c8181548110611aa757fe5b9060005260206000200154841115611ac457806001019150611aea565b6001016000908152600f60205260409020546001600160a01b03169350610b7392505050565b50611a5d565b6000908152600f60205260409020546001600160a01b03169250505090565b600080611b1a611c41565b90506005548181611b2757fe5b069050600b600081548110611b3857fe5b9060005260206000200154811015611b8557505060008052600e6020527fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c546001600160a01b0316610b73565b600b546000190160005b818111611c2257600060028284030482019050600b8181548110611baf57fe5b9060005260206000200154841015611bcc57600181039250611c1c565b600b8181548110611bd957fe5b9060005260206000200154841115611bf657806001019150611c1c565b6001016000908152600e60205260409020546001600160a01b03169350610b7392505050565b50611b8f565b6000908152600e60205260409020546001600160a01b03169250505090565b600354600154600254604080514460208083019190915242828401526060820195909552608081019390935260a0808401929092528051808403909201825260c090920190915280519101209056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220b449c682e3dd8cb633f9677b9ffc5c6d91cce586c0da8384ed6c098076fdf4a264736f6c634300060c0033",
  "deployedSourceMap": "592:4534:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1784:23:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2741:48;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2741:48:3;-1:-1:-1;;;;;2741:48:3;;:::i;1143:25::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:33;;;;;;;;;;;;;:::i;3612:254:2:-;;;;;;;;;;;;;:::i;:::-;;2655:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2655:45:3;-1:-1:-1;;;;;2655:45:3;;:::i;3996:416:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3996:416:2;;;;:::i;1710:145:5:-;;;;;;;;;;;;;:::i;808:29:2:-;;;;;;;;;;;;;:::i;2120:36:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2120:36:3;;:::i;1392:28::-;;;;;;;;;;;;;:::i;1078:85:5:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1078:85:5;;;;;;;;;;;;;;2572:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2572:45:3;;:::i;940:31:2:-;;;;;;;;;;;;;:::i;2467:45:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2467:45:3;;:::i;1974:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1974:36:3;;:::i;1223:30::-;;;;;;;;;;;;;:::i;2266:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2266:36:3;;:::i;1984:573:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1984:573:2;;:::i;2919:48:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2919:48:3;-1:-1:-1;;;;;2919:48:3;;:::i;1660:33::-;;;;;;;;;;;;;:::i;1841:23::-;;;;;;;;;;;;;:::i;1308:31::-;;;;;;;;;;;;;:::i;2830:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2830:48:3;-1:-1:-1;;;;;2830:48:3;;:::i;2362:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2362:45:3;;:::i;2607:930:2:-;;;;;;;;;;;;;;;;-1:-1:-1;2607:930:2;;;;;;;;;:::i;743:21::-;;;;;;;;;;;;;:::i;1569:33:3:-;;;;;;;;;;;;;:::i;1727:23::-;;;;;;;;;;;;;:::i;2004:240:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2004:240:5;-1:-1:-1;;;;;2004:240:5;;:::i;864:26:2:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;660:20;;;;;;;;;;;;;:::i;1784:23:3:-;;;;:::o;2741:48::-;;;;;;;;;;;;;:::o;1143:25::-;;;-1:-1:-1;;;1143:25:3;;;;;:::o;1478:33::-;;;;:::o;3612:254:2:-;3555:16:3;3545:6;;-1:-1:-1;;;3545:6:3;;;;:26;;;;;;;;;3537:53;;;;;-1:-1:-1;;;3537:53:3;;;;;;;;;;;;-1:-1:-1;;;3537:53:3;;;;;;;;;;;;;;;3681:10:2::1;3693:1;3667:25:::0;;;:13:::1;:25;::::0;;;;;3659:56:::1;;;::::0;;-1:-1:-1;;;3659:56:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3659:56:2;;;;;;;;;;;;;::::1;;3756:10;3725:14;3742:25:::0;;;:13:::1;:25;::::0;;;;;;;;;3777:29;;;;3823:5:::1;::::0;3816:42;;-1:-1:-1;;;3816:42:2;;::::1;::::0;::::1;::::0;;;;;;;;;;;;3742:25;;-1:-1:-1;;;;;3823:5:2;;::::1;::::0;3816:22:::1;::::0;:42;;;;;3742:25;;3816:42;;;;;;;;;3823:5;3816:42;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;3612:254:2:o;2655:45:3:-;;;;;;;;;;;;;:::o;3996:416:2:-;3381:16:3;;3366:12;:31;3358:62;;;;;-1:-1:-1;;;3358:62:3;;;;;;;;;;;;-1:-1:-1;;;3358:62:3;;;;;;;;;;;;;;;1301:12:5::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1290:23:5::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1290:23:5::1;;1282:68;;;::::0;;-1:-1:-1;;;1282:68:5;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4104:12:2::0;1276::::2;1265:7;:23;;;;;;;;;:50;;;-1:-1:-1::0;1303:12:2::2;1292:7;:23;;;;;;;;;1265:50;:76;;;-1:-1:-1::0;1329:12:2::2;1318:7;:23;;;;;;;;;1265:76;1257:117;;;::::0;;-1:-1:-1;;;1257:117:2;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;4146:16:::3;4136:6:::0;;-1:-1:-1;;;4136:6:2;::::3;;;:26;::::0;::::3;;;;;;;4128:61;;;::::0;;-1:-1:-1;;;4128:61:2;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;-1:-1:-1;;;4128:61:2;;;;;;;;;;;;;::::3;;4199:6;:25:::0;;-1:-1:-1;;;;4199:25:2::3;-1:-1:-1::0;;;4199:25:2::3;::::0;;4234:11:::3;:26:::0;;4248:12;;4234:11;-1:-1:-1;;4234:26:2::3;-1:-1:-1::0;4248:12:2;4234:26:::3;::::0;::::3;;;;;;;;::::0;;-1:-1:-1;4270:11:2::3;::::0;4291:5:::3;::::0;4270:58:::3;::::0;;-1:-1:-1;;;4270:58:2;;-1:-1:-1;;;;;4291:5:2;;::::3;4270:58;::::0;::::3;::::0;-1:-1:-1;;4270:58:2;;;;4322:4:::3;4270:58:::0;;;;;;:11:::3;::::0;;::::3;::::0;;::::3;::::0;:20:::3;::::0;:58;;;;;::::3;::::0;;;;;;;;;-1:-1:-1;4270:11:2;:58;::::3;;::::0;::::3;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;::::0;::::3;;-1:-1:-1::0;4338:12:2::3;::::0;-1:-1:-1;4338:10:2::3;:12::i;:::-;4360:14;:12;:14::i;:::-;4397:6;::::0;4390:14:::3;::::0;;-1:-1:-1;;;;;4397:6:2;;::::3;4390:14:::0;;;::::3;::::0;;;;::::3;::::0;;::::3;1360:1:5::2;3996:416:2::0;:::o;1710:145:5:-;1301:12;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:5;;1282:68;;;;;-1:-1:-1;;;1282:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:1:::1;1800:6:::0;;1779:40:::1;::::0;-1:-1:-1;;;;;1800:6:5;;::::1;::::0;1779:40:::1;::::0;1816:1;;1779:40:::1;1846:1;1829:19:::0;;-1:-1:-1;;;;;;1829:19:5::1;::::0;;1710:145::o;808:29:2:-;;;;:::o;2120:36:3:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2120:36:3;:::o;1392:28::-;;;;:::o;1078:85:5:-;1124:7;1150:6;-1:-1:-1;;;;;1150:6:5;1078:85;;:::o;2572:45:3:-;;;;;;;;;;;;-1:-1:-1;;;;;2572:45:3;;:::o;940:31:2:-;;;;;;-1:-1:-1;;;;;940:31:2;;:::o;2467:45:3:-;;;;;;;;;;;;-1:-1:-1;;;;;2467:45:3;;:::o;1974:36::-;;;;;;;;;;1223:30;;;;:::o;2266:36::-;;;;;;;;;;1984:573:2;3124:16:3;3114:6;;-1:-1:-1;;;3114:6:3;;;;:26;;;;;;;;;3106:53;;;;;-1:-1:-1;;;3106:53:3;;;;;;;;;;;;-1:-1:-1;;;3106:53:3;;;;;;;;;;;;;;;3192:15;;3177:12;:30;3169:61;;;;;-1:-1:-1;;;3169:61:3;;;;;;;;;;;;-1:-1:-1;;;3169:61:3;;;;;;;;;;;;;;;2068:1:2::1;2059:6;:10;2051:45;;;::::0;;-1:-1:-1;;;2051:45:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2051:45:2;;;;;;;;;;;;;::::1;;2133:5;::::0;2126:50:::1;::::0;;-1:-1:-1;;;2126:50:2;;2150:10:::1;2126:50;::::0;::::1;::::0;2170:4:::1;2126:50:::0;;;;;;2106:17:::1;::::0;-1:-1:-1;;;;;2133:5:2::1;::::0;2126:23:::1;::::0;:50;;;;;::::1;::::0;;;;;;;;2133:5;2126:50;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2126:50:2;;-1:-1:-1;2194:19:2;;::::1;;2186:57;;;::::0;;-1:-1:-1;;;2186:57:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2186:57:2;;;;;;;;;;;;;::::1;;2260:5;::::0;2253:61:::1;::::0;;-1:-1:-1;;;2253:61:2;;2280:10:::1;2253:61;::::0;::::1;::::0;2300:4:::1;2253:61:::0;;;;;;;;;;;;-1:-1:-1;;;;;2260:5:2;;::::1;::::0;2253:26:::1;::::0;:61;;;;;::::1;::::0;;;;;;;;;2260:5:::1;::::0;2253:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;2331:5:2::1;::::0;2354:11:::1;::::0;2324:51:::1;::::0;;-1:-1:-1;;;2324:51:2;;2331:5:::1;2354:11:::0;;::::1;-1:-1:-1::0;;;;;2354:11:2;;::::1;2324:51;::::0;::::1;::::0;;;;;;;;;2331:5;::::1;::::0;2324:21:::1;::::0;:51;;;;;2253:61:::1;::::0;2324:51;;;;;;;;2331:5:::1;::::0;2324:51;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;2385:11:2::1;::::0;2405:5:::1;::::0;2385:51:::1;::::0;;-1:-1:-1;;;2385:51:2;;-1:-1:-1;;;;;2405:5:2;;::::1;2385:51;::::0;::::1;::::0;;;;;;;2428:4:::1;2385:51:::0;;;;-1:-1:-1;2385:51:2;;;;;;;;:11:::1;::::0;;::::1;::::0;;::::1;::::0;:19:::1;::::0;:51;;;;;-1:-1:-1;2385:51:2;;;;;;-1:-1:-1;2385:11:2;:51;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2446:13:2::1;:23:::0;;;::::1;::::0;;-1:-1:-1;;2479:14:2::1;:24:::0;;;::::1;::::0;;-1:-1:-1;2527:10:2::1;2446:13;2513:25:::0;;;:13:::1;:25;::::0;;;;:35;;;;::::1;::::0;;1984:573::o;2919:48:3:-;;;;;;;;;;;;;:::o;1660:33::-;;;;:::o;1841:23::-;;;;:::o;1308:31::-;;;;:::o;2830:48::-;;;;;;;;;;;;;:::o;2362:45::-;;;;;;;;;;;;-1:-1:-1;;;;;2362:45:3;;:::o;2607:930:2:-;3124:16:3;3114:6;;-1:-1:-1;;;3114:6:3;;;;:26;;;;;;;;;3106:53;;;;;-1:-1:-1;;;3106:53:3;;;;;;;;;;;;-1:-1:-1;;;3106:53:3;;;;;;;;;;;;;;;3192:15;;3177:12;:30;3169:61;;;;;-1:-1:-1;;;3169:61:3;;;;;;;;;;;;-1:-1:-1;;;3169:61:3;;;;;;;;;;;;;;;2693:7:2;1276:12:::1;1265:7;:23;;;;;;;;;:50;;;-1:-1:-1::0;1303:12:2::1;1292:7;:23;;;;;;;;;1265:50;:76;;;-1:-1:-1::0;1329:12:2::1;1318:7;:23;;;;;;;;;1265:76;1257:117;;;::::0;;-1:-1:-1;;;1257:117:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2729:1:::2;2720:6;:10;2712:45;;;::::0;;-1:-1:-1;;;2712:45:2;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;2712:45:2;;;;;;;;;;;;;::::2;;2780:12;2771:7;:21;;;;;;;;;2767:228;;;2808:20;2821:6;2808:12;:20::i;:::-;2767:228;;;2858:12;2849:7;:21;;;;;;;;;2845:150;;;2886:20;2899:6;2886:12;:20::i;2845:150::-;2936:12;2927:7;:21;;;;;;;;;2923:72;;;2964:20;2977:6;2964:12;:20::i;:::-;3081:5;::::0;3074:50:::2;::::0;;-1:-1:-1;;;3074:50:2;;3098:10:::2;3074:50;::::0;::::2;::::0;3118:4:::2;3074:50:::0;;;;;;3054:17:::2;::::0;-1:-1:-1;;;;;3081:5:2::2;::::0;3074:23:::2;::::0;:50;;;;;::::2;::::0;;;;;;;;3081:5;3074:50;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;3074:50:2;;-1:-1:-1;3142:19:2;;::::2;;3134:57;;;::::0;;-1:-1:-1;;;3134:57:2;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;3134:57:2;;;;;;;;;;;;;::::2;;3208:5;::::0;3201:61:::2;::::0;;-1:-1:-1;;;3201:61:2;;3228:10:::2;3201:61;::::0;::::2;::::0;3248:4:::2;3201:61:::0;;;;;;;;;;;;-1:-1:-1;;;;;3208:5:2;;::::2;::::0;3201:26:::2;::::0;:61;;;;;::::2;::::0;;;;;;;;;3208:5:::2;::::0;3201:61;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;3279:5:2::2;::::0;3302:11:::2;::::0;3272:51:::2;::::0;;-1:-1:-1;;;3272:51:2;;3279:5:::2;3302:11:::0;;::::2;-1:-1:-1::0;;;;;3302:11:2;;::::2;3272:51;::::0;::::2;::::0;;;;;;;;;3279:5;::::2;::::0;3272:21:::2;::::0;:51;;;;;3201:61:::2;::::0;3272:51;;;;;;;;3279:5:::2;::::0;3272:51;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;3333:11:2::2;::::0;3353:5:::2;::::0;3333:51:::2;::::0;;-1:-1:-1;;;3333:51:2;;-1:-1:-1;;;;;3353:5:2;;::::2;3333:51;::::0;::::2;::::0;;;;;;;3376:4:::2;3333:51:::0;;;;-1:-1:-1;3333:51:2;;;;;;;;:11:::2;::::0;;::::2;::::0;;::::2;::::0;:19:::2;::::0;:51;;;;;-1:-1:-1;3333:51:2;;;;;;-1:-1:-1;3333:11:2;:51;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;3394:13:2::2;:23:::0;;;::::2;::::0;;3441:10:::2;3394:13;3427:25:::0;;;:13:::2;:25;::::0;;;;;;;;:35;;;::::2;::::0;;3477:52;;;;;::::2;::::0;-1:-1:-1;3441:10:2;;-1:-1:-1;3499:7:2;;3411:6;;3516:12:::2;::::0;3477:52;;;;::::2;::::0;3499:7;;3477:52;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:1;3240::3::1;2607:930:2::0;;:::o;743:21::-;;;-1:-1:-1;;;;;743:21:2;;:::o;1569:33:3:-;;;;:::o;1727:23::-;;;;:::o;2004:240:5:-;1301:12;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:5;;1282:68;;;;;-1:-1:-1;;;1282:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2092:22:5;::::1;2084:73;;;;-1:-1:-1::0;;;2084:73:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:6;::::0;;2172:38:::1;::::0;-1:-1:-1;;;;;2172:38:5;;::::1;::::0;2193:6;::::1;::::0;2172:38:::1;::::0;::::1;2220:6;:17:::0;;-1:-1:-1;;;;;;2220:17:5::1;-1:-1:-1::0;;;;;2220:17:5;;;::::1;::::0;;;::::1;::::0;;2004:240::o;864:26:2:-;;;;;;:::o;660:20::-;;;-1:-1:-1;;;;;660:20:2;;:::o;598:104:4:-;685:10;598:104;:::o;4500:307:2:-;4559:12;4544:11;;;;:27;;;;;;;;;4541:260;;;4596:16;:14;:16::i;:::-;4587:6;:25;;-1:-1:-1;;;;;;4587:25:2;-1:-1:-1;;;;;4587:25:2;;;;;;;;;;4541:260;;;4648:12;4633:11;;;;:27;;;;;;;;;4629:172;;;4685:16;:14;:16::i;4629:172::-;4737:12;4722:11;;;;:27;;;;;;;;;4718:83;;;4774:16;:14;:16::i;:::-;4765:6;:25;;-1:-1:-1;;;;;;4765:25:2;-1:-1:-1;;;;;4765:25:2;;;;;;;;;;4718:83;4500:307::o;4912:175::-;5020:13;;4986:5;;4979:38;;;-1:-1:-1;;;4979:38:2;;5011:4;4979:38;;;;;;4956:20;;5020:13;-1:-1:-1;;;;;4986:5:2;;4979:23;;:38;;;;;;;;;;;;;;4986:5;4979:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4979:38:2;5057:6;;-1:-1:-1;;;;;5057:6:2;5043:21;;;;:13;4979:38;5043:21;;;;:37;;4979:54;;;;5043:37;;;;;-1:-1:-1;4912:175:2:o;3978:385:3:-;4108:15;;;4166:10;4035:20;4149:28;;;:16;:28;;;;;;;;:38;;4058:12;4108:30;;;4097:42;;;;4149:38;;;;;;4197:18;:28;;;;;;;;;4235:18;:43;;;;;;;;;;;;;;4302:8;;;4288:23;;:13;:23;;;;;;;:36;;-1:-1:-1;;;;;;4288:36:3;;;;;;;4334:13;;;;;3978:385::o;4850:::-;4979:15;;;5037:10;4907:20;5020:28;;;:16;:28;;;;;;;;:38;;4930:12;4979:30;;;4969:41;;;;5020:38;;;;;;5068:18;:28;;;;;;;;;5106:18;:43;;;;;;;;;;;;;;5174:8;;;5160:23;;:13;:23;;;;;;;:36;;-1:-1:-1;;;;;;5160:36:3;;;;;;;5206:13;;;;;4850:385::o;4414:::-;4544:15;;;4602:10;4471:20;4585:28;;;:16;:28;;;;;;;;:38;;4494:12;4544:30;;;4533:42;;;;4585:38;;;;;;4633:18;:28;;;;;;;;;4671:18;:43;;;;;;;;;;;;;;4738:8;;4724:23;;:13;:23;;;;;;:36;;-1:-1:-1;;;;;;4724:36:3;;;;;;;4770:8;:13;;;;;;;4414:385::o;5289:663::-;5332:7;5351:14;5368:8;:6;:8::i;:::-;5351:25;;5404:18;;5395:6;:27;;;;;;5386:36;;5445:18;5464:1;5445:21;;;;;;;;;;;;;;;;5436:6;:30;5433:83;;;-1:-1:-1;;5489:16:3;;;:13;:16;;;;-1:-1:-1;;;;;5489:16:3;5482:23;;5433:83;5536:18;:25;-1:-1:-1;;5536:27:3;5526:7;5595:316;5607:2;5601;:8;5595:316;;5625:11;5652:1;5645:5;;;5644:9;5639:2;:14;5625:28;;5679:18;5698:3;5679:23;;;;;;;;;;;;;;;;5670:6;:32;5667:234;;;5730:1;5726:3;:5;5721:10;;5667:234;;;5765:18;5784:3;5765:23;;;;;;;;;;;;;;;;5757:6;:31;5753:148;;;5813:3;5819:1;5813:7;5808:12;;5753:148;;;5884:1;5880:5;5866:20;;;;:13;:20;;;;;;-1:-1:-1;;;;;5866:20:3;;-1:-1:-1;5859:27:3;;-1:-1:-1;;;5859:27:3;5753:148;5595:316;;;;5927:17;;;;:13;:17;;;;;;-1:-1:-1;;;;;5927:17:3;;-1:-1:-1;;;5289:663:3;:::o;6719:::-;6762:7;6781:14;6798:8;:6;:8::i;:::-;6781:25;;6834:18;;6825:6;:27;;;;;;6816:36;;6875:18;6894:1;6875:21;;;;;;;;;;;;;;;;6866:6;:30;6863:83;;;-1:-1:-1;;6919:16:3;;;:13;:16;;;;-1:-1:-1;;;;;6919:16:3;6912:23;;6863:83;6966:18;:25;-1:-1:-1;;6966:27:3;6956:7;7025:316;7037:2;7031;:8;7025:316;;7055:11;7082:1;7075:5;;;7074:9;7069:2;:14;7055:28;;7109:18;7128:3;7109:23;;;;;;;;;;;;;;;;7100:6;:32;7097:234;;;7160:1;7156:3;:5;7151:10;;7097:234;;;7195:18;7214:3;7195:23;;;;;;;;;;;;;;;;7187:6;:31;7183:148;;;7243:3;7249:1;7243:7;7238:12;;7183:148;;;7314:1;7310:5;7296:20;;;;:13;:20;;;;;;-1:-1:-1;;;;;7296:20:3;;-1:-1:-1;7289:27:3;;-1:-1:-1;;;7289:27:3;7183:148;7025:316;;;;7357:17;;;;:13;:17;;;;;;-1:-1:-1;;;;;7357:17:3;;-1:-1:-1;;;6719:663:3;:::o;6004:::-;6047:7;6066:14;6083:8;:6;:8::i;:::-;6066:25;;6119:18;;6110:6;:27;;;;;;6101:36;;6160:18;6179:1;6160:21;;;;;;;;;;;;;;;;6151:6;:30;6148:83;;;-1:-1:-1;;6204:16:3;;;:13;:16;;;;-1:-1:-1;;;;;6204:16:3;6197:23;;6148:83;6251:18;:25;-1:-1:-1;;6251:27:3;6241:7;6310:316;6322:2;6316;:8;6310:316;;6340:11;6367:1;6360:5;;;6359:9;6354:2;:14;6340:28;;6394:18;6413:3;6394:23;;;;;;;;;;;;;;;;6385:6;:32;6382:234;;;6445:1;6441:3;:5;6436:10;;6382:234;;;6480:18;6499:3;6480:23;;;;;;;;;;;;;;;;6472:6;:31;6468:148;;;6528:3;6534:1;6528:7;6523:12;;6468:148;;;6599:1;6595:5;6581:20;;;;:13;:20;;;;;;-1:-1:-1;;;;;6581:20:3;;-1:-1:-1;6574:27:3;;-1:-1:-1;;;6574:27:3;6468:148;6310:316;;;;6642:17;;;;:13;:17;;;;;;-1:-1:-1;;;;;6642:17:3;;-1:-1:-1;;;6004:663:3;:::o;7500:188::-;7629:13;;7644:15;;7661:16;;7577:102;;;7594:16;7577:102;;;;;;;;7612:15;7577:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7567:113;;;;;7500:188;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implement is a lossless betting contracts for football 1X2 that use Aave to generate yield Contract has an owner to settle the bet, to be replaced by Chainlink. Process : - Owner creates contract, sets token and lendingpool : token for betting and lending pool to use.           - Contract can also be sponsored : someone deposit without participating in betting.",
    "kind": "dev",
    "methods": {
      "awayBetPlacer(uint256)": {
        "notice": "tracks which playerr placed away bet number i"
      },
      "awayBets()": {
        "notice": "number of away bets"
      },
      "awayPointsAfterBet(uint256)": {
        "notice": "tracks total points earned by player betting away after bet number i, used for computing winner"
      },
      "awayPointsTrackers()": {
        "notice": "total points earned by players betting away"
      },
      "constructor": {
        "details": "Initialize the contract settings : matchStartBlock, matchFinishBlock, token and lending pool."
      },
      "drawBetPlacer(uint256)": {
        "notice": "tracks which playerr placed draw bet number i"
      },
      "drawBets()": {
        "notice": "number of draw bets"
      },
      "drawPointsAfterBet(uint256)": {
        "notice": "tracks total points earned by player betting draw after bet number i, used for computing winner"
      },
      "drawPointsTrackers()": {
        "notice": "total points earned by players betting draw"
      },
      "homeBetPlacer(uint256)": {
        "notice": "tracks which playerr placed home bet number i"
      },
      "homeBets()": {
        "notice": "number of home bets"
      },
      "homePointsAfterBet(uint256)": {
        "notice": "tracks total points earned by player betting home after bet number i, used for computing winner"
      },
      "homePointsTrackers()": {
        "notice": "total points earned by players betting home"
      },
      "lendingPool()": {
        "notice": "Aave Lending pool to deposit tokens"
      },
      "matchFinishBlock()": {
        "notice": "block after which game should have ended"
      },
      "matchStartBlock()": {
        "notice": "block at which game is supposed to start"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "placeBet(uint8,uint256)": {
        "details": "Places the bet."
      },
      "playerAwayPoints(address)": {
        "notice": "tracks players away points"
      },
      "playerBalance(address)": {
        "notice": "tracks players deposits"
      },
      "playerDrawPoints(address)": {
        "notice": "tracks players draw points"
      },
      "playerHomePoints(address)": {
        "notice": "tracks players home points"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setMatchWinnerAndWithdrawFromPool(uint8)": {
        "details": "can be called by owner to settle game and withdraw from the pool : To be replaced by chainlink."
      },
      "sponsor(uint256)": {
        "details": "Sponsor the contract, funds received will be used to generate yield."
      },
      "sponsorDeposit()": {
        "notice": "amount of deposit by sponsors"
      },
      "token()": {
        "notice": "token used to bet"
      },
      "totalDeposits()": {
        "notice": "total amount deposited in the contract"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "winner()": {
        "notice": "player winning the lottery after game is settled"
      },
      "winningSide()": {
        "notice": "team winning"
      },
      "withdraw()": {
        "details": "Withdraw balance after game is over."
      }
    },
    "title": "AaveLossless",
    "version": 1
  },
  "offset": [
    592,
    5126
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB168BA4B GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD9D52160 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE8EACA75 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE8EACA75 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xFBF06338 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x619 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xD9D52160 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xDCB3B30E EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xE11F3F77 EQ PUSH2 0x597 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xC003AEF3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC003AEF3 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xC69DE224 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xC734F0C3 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xC7B8CAD5 EQ PUSH2 0x4FF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xB168BA4B EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xB3DB3CED EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xB6CCE5E2 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xB810FE8D EQ PUSH2 0x48D JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x788E26E7 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x91C54CA4 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x91C54CA4 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0xAA236DF4 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xAD9ED66E EQ PUSH2 0x407 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x788E26E7 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x79DB8A13 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36D JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x4E33F83B EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x645A0047 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x304 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x873D9EC EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x9126F08 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x36201E53 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x634 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x267 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x65C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x7B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0xA7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xB3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0xB91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xBCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xF71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xF77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xF7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF95 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x1475 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1484 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x148A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x609 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x267 JUMPI INVALID JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x676 JUMPI INVALID JUMPDEST EQ PUSH2 0x6B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13585D18DA081B9BDD081C185A59 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x70C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x62616C616E6365206973207A65726F PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x14 SLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD DUP3 SWAP1 MSTORE SWAP2 MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD NUMBER GT PUSH2 0x802 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11D85B59481A5CC8199A5B9A5CDA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x80A PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81B PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x876 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x885 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x89C JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x89A JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x8B2 JUMPI POP PUSH1 0x2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B0 JUMPI INVALID JUMPDEST EQ JUMPDEST PUSH2 0x903 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E7420666F72206265737469646500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x91C JUMPI INVALID JUMPDEST EQ PUSH2 0x967 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x86C2DCE840E6CAE8E8D8CA40E8D0D2E640DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x17 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x993 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x17 SLOAD PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH4 0x69328DEC SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA33 SWAP1 POP PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0x166B JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD PUSH32 0x745C90B656B4AAFE296C8CA35AEACFE56CB96C90E1D320E5DA643FFF1051B6C0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA86 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA97 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAF2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4F JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4F JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBF9 JUMPI INVALID JUMPDEST EQ PUSH2 0xC3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26B0BA31B4103737BA1037B832B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0xC87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E7420706C61636520626574206E6F77 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B6B7BAB73A1036BAB9BA103132903837B9B4BA34B3 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDA5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x436865636B2074686520746F6B656E20616C6C6F77616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x14 SLOAD PUSH1 0x17 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x17 SLOAD PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD PUSH2 0x100 SWAP1 SWAP5 DIV SWAP1 SWAP3 AND SWAP3 PUSH4 0xE8EDA9DF SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE POP POP PUSH1 0x16 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFC9 JUMPI INVALID JUMPDEST EQ PUSH2 0x100C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26B0BA31B4103737BA1037B832B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0x1057 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E7420706C61636520626574206E6F77 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1066 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x107D JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x107B JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x1093 JUMPI POP PUSH1 0x2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1091 JUMPI INVALID JUMPDEST EQ JUMPDEST PUSH2 0x10E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E7420666F72206265737469646500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1132 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B6B7BAB73A1036BAB9BA103132903837B9B4BA34B3 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1140 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1154 JUMPI PUSH2 0x114F DUP3 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1162 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1171 JUMPI PUSH2 0x114F DUP3 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x117F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x118E JUMPI PUSH2 0x118E DUP3 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x125E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x436865636B2074686520746F6B656E20616C6C6F77616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x14 SLOAD PUSH1 0x17 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x17 SLOAD PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD PUSH2 0x100 SWAP1 SWAP5 DIV SWAP1 SWAP3 AND SWAP3 PUSH4 0xE8EDA9DF SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD DUP7 ADD DUP2 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0x8D3970B91D4F8DBB1A8368398F1AC8BDD7A7FB5682C8360B7396214F65D7E55F SWAP6 POP SWAP2 SWAP4 POP DUP9 SWAP3 DUP9 SWAP3 NUMBER SWAP3 SWAP1 SWAP2 SWAP1 DUP3 ADD SWAP1 DUP6 SWAP1 DUP2 GT ISZERO PUSH2 0x1450 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1498 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A9 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1504 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C91 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15D3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1606 JUMPI PUSH2 0x15E1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x17 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1619 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1627 JUMPI PUSH2 0x15E1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x2 PUSH1 0x17 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x163A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1648 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP2 SUB SWAP1 SWAP2 ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD NUMBER SWAP1 SWAP7 SUB SWAP8 SWAP1 SWAP8 MUL SWAP5 DUP6 ADD SWAP1 SWAP7 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP4 DUP5 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 DUP8 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 MSTORE PUSH1 0xD SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD NUMBER SWAP1 SWAP7 SUB SWAP8 SWAP1 SWAP8 MUL SWAP5 DUP6 ADD SWAP1 SWAP7 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP4 DUP5 SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP1 DUP8 ADD SWAP1 SWAP2 SSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 MSTORE PUSH1 0xF SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD NUMBER SWAP1 SWAP7 SUB SWAP8 SWAP1 SWAP8 MUL SWAP5 DUP6 ADD SWAP1 SWAP7 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP4 DUP5 SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP1 DUP8 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18B6 PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 DUP2 PUSH2 0x18C3 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x18D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1921 JUMPI POP POP PUSH1 0x0 DUP1 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH32 0x81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB73 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 GT PUSH2 0x19BE JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 SUB DIV DUP3 ADD SWAP1 POP PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x194B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 LT ISZERO PUSH2 0x1968 JUMPI PUSH1 0x1 DUP2 SUB SWAP3 POP PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1975 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 GT ISZERO PUSH2 0x1992 JUMPI DUP1 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0xB73 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH2 0x192B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19E8 PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 DUP2 PUSH2 0x19F5 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1A06 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1A53 JUMPI POP POP PUSH1 0x0 DUP1 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH32 0xF4803E074BD026BAAF6ED2E288C9515F68C72FB7216EEBDD7CAE1718A53EC375 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB73 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 GT PUSH2 0x1AF0 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 SUB DIV DUP3 ADD SWAP1 POP PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A7D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 LT ISZERO PUSH2 0x1A9A JUMPI PUSH1 0x1 DUP2 SUB SWAP3 POP PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 GT ISZERO PUSH2 0x1AC4 JUMPI DUP1 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0xB73 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B1A PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 DUP2 PUSH2 0x1B27 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1B38 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1B85 JUMPI POP POP PUSH1 0x0 DUP1 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH32 0xE710864318D4A32F37D6CE54CB3FADBEF648DD12D8DBDF53973564D56B7F881C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB73 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 GT PUSH2 0x1C22 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 SUB DIV DUP3 ADD SWAP1 POP PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BAF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 LT ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x1 DUP2 SUB SWAP3 POP PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BD9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 GT ISZERO PUSH2 0x1BF6 JUMPI DUP1 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0xB73 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DIFFICULTY PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x80 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP5 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220B449C682E3DD DUP13 0xB6 CALLER 0xF9 PUSH8 0x7B9FFC5C6D91CCE5 DUP7 0xC0 0xDA DUP4 DUP5 0xED PUSH13 0x98076FDF4A264736F6C634300 MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        592,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "12": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB168BA4B"
    },
    "25": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102"
    },
    "29": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD9D52160"
    },
    "36": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8EACA75"
    },
    "47": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8EACA75"
    },
    "58": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5AC"
    },
    "62": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C1"
    },
    "73": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFBF06338"
    },
    "80": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F4"
    },
    "84": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFC0C546A"
    },
    "91": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x619"
    },
    "95": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "99": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD9D52160"
    },
    "107": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x532"
    },
    "111": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDCB3B30E"
    },
    "118": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55C"
    },
    "122": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDFBF53AE"
    },
    "129": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x582"
    },
    "133": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE11F3F77"
    },
    "140": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x597"
    },
    "144": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "148": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "149": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC003AEF3"
    },
    "156": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC003AEF3"
    },
    "167": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0"
    },
    "171": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC69DE224"
    },
    "178": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D5"
    },
    "182": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC734F0C3"
    },
    "189": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EA"
    },
    "193": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC7B8CAD5"
    },
    "200": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FF"
    },
    "204": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "208": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "209": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "210": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "211": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB168BA4B"
    },
    "216": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x431"
    },
    "220": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "222": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB3DB3CED"
    },
    "227": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x446"
    },
    "231": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB6CCE5E2"
    },
    "238": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x470"
    },
    "242": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB810FE8D"
    },
    "249": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x48D"
    },
    "253": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "257": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "258": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "259": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "260": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x788E26E7"
    },
    "265": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "270": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "271": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x91C54CA4"
    },
    "276": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "281": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "282": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x91C54CA4"
    },
    "287": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E"
    },
    "291": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA59A9973"
    },
    "298": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "302": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "303": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAA236DF4"
    },
    "309": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DD"
    },
    "313": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAD9ED66E"
    },
    "320": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x407"
    },
    "324": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "325": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "328": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "329": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x788E26E7"
    },
    "336": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "340": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x79DB8A13"
    },
    "347": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E"
    },
    "351": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7D882097"
    },
    "358": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "362": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "363": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "364": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "369": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "370": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36D"
    },
    "373": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "377": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "378": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CCFD60B"
    },
    "385": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "GT",
      "path": "2"
    },
    "386": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CCFD60B"
    },
    "396": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D"
    },
    "400": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "401": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4E33F83B"
    },
    "407": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "408": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A4"
    },
    "411": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "412": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "413": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x645A0047"
    },
    "418": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "419": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D7"
    },
    "422": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "423": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "424": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "429": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "430": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304"
    },
    "433": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "434": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3"
    },
    "437": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "438": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "439": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "440": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x873D9EC"
    },
    "445": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "446": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E8"
    },
    "449": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "450": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "451": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9126F08"
    },
    "456": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "457": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20F"
    },
    "460": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "461": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "462": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x200D2ED2"
    },
    "467": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "468": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x242"
    },
    "471": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "472": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "473": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x36201E53"
    },
    "478": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "EQ",
      "path": "2"
    },
    "479": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "482": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "483": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "484": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "486": {
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "487": {
      "first_revert": true,
      "fn": null,
      "offset": [
        592,
        5126
      ],
      "op": "REVERT",
      "path": "2"
    },
    "488": {
      "offset": [
        1784,
        1807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "489": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "490": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "491": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "492": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F4"
    },
    "495": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "496": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "498": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "499": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "REVERT",
      "path": "3"
    },
    "500": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "501": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "POP",
      "path": "3"
    },
    "502": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "505": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "508": {
      "fn": null,
      "jump": "i",
      "offset": [
        1784,
        1807
      ],
      "op": "JUMP",
      "path": "3"
    },
    "509": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "510": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "512": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "513": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "514": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "515": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "DUP3",
      "path": "3"
    },
    "516": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "517": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "518": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "519": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "520": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "521": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "SUB",
      "path": "3"
    },
    "522": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "524": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "ADD",
      "path": "3"
    },
    "525": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "526": {
      "fn": null,
      "offset": [
        1784,
        1807
      ],
      "op": "RETURN",
      "path": "3"
    },
    "527": {
      "offset": [
        2741,
        2789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "528": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "529": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "530": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "531": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21B"
    },
    "534": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "535": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "537": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "538": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "REVERT",
      "path": "3"
    },
    "539": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "540": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "POP",
      "path": "3"
    },
    "541": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "544": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "546": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "547": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "548": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "SUB",
      "path": "3"
    },
    "549": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "551": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "552": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "LT",
      "path": "3"
    },
    "553": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "554": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x232"
    },
    "557": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "558": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "560": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "561": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "REVERT",
      "path": "3"
    },
    "562": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "offset": [
        2741,
        2789
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "offset": [
        2741,
        2789
      ],
      "op": "AND",
      "path": "3"
    },
    "574": {
      "fn": null,
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x634"
    },
    "577": {
      "fn": null,
      "jump": "i",
      "offset": [
        2741,
        2789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "578": {
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "579": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "580": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "581": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "582": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E"
    },
    "585": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "586": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "588": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "589": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "REVERT",
      "path": "3"
    },
    "590": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "591": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "POP",
      "path": "3"
    },
    "592": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x257"
    },
    "595": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x646"
    },
    "598": {
      "fn": null,
      "jump": "i",
      "offset": [
        1143,
        1168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "599": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "600": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "602": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "603": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "604": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "605": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "607": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "608": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "GT",
      "path": "3"
    },
    "609": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "610": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267"
    },
    "613": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "614": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "INVALID",
      "path": "3"
    },
    "615": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "616": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "617": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "618": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "620": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "ADD",
      "path": "3"
    },
    "621": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "622": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "POP",
      "path": "3"
    },
    "623": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "POP",
      "path": "3"
    },
    "624": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "626": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "627": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "628": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "629": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "SUB",
      "path": "3"
    },
    "630": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "631": {
      "fn": null,
      "offset": [
        1143,
        1168
      ],
      "op": "RETURN",
      "path": "3"
    },
    "632": {
      "offset": [
        1478,
        1511
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "633": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "634": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "DUP1",
      "path": "3"
    },
    "635": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "636": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "639": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "640": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "642": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "DUP1",
      "path": "3"
    },
    "643": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "REVERT",
      "path": "3"
    },
    "644": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "645": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "POP",
      "path": "3"
    },
    "646": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "649": {
      "fn": null,
      "offset": [
        1478,
        1511
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x656"
    },
    "652": {
      "fn": null,
      "jump": "i",
      "offset": [
        1478,
        1511
      ],
      "op": "JUMP",
      "path": "3"
    },
    "653": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "654": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "655": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "656": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "657": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299"
    },
    "660": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "661": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "663": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "664": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "REVERT",
      "path": "2"
    },
    "665": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "666": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "POP",
      "path": "2"
    },
    "667": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "670": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65C"
    },
    "673": {
      "fn": "AaveLossless.withdraw",
      "jump": "i",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "674": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "675": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "STOP",
      "path": "2"
    },
    "676": {
      "offset": [
        2655,
        2700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "677": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "678": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "679": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "680": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B0"
    },
    "683": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "684": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "686": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "687": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "REVERT",
      "path": "3"
    },
    "688": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "689": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "POP",
      "path": "3"
    },
    "690": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "693": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "695": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "696": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "697": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "SUB",
      "path": "3"
    },
    "698": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "700": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP2",
      "path": "3"
    },
    "701": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "LT",
      "path": "3"
    },
    "702": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "703": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7"
    },
    "706": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "707": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "709": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "710": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "REVERT",
      "path": "3"
    },
    "711": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "offset": [
        2655,
        2700
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "op": "SUB"
    },
    "722": {
      "offset": [
        2655,
        2700
      ],
      "op": "AND",
      "path": "3"
    },
    "723": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A7"
    },
    "726": {
      "fn": "AaveLossless.withdraw",
      "jump": "i",
      "offset": [
        2655,
        2700
      ],
      "op": "JUMP",
      "path": "3"
    },
    "727": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "728": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "729": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "730": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "731": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E3"
    },
    "734": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "735": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "737": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "738": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "REVERT",
      "path": "2"
    },
    "739": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "740": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "POP",
      "path": "2"
    },
    "741": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "744": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "746": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "747": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "748": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "SUB",
      "path": "2"
    },
    "749": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "751": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "752": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "LT",
      "path": "2"
    },
    "753": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "754": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA"
    },
    "757": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "758": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "760": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "761": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "REVERT",
      "path": "2"
    },
    "762": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "763": {
      "op": "POP"
    },
    "764": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "765": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "767": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "AND",
      "path": "2"
    },
    "768": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B9"
    },
    "771": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "i",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "773": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "DUP1",
      "path": "5"
    },
    "775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "776": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x310"
    },
    "779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "DUP1",
      "path": "5"
    },
    "783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "REVERT",
      "path": "5"
    },
    "784": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "POP",
      "path": "5"
    },
    "786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A2"
    },
    "789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA7E"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMP",
      "path": "5"
    },
    "793": {
      "offset": [
        808,
        837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x325"
    },
    "800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "REVERT",
      "path": "2"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "POP",
      "path": "2"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD"
    },
    "810": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3C"
    },
    "813": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        808,
        837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "814": {
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33A"
    },
    "821": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "822": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "824": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "REVERT",
      "path": "3"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "POP",
      "path": "3"
    },
    "828": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "835": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SUB",
      "path": "3"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "LT",
      "path": "3"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "841": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x351"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "847": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "REVERT",
      "path": "3"
    },
    "849": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "offset": [
        2120,
        2156
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "852": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB42"
    },
    "855": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMP",
      "path": "3"
    },
    "856": {
      "offset": [
        1392,
        1420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "858": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x364"
    },
    "863": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "864": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "866": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "867": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "REVERT",
      "path": "3"
    },
    "868": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "869": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "POP",
      "path": "3"
    },
    "870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "873": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB60"
    },
    "876": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1392,
        1420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "878": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP1",
      "path": "5"
    },
    "880": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "881": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x379"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "887": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP1",
      "path": "5"
    },
    "888": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "REVERT",
      "path": "5"
    },
    "889": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "890": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "POP",
      "path": "5"
    },
    "891": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x382"
    },
    "894": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB66"
    },
    "897": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "898": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "899": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "901": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP1",
      "path": "5"
    },
    "902": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "912": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "913": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "AND",
      "path": "5"
    },
    "914": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP3",
      "path": "5"
    },
    "915": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "916": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "917": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "918": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "DUP2",
      "path": "5"
    },
    "919": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "920": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SUB",
      "path": "5"
    },
    "921": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "923": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "ADD",
      "path": "5"
    },
    "924": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "925": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "RETURN",
      "path": "5"
    },
    "926": {
      "offset": [
        2572,
        2617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "927": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "928": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "929": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "930": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AA"
    },
    "933": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "934": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "936": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "937": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "REVERT",
      "path": "3"
    },
    "938": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "939": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "POP",
      "path": "3"
    },
    "940": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "943": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "945": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "946": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "947": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "SUB",
      "path": "3"
    },
    "948": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP2",
      "path": "3"
    },
    "951": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "LT",
      "path": "3"
    },
    "952": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "953": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "956": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "957": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "959": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "960": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "REVERT",
      "path": "3"
    },
    "961": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "offset": [
        2572,
        2617
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "964": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB76"
    },
    "967": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2572,
        2617
      ],
      "op": "JUMP",
      "path": "3"
    },
    "968": {
      "offset": [
        940,
        971
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "970": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "DUP1",
      "path": "2"
    },
    "971": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "975": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "976": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "978": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "DUP1",
      "path": "2"
    },
    "979": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "REVERT",
      "path": "2"
    },
    "980": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "POP",
      "path": "2"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x382"
    },
    "985": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB91"
    },
    "988": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        940,
        971
      ],
      "op": "JUMP",
      "path": "2"
    },
    "989": {
      "offset": [
        2467,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "990": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "991": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "992": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "993": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E9"
    },
    "996": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "997": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "999": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1000": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1001": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1002": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "POP",
      "path": "3"
    },
    "1003": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "1006": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1008": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1010": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "SUB",
      "path": "3"
    },
    "1011": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1013": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1014": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "LT",
      "path": "3"
    },
    "1015": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1016": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x400"
    },
    "1019": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1020": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1022": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1023": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1024": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "offset": [
        2467,
        2512
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1027": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "1030": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2467,
        2512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1031": {
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1032": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1033": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1034": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1035": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x413"
    },
    "1038": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1039": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1041": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1042": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1043": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1044": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "POP",
      "path": "3"
    },
    "1045": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1048": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1050": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1051": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1052": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "SUB",
      "path": "3"
    },
    "1053": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1055": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1056": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "LT",
      "path": "3"
    },
    "1057": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1058": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42A"
    },
    "1061": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1062": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1064": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1065": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1066": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "offset": [
        1974,
        2010
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1069": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC0"
    },
    "1072": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1974,
        2010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1073": {
      "offset": [
        1223,
        1253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1074": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1075": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1076": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1077": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43D"
    },
    "1080": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1081": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1083": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1084": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1085": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1086": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "POP",
      "path": "3"
    },
    "1087": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1090": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBCD"
    },
    "1093": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1223,
        1253
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1094": {
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1095": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1096": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1097": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1098": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x452"
    },
    "1101": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1102": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1104": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1105": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1106": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1107": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "POP",
      "path": "3"
    },
    "1108": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1111": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1113": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1114": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1115": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "SUB",
      "path": "3"
    },
    "1116": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1118": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1119": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "LT",
      "path": "3"
    },
    "1120": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1121": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x469"
    },
    "1124": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1125": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1127": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1128": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1129": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "offset": [
        2266,
        2302
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1132": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD3"
    },
    "1135": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2266,
        2302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1136": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1137": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "1140": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1142": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1143": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1144": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "SUB",
      "path": "2"
    },
    "1145": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1147": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1148": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "LT",
      "path": "2"
    },
    "1149": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1150": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x486"
    },
    "1153": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1154": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1156": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1157": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1158": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1161": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE0"
    },
    "1164": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        1984,
        2557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1165": {
      "offset": [
        2919,
        2967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1166": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1167": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1168": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1169": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1172": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1173": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1175": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1176": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1177": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1178": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "POP",
      "path": "3"
    },
    "1179": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1182": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1184": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1185": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1186": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "SUB",
      "path": "3"
    },
    "1187": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1189": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1190": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "LT",
      "path": "3"
    },
    "1191": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1192": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B0"
    },
    "1195": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1196": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1198": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1199": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1200": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "offset": [
        2919,
        2967
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "offset": [
        2919,
        2967
      ],
      "op": "AND",
      "path": "3"
    },
    "1212": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF5F"
    },
    "1215": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        2919,
        2967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1216": {
      "offset": [
        1660,
        1693
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1217": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1218": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1219": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1220": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CC"
    },
    "1223": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1224": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1226": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1227": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1228": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1229": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "POP",
      "path": "3"
    },
    "1230": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1233": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF71"
    },
    "1236": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        1660,
        1693
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1237": {
      "offset": [
        1841,
        1864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1238": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1239": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1240": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1241": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E1"
    },
    "1244": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1245": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1247": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1248": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1249": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1250": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "POP",
      "path": "3"
    },
    "1251": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1254": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF77"
    },
    "1257": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        1841,
        1864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1258": {
      "offset": [
        1308,
        1339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1259": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1260": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1261": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1262": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F6"
    },
    "1265": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1266": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1268": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1269": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1270": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1271": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "POP",
      "path": "3"
    },
    "1272": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1275": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF7D"
    },
    "1278": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        1308,
        1339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1279": {
      "offset": [
        2830,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1280": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1281": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1282": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1283": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50B"
    },
    "1286": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1287": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1289": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1290": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1291": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1292": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "POP",
      "path": "3"
    },
    "1293": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1296": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1298": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1299": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1300": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "SUB",
      "path": "3"
    },
    "1301": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1303": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1304": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "LT",
      "path": "3"
    },
    "1305": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1306": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x522"
    },
    "1309": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1310": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1312": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1313": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1314": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "offset": [
        2830,
        2878
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "offset": [
        2830,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "1326": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF83"
    },
    "1329": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        2830,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1330": {
      "offset": [
        2362,
        2407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1331": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1332": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1333": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1334": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53E"
    },
    "1337": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1338": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1340": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1341": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1342": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1343": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "POP",
      "path": "3"
    },
    "1344": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "1347": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1349": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1350": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1351": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "SUB",
      "path": "3"
    },
    "1352": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1354": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1355": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "LT",
      "path": "3"
    },
    "1356": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1357": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x555"
    },
    "1360": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1361": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1363": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1364": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1365": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "offset": [
        2362,
        2407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1368": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF95"
    },
    "1371": {
      "fn": "AaveLossless.sponsor",
      "jump": "i",
      "offset": [
        2362,
        2407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1372": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1373": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "1376": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1378": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1379": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1380": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "SUB",
      "path": "2"
    },
    "1381": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1383": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1384": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "LT",
      "path": "2"
    },
    "1385": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1386": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x572"
    },
    "1389": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1390": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1392": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1393": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1394": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1395": {
      "op": "POP"
    },
    "1396": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1398": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1399": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1400": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "AND",
      "path": "2"
    },
    "1401": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1402": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1404": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "ADD",
      "path": "2"
    },
    "1405": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1406": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB0"
    },
    "1409": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        2607,
        3537
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1410": {
      "offset": [
        743,
        764
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1411": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1412": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1413": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1414": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58E"
    },
    "1417": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1418": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1420": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1421": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1422": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1423": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "POP",
      "path": "2"
    },
    "1424": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x382"
    },
    "1427": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1475"
    },
    "1430": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        743,
        764
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1431": {
      "offset": [
        1569,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1432": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1433": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1434": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1435": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A3"
    },
    "1438": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1439": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1441": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1442": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1443": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1444": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "POP",
      "path": "3"
    },
    "1445": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1448": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1484"
    },
    "1451": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        1569,
        1602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1452": {
      "offset": [
        1727,
        1750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1453": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1454": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1455": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1456": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B8"
    },
    "1459": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1460": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1462": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1463": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1464": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1465": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "POP",
      "path": "3"
    },
    "1466": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1469": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x148A"
    },
    "1472": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        1727,
        1750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1473": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1477": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1485": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1486": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "POP",
      "path": "5"
    },
    "1487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A2"
    },
    "1490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1493": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1494": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "SUB",
      "path": "5"
    },
    "1495": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "LT",
      "path": "5"
    },
    "1499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1500": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E4"
    },
    "1503": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1507": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "op": "SUB"
    },
    "1519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "AND",
      "path": "5"
    },
    "1520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1490"
    },
    "1523": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1524": {
      "offset": [
        864,
        890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1525": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1528": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "1531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "POP",
      "path": "2"
    },
    "1538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x609"
    },
    "1541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15A4"
    },
    "1544": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        864,
        890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "GT",
      "path": "2"
    },
    "1555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x267"
    },
    "1559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1561": {
      "offset": [
        660,
        680
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1563": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x625"
    },
    "1568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "POP",
      "path": "2"
    },
    "1575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x382"
    },
    "1578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15AD"
    },
    "1581": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        660,
        680
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1582": {
      "offset": [
        1784,
        1807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1784,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1784,
        1807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1784,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1587": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1784,
        1807
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1588": {
      "offset": [
        2741,
        2789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "1591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2741,
        2789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1605": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2741,
        2789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1606": {
      "offset": [
        1143,
        1168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1143,
        1168
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "offset": [
        1143,
        1168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1616": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1143,
        1168
      ],
      "op": "DIV",
      "path": "3"
    },
    "1617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1143,
        1168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1143,
        1168
      ],
      "op": "AND",
      "path": "3"
    },
    "1620": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1143,
        1168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1621": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1143,
        1168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1622": {
      "offset": [
        1478,
        1511
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1623": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1478,
        1511
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1625": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1478,
        1511
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1478,
        1511
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1627": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1478,
        1511
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1628": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1629": {
      "offset": [
        3555,
        3571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1631": {
      "offset": [
        3545,
        3551
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1633": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3551
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1638": {
      "op": "SHL"
    },
    "1639": {
      "offset": [
        3545,
        3551
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1640": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3551
      ],
      "op": "DIV",
      "path": "3"
    },
    "1641": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3551
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1643": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3551
      ],
      "op": "AND",
      "path": "3"
    },
    "1644": {
      "offset": [
        3545,
        3571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1646": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1647": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "GT",
      "path": "3"
    },
    "1648": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1649": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x676"
    },
    "1652": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1653": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1654": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1655": {
      "branch": 88,
      "fn": "AaveLossless.withdraw",
      "offset": [
        3545,
        3571
      ],
      "op": "EQ",
      "path": "3"
    },
    "1656": {
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B9"
    },
    "1659": {
      "branch": 88,
      "offset": [
        3537,
        3590
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1660": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1662": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1663": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "offset": [
        3537,
        3590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1672": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1673": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1675": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1677": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1678": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "ADD",
      "path": "3"
    },
    "1679": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1680": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "1682": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1684": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1685": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "ADD",
      "path": "3"
    },
    "1686": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1687": {
      "op": "PUSH14",
      "value": "0x13585D18DA081B9BDD081C185A59"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1707": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1708": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "ADD",
      "path": "3"
    },
    "1709": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1710": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1711": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1712": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1713": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1714": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1715": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "SUB",
      "path": "3"
    },
    "1716": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1718": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "ADD",
      "path": "3"
    },
    "1719": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1720": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1721": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3537,
        3590
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1722": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3681,
        3691
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 0
    },
    "1723": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3693,
        3694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1725": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1726": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1727": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1728": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "1730": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1732": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1733": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1735": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1736": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1737": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3667,
        3692
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1738": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70C"
    },
    "1741": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1742": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1744": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1745": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1754": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1755": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1757": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1759": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1760": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "ADD",
      "path": "2"
    },
    "1761": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1762": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1764": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1766": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1767": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "ADD",
      "path": "2"
    },
    "1768": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1769": {
      "op": "PUSH15",
      "value": "0x62616C616E6365206973207A65726F"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1790": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1791": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "ADD",
      "path": "2"
    },
    "1792": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1793": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1794": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1795": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1796": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1797": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1798": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "SUB",
      "path": "2"
    },
    "1799": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1801": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "ADD",
      "path": "2"
    },
    "1802": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1803": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1804": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3659,
        3715
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1805": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3756,
        3766
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1806": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3725,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1808": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1809": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1810": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1811": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "1813": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1815": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1816": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1817": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1818": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1820": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1821": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1822": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1823": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1824": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1825": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3777,
        3806
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 1
    },
    "1826": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3777,
        3806
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1827": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3777,
        3806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1828": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3777,
        3806
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1829": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x14"
    },
    "1831": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1832": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1833": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1834": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1843": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1844": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1846": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1847": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ADD",
      "path": "2"
    },
    "1848": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "1849": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1850": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "1851": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1852": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1854": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1855": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ADD",
      "path": "2"
    },
    "1856": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1857": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1858": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1859": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1860": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1861": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1862": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "op": "SUB"
    },
    "1871": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1872": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1873": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "AND",
      "path": "2"
    },
    "1874": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1875": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3838
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1880": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3838
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1881": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1883": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1884": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1885": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ADD",
      "path": "2"
    },
    "1886": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1887": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1888": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3742,
        3767
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1889": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1890": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1891": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1892": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1893": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SUB",
      "path": "2"
    },
    "1894": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ADD",
      "path": "2"
    },
    "1895": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1896": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1897": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1898": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3823,
        3828
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1899": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1900": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1901": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1902": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1903": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1904": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x778"
    },
    "1907": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1908": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1910": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1911": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1912": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1913": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "POP",
      "path": "2"
    },
    "1914": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "GAS",
      "path": "2"
    },
    "1915": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "CALL",
      "path": "2"
    },
    "1916": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1917": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1918": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1919": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78C"
    },
    "1922": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1923": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1924": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1926": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1927": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1928": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1929": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1931": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1932": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1933": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "POP",
      "path": "2"
    },
    "1934": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "POP",
      "path": "2"
    },
    "1935": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "POP",
      "path": "2"
    },
    "1936": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "POP",
      "path": "2"
    },
    "1937": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1939": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1940": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1941": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1943": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1944": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "LT",
      "path": "2"
    },
    "1945": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1946": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A2"
    },
    "1949": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1950": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1952": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1953": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1954": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        3816,
        3858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1955": {
      "op": "POP"
    },
    "1956": {
      "op": "POP"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "fn": "AaveLossless.withdraw",
      "jump": "o",
      "offset": [
        3612,
        3866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1959": {
      "offset": [
        2655,
        2700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1960": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "1962": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1964": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1965": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1967": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1968": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1969": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1970": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1972": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1973": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1974": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1975": {
      "fn": "AaveLossless.withdraw",
      "offset": [
        2655,
        2700
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1976": {
      "fn": "AaveLossless.withdraw",
      "jump": "o",
      "offset": [
        2655,
        2700
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1977": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1978": {
      "offset": [
        3381,
        3397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1980": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3381,
        3397
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1981": {
      "offset": [
        3366,
        3378
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "1982": {
      "offset": [
        3366,
        3397
      ],
      "op": "GT",
      "path": "3"
    },
    "1983": {
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x802"
    },
    "1986": {
      "offset": [
        3358,
        3420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1987": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1989": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1990": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "offset": [
        3358,
        3420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1999": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2000": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2002": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2004": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2005": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "ADD",
      "path": "3"
    },
    "2006": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2007": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "2009": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2011": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2012": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "ADD",
      "path": "3"
    },
    "2013": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2014": {
      "op": "PUSH16",
      "value": "0x11D85B59481A5CC8199A5B9A5CDA1959"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2036": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2037": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "ADD",
      "path": "3"
    },
    "2038": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2039": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2040": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2041": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2042": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2043": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2044": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "SUB",
      "path": "3"
    },
    "2045": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2047": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "ADD",
      "path": "3"
    },
    "2048": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2049": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2050": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3358,
        3420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2051": {
      "offset": [
        1301,
        1313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80A"
    },
    "2054": {
      "offset": [
        1301,
        1311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15BC"
    },
    "2057": {
      "jump": "i",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2058": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "5"
    },
    "2068": {
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81B"
    },
    "2071": {
      "offset": [
        1290,
        1295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB66"
    },
    "2074": {
      "jump": "i",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2075": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "5"
    },
    "2085": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1290,
        1313
      ],
      "op": "EQ",
      "path": "5"
    },
    "2086": {
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x876"
    },
    "2089": {
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2090": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2092": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2093": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2102": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2103": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2105": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2107": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2108": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2109": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2110": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2111": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2112": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2114": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2115": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2116": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2117": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2150": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2152": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2153": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2154": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2155": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2156": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2157": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2158": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2159": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2160": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SUB",
      "path": "5"
    },
    "2161": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2163": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2164": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2165": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2166": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2167": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4104,
        4116
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2168": {
      "offset": [
        1276,
        1288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2170": {
      "offset": [
        1265,
        1272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2171": {
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2173": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2174": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "GT",
      "path": "2"
    },
    "2175": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2176": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x885"
    },
    "2179": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2180": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2181": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2182": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1288
      ],
      "op": "EQ",
      "path": "2"
    },
    "2183": {
      "offset": [
        1265,
        1315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2184": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89C"
    },
    "2187": {
      "offset": [
        1265,
        1315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "offset": [
        1303,
        1315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2191": {
      "offset": [
        1292,
        1299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2192": {
      "offset": [
        1292,
        1315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2194": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2195": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "GT",
      "path": "2"
    },
    "2196": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2197": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89A"
    },
    "2200": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2201": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2202": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2203": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1292,
        1315
      ],
      "op": "EQ",
      "path": "2"
    },
    "2204": {
      "offset": [
        1265,
        1315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2205": {
      "offset": [
        1265,
        1341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2206": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1265,
        1341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B2"
    },
    "2209": {
      "offset": [
        1265,
        1341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2210": {
      "op": "POP"
    },
    "2211": {
      "offset": [
        1329,
        1341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2213": {
      "offset": [
        1318,
        1325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2214": {
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2216": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2217": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "GT",
      "path": "2"
    },
    "2218": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2219": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B0"
    },
    "2222": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2223": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2224": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2225": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1318,
        1341
      ],
      "op": "EQ",
      "path": "2"
    },
    "2226": {
      "offset": [
        1265,
        1341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2227": {
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2230": {
      "offset": [
        1257,
        1374
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2231": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2233": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2234": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "offset": [
        1257,
        1374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2243": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2244": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2246": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2248": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2249": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "2250": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2251": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "2253": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2255": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2256": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "2257": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2258": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x696E76616C696420617267756D656E7420666F72206265737469646500000000"
    },
    "2291": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2293": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2294": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "2295": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2296": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2297": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2298": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2299": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2300": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2301": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "SUB",
      "path": "2"
    },
    "2302": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2304": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "2305": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2306": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2307": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        1257,
        1374
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4146,
        4162
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x0"
    },
    "2310": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4142
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2311": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4142
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2316": {
      "op": "SHL"
    },
    "2317": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4142
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2318": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4142
      ],
      "op": "DIV",
      "path": "2"
    },
    "2319": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2321": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4142
      ],
      "op": "AND",
      "path": "2"
    },
    "2322": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2324": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2325": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "GT",
      "path": "2"
    },
    "2326": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2327": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91C"
    },
    "2330": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2331": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2332": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2333": {
      "branch": 74,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4136,
        4162
      ],
      "op": "EQ",
      "path": "2"
    },
    "2334": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x967"
    },
    "2337": {
      "branch": 74,
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2338": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2340": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2341": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2348": {
      "op": "SHL"
    },
    "2349": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2350": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2351": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2353": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2355": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2356": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "ADD",
      "path": "2"
    },
    "2357": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2358": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "2360": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2362": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2363": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "ADD",
      "path": "2"
    },
    "2364": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2365": {
      "op": "PUSH22",
      "value": "0x86C2DCE840E6CAE8E8D8CA40E8D0D2E640DAC2E8C6D"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x53"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2393": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2394": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "ADD",
      "path": "2"
    },
    "2395": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2396": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2397": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2398": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2399": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2400": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2401": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "SUB",
      "path": "2"
    },
    "2402": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2404": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "ADD",
      "path": "2"
    },
    "2405": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2406": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2407": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4128,
        4189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2408": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4205
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x0"
    },
    "2410": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2411": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4224
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "NOT"
    },
    "2418": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4224
      ],
      "op": "AND",
      "path": "2"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4224
      ],
      "op": "OR",
      "path": "2"
    },
    "2425": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2426": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4199,
        4224
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2427": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4245
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x17"
    },
    "2429": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2430": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2431": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4248,
        4260
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2432": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4248,
        4260
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2433": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2436": {
      "op": "NOT"
    },
    "2437": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "AND",
      "path": "2"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4248,
        4260
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2441": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2443": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2444": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "GT",
      "path": "2"
    },
    "2445": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2446": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x993"
    },
    "2449": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2450": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2451": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2452": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "MUL",
      "path": "2"
    },
    "2453": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "OR",
      "path": "2"
    },
    "2454": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2455": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4234,
        4260
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x17"
    },
    "2459": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2460": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4291,
        4296
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "2462": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4291,
        4296
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2463": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2465": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2466": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2467": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2474": {
      "op": "SHL"
    },
    "2475": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2476": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4291,
        4296
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2486": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4291,
        4296
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2487": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4291,
        4296
      ],
      "op": "AND",
      "path": "2"
    },
    "2488": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2490": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2491": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ADD",
      "path": "2"
    },
    "2492": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2495": {
      "op": "NOT"
    },
    "2496": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2498": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2499": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ADD",
      "path": "2"
    },
    "2500": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2501": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4322,
        4326
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2502": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2504": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2505": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ADD",
      "path": "2"
    },
    "2506": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2507": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2508": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2509": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2512": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2513": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2514": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "DIV",
      "path": "2"
    },
    "2515": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2516": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2517": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "AND",
      "path": "2"
    },
    "2518": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2519": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4290
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69328DEC"
    },
    "2524": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4290
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2525": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2527": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2528": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2529": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ADD",
      "path": "2"
    },
    "2530": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2531": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2533": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2534": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2535": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2536": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2537": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2538": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2539": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "SUB",
      "path": "2"
    },
    "2540": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ADD",
      "path": "2"
    },
    "2541": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2544": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4281
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2545": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2546": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2547": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2548": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2549": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2550": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9FE"
    },
    "2553": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2554": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2556": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2557": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2558": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2559": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "POP",
      "path": "2"
    },
    "2560": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "GAS",
      "path": "2"
    },
    "2561": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "CALL",
      "path": "2"
    },
    "2562": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2563": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2564": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2565": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA12"
    },
    "2568": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2569": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2570": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2572": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2573": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2574": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2575": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2577": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2578": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2579": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "POP",
      "path": "2"
    },
    "2580": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "POP",
      "path": "2"
    },
    "2581": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "POP",
      "path": "2"
    },
    "2582": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "POP",
      "path": "2"
    },
    "2583": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2585": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2586": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2587": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2589": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2590": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "LT",
      "path": "2"
    },
    "2591": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2592": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA28"
    },
    "2595": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2596": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2598": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2599": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2600": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4270,
        4328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4338,
        4350
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0xA33"
    },
    "2605": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4338,
        4350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4338,
        4348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C0"
    },
    "2610": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "i",
      "offset": [
        4338,
        4350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2611": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4338,
        4350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2612": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4360,
        4374
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0xA3B"
    },
    "2615": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4360,
        4372
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x166B"
    },
    "2618": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "i",
      "offset": [
        4360,
        4374
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2619": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4360,
        4374
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2620": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4397,
        4403
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x15"
    },
    "2622": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4397,
        4403
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2623": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2625": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2626": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2633": {
      "op": "SHL"
    },
    "2634": {
      "op": "SUB"
    },
    "2635": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4397,
        4403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2636": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4397,
        4403
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2637": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4397,
        4403
      ],
      "op": "AND",
      "path": "2"
    },
    "2638": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2639": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2640": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2641": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x745C90B656B4AAFE296C8CA35AEACFE56CB96C90E1D320E5DA643FFF1051B6C0"
    },
    "2674": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2675": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2676": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2677": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "SUB",
      "path": "2"
    },
    "2678": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2680": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "ADD",
      "path": "2"
    },
    "2681": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2682": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        4390,
        4404
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2683": {
      "offset": [
        1360,
        1361
      ],
      "op": "POP",
      "path": "5"
    },
    "2684": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "offset": [
        3996,
        4412
      ],
      "op": "POP",
      "path": "2"
    },
    "2685": {
      "fn": "AaveLossless.setMatchWinnerAndWithdrawFromPool",
      "jump": "o",
      "offset": [
        3996,
        4412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2687": {
      "offset": [
        1301,
        1313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA86"
    },
    "2690": {
      "offset": [
        1301,
        1311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15BC"
    },
    "2693": {
      "jump": "i",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2701": {
      "op": "SHL"
    },
    "2702": {
      "op": "SUB"
    },
    "2703": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "5"
    },
    "2704": {
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA97"
    },
    "2707": {
      "offset": [
        1290,
        1295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB66"
    },
    "2710": {
      "jump": "i",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "5"
    },
    "2721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1290,
        1313
      ],
      "op": "EQ",
      "path": "5"
    },
    "2722": {
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF2"
    },
    "2725": {
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2739": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2751": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2790": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SUB",
      "path": "5"
    },
    "2797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "2800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1816,
        1817
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x0"
    },
    "2805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2809": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2816": {
      "op": "SHL"
    },
    "2817": {
      "op": "SUB"
    },
    "2818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2819": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "AND",
      "path": "5"
    },
    "2821": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1800,
        1806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2822": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1816,
        1817
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1816,
        1817
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2858": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1819
      ],
      "op": "LOG3",
      "path": "5"
    },
    "2859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1846,
        1847
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x0"
    },
    "2861": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2862": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2869": {
      "op": "SHL"
    },
    "2870": {
      "op": "SUB"
    },
    "2871": {
      "op": "NOT"
    },
    "2872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "AND",
      "path": "5"
    },
    "2873": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2874": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1829,
        1848
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2875": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1710,
        1855
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2876": {
      "offset": [
        808,
        837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2877": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "2879": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2880": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        808,
        837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2881": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        808,
        837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2882": {
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "2885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2888": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2889": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "LT",
      "path": "3"
    },
    "2890": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB4F"
    },
    "2893": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2896": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2900": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2901": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2903": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2904": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2905": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2906": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "ADD",
      "path": "3"
    },
    "2907": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2908": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2120,
        2156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "offset": [
        2120,
        2156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2911": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2120,
        2156
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2912": {
      "offset": [
        1392,
        1420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2913": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2915": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1392,
        1420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2917": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1392,
        1420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2918": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2919": {
      "fn": "Ownable.owner",
      "offset": [
        1124,
        1131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2921": {
      "fn": "Ownable.owner",
      "offset": [
        1150,
        1156
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 12
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "op": "SUB"
    },
    "2930": {
      "fn": "Ownable.owner",
      "offset": [
        1150,
        1156
      ],
      "op": "AND",
      "path": "5"
    },
    "2931": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2932": {
      "fn": "Ownable.owner",
      "offset": [
        1078,
        1163
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2933": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1078,
        1163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2934": {
      "offset": [
        2572,
        2617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2935": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2937": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2939": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2940": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2942": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2943": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2944": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2945": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2947": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2948": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2949": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2956": {
      "op": "SHL"
    },
    "2957": {
      "op": "SUB"
    },
    "2958": {
      "offset": [
        2572,
        2617
      ],
      "op": "AND",
      "path": "3"
    },
    "2959": {
      "fn": "Ownable.owner",
      "offset": [
        2572,
        2617
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2960": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        2572,
        2617
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2961": {
      "offset": [
        940,
        971
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2962": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "2964": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2965": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2968": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2969": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "DIV",
      "path": "2"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "offset": [
        940,
        971
      ],
      "op": "AND",
      "path": "2"
    },
    "2979": {
      "fn": "Ownable.owner",
      "offset": [
        940,
        971
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2980": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        940,
        971
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2981": {
      "offset": [
        2467,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2982": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2984": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2986": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2987": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2989": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2990": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2991": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2992": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2994": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2995": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2996": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3003": {
      "op": "SHL"
    },
    "3004": {
      "op": "SUB"
    },
    "3005": {
      "offset": [
        2467,
        2512
      ],
      "op": "AND",
      "path": "3"
    },
    "3006": {
      "fn": "Ownable.owner",
      "offset": [
        2467,
        2512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3007": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        2467,
        2512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3008": {
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3009": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3011": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3012": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3013": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3014": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3015": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "LT",
      "path": "3"
    },
    "3016": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB4F"
    },
    "3019": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3020": {
      "fn": "Ownable.owner",
      "offset": [
        1974,
        2010
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3021": {
      "offset": [
        1223,
        1253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3022": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3024": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3025": {
      "fn": "Ownable.owner",
      "offset": [
        1223,
        1253
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3026": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1223,
        1253
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3027": {
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3028": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3030": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3031": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3032": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3033": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3034": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "LT",
      "path": "3"
    },
    "3035": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB4F"
    },
    "3038": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3039": {
      "fn": "Ownable.owner",
      "offset": [
        2266,
        2302
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3040": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1984,
        2557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3041": {
      "offset": [
        3124,
        3140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3043": {
      "offset": [
        3114,
        3120
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3044": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3120
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "offset": [
        3114,
        3120
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3051": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3120
      ],
      "op": "DIV",
      "path": "3"
    },
    "3052": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3054": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3120
      ],
      "op": "AND",
      "path": "3"
    },
    "3055": {
      "offset": [
        3114,
        3140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3057": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3058": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "GT",
      "path": "3"
    },
    "3059": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3060": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF9"
    },
    "3063": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3064": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3065": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3066": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3114,
        3140
      ],
      "op": "EQ",
      "path": "3"
    },
    "3067": {
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3C"
    },
    "3070": {
      "offset": [
        3106,
        3159
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3071": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3073": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3074": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3081": {
      "op": "SHL"
    },
    "3082": {
      "offset": [
        3106,
        3159
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3083": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3084": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3086": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3088": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3089": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "3090": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3091": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "3093": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3095": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3096": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "3097": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3098": {
      "op": "PUSH14",
      "value": "0x26B0BA31B4103737BA1037B832B7"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3115": {
      "op": "SHL"
    },
    "3116": {
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3118": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3119": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "3120": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3121": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3122": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3123": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3124": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3125": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3126": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "SUB",
      "path": "3"
    },
    "3127": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3129": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "3130": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3131": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3132": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3106,
        3159
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3133": {
      "offset": [
        3192,
        3207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3135": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3192,
        3207
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3136": {
      "offset": [
        3177,
        3189
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "3137": {
      "offset": [
        3177,
        3207
      ],
      "op": "LT",
      "path": "3"
    },
    "3138": {
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC87"
    },
    "3141": {
      "offset": [
        3169,
        3230
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3142": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3144": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3145": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "offset": [
        3169,
        3230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3154": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3155": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3157": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3159": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3160": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "3161": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3162": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "3164": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3166": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3167": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "3168": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3169": {
      "op": "PUSH18",
      "value": "0x43616E7420706C61636520626574206E6F77"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3193": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3194": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "3195": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3196": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3197": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3198": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3199": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3200": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3201": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "SUB",
      "path": "3"
    },
    "3202": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3204": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "3205": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3206": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3207": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        3169,
        3230
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3208": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2068,
        2069
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x0"
    },
    "3210": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2059,
        2065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3211": {
      "branch": 75,
      "fn": "AaveLossless.sponsor",
      "offset": [
        2059,
        2069
      ],
      "op": "GT",
      "path": "2"
    },
    "3212": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD5"
    },
    "3215": {
      "branch": 75,
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3216": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3218": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3219": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3228": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3229": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3231": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3233": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3234": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "ADD",
      "path": "2"
    },
    "3235": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3236": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "3238": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3240": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3241": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "ADD",
      "path": "2"
    },
    "3242": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3243": {
      "op": "PUSH22",
      "value": "0x30B6B7BAB73A1036BAB9BA103132903837B9B4BA34B3"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3268": {
      "op": "SHL"
    },
    "3269": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3271": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3272": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "ADD",
      "path": "2"
    },
    "3273": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3274": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3275": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3276": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3277": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3278": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3279": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "SUB",
      "path": "2"
    },
    "3280": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3282": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "ADD",
      "path": "2"
    },
    "3283": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3284": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3285": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2051,
        2096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3286": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2133,
        2138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "3288": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2133,
        2138
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3289": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3291": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3292": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3293": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3302": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3303": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2150,
        2160
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3304": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3306": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3307": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ADD",
      "path": "2"
    },
    "3308": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3309": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2170,
        2174
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3310": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3312": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3313": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ADD",
      "path": "2"
    },
    "3314": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3315": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3316": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3317": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2106,
        2123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3319": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2106,
        2123
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3326": {
      "op": "SHL"
    },
    "3327": {
      "op": "SUB"
    },
    "3328": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2133,
        2138
      ],
      "op": "AND",
      "path": "2"
    },
    "3329": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2133,
        2138
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3330": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2149
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "3335": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2149
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3336": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3338": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3339": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3340": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ADD",
      "path": "2"
    },
    "3341": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3342": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3344": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3345": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3346": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3347": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3348": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3349": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SUB",
      "path": "2"
    },
    "3350": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ADD",
      "path": "2"
    },
    "3351": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3352": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2133,
        2138
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3353": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3354": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3355": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3356": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3357": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3358": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD26"
    },
    "3361": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3362": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3364": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3365": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3366": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3367": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "POP",
      "path": "2"
    },
    "3368": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "GAS",
      "path": "2"
    },
    "3369": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "3370": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3371": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3372": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3373": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3A"
    },
    "3376": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3377": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3378": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3380": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3381": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3382": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3383": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3385": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3386": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3387": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "POP",
      "path": "2"
    },
    "3388": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "POP",
      "path": "2"
    },
    "3389": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "POP",
      "path": "2"
    },
    "3390": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "POP",
      "path": "2"
    },
    "3391": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3393": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3394": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3395": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3397": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3398": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "LT",
      "path": "2"
    },
    "3399": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3400": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD50"
    },
    "3403": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3404": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3406": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3407": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3408": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3409": {
      "op": "POP"
    },
    "3410": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3411": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2126,
        2176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2194,
        2213
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "3414": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2194,
        2213
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3415": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2194,
        2213
      ],
      "op": "LT",
      "path": "2"
    },
    "3416": {
      "branch": 76,
      "fn": "AaveLossless.sponsor",
      "offset": [
        2194,
        2213
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3417": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA5"
    },
    "3420": {
      "branch": 76,
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3421": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3423": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3424": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3431": {
      "op": "SHL"
    },
    "3432": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3433": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3434": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3436": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3438": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3439": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "ADD",
      "path": "2"
    },
    "3440": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3441": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "3443": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3445": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3446": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "ADD",
      "path": "2"
    },
    "3447": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3448": {
      "op": "PUSH25",
      "value": "0x436865636B2074686520746F6B656E20616C6C6F77616E6365"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3476": {
      "op": "SHL"
    },
    "3477": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3479": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3480": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "ADD",
      "path": "2"
    },
    "3481": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3482": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3483": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3484": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3485": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3486": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3487": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "SUB",
      "path": "2"
    },
    "3488": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3490": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "ADD",
      "path": "2"
    },
    "3491": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3492": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3493": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2186,
        2243
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3494": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x14"
    },
    "3496": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3497": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3499": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3500": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3501": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3510": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3511": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2280,
        2290
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3512": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3514": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3515": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3516": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3517": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2300,
        2304
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3518": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3520": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3521": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3522": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3523": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3525": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3526": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3527": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3528": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3529": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3530": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3531": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "SUB"
    },
    "3540": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3541": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3542": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "AND",
      "path": "2"
    },
    "3543": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3544": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2279
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "3549": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3550": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3552": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3553": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3554": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3555": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3556": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3558": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3559": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3560": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3561": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3562": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3563": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3564": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SUB",
      "path": "2"
    },
    "3565": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3566": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3567": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3569": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2260,
        2265
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3570": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3571": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3572": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3573": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3574": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3575": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDFF"
    },
    "3578": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3579": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3581": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3582": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3583": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3584": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "POP",
      "path": "2"
    },
    "3585": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "GAS",
      "path": "2"
    },
    "3586": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "CALL",
      "path": "2"
    },
    "3587": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3588": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3589": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3590": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE13"
    },
    "3593": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3594": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3595": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3597": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3598": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3599": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3600": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3602": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3603": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3604": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "POP",
      "path": "2"
    },
    "3605": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "POP",
      "path": "2"
    },
    "3606": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "POP",
      "path": "2"
    },
    "3607": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "POP",
      "path": "2"
    },
    "3608": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3610": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3611": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3612": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3614": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3615": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "LT",
      "path": "2"
    },
    "3616": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3617": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE29"
    },
    "3620": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3621": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3623": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3624": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3625": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x14"
    },
    "3630": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3631": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "3633": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3634": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3636": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3637": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3638": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3647": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3648": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3651": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3652": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3653": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "DIV",
      "path": "2"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "op": "SUB"
    },
    "3662": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3663": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3664": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2354,
        2365
      ],
      "op": "AND",
      "path": "2"
    },
    "3665": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3667": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3668": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ADD",
      "path": "2"
    },
    "3669": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3670": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3672": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3673": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ADD",
      "path": "2"
    },
    "3674": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3675": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3676": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3677": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3678": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3679": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3680": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "AND",
      "path": "2"
    },
    "3681": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3682": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2345
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "3687": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2345
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3688": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3690": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3691": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3692": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ADD",
      "path": "2"
    },
    "3693": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3694": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3696": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2253,
        2314
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3697": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3698": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3699": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3700": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3701": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3702": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "SUB",
      "path": "2"
    },
    "3703": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ADD",
      "path": "2"
    },
    "3704": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3705": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3707": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2331,
        2336
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3708": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3709": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3710": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3711": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3712": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3713": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE89"
    },
    "3716": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3717": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3719": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3720": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3721": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3722": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "POP",
      "path": "2"
    },
    "3723": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "GAS",
      "path": "2"
    },
    "3724": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "CALL",
      "path": "2"
    },
    "3725": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3726": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3727": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3728": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9D"
    },
    "3731": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3732": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3733": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3735": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3736": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3737": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3738": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3740": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3741": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3742": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "POP",
      "path": "2"
    },
    "3743": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "POP",
      "path": "2"
    },
    "3744": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "POP",
      "path": "2"
    },
    "3745": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "POP",
      "path": "2"
    },
    "3746": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3748": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3749": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3750": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3752": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3753": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "LT",
      "path": "2"
    },
    "3754": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3755": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB3"
    },
    "3758": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3759": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3761": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3762": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3763": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2324,
        2375
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x17"
    },
    "3768": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3769": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2405,
        2410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "3771": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2405,
        2410
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3772": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3774": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3775": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3776": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3783": {
      "op": "SHL"
    },
    "3784": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3785": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "op": "SUB"
    },
    "3794": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2405,
        2410
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3795": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2405,
        2410
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3796": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2405,
        2410
      ],
      "op": "AND",
      "path": "2"
    },
    "3797": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3799": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3800": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "2"
    },
    "3801": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3802": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3804": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3805": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "2"
    },
    "3806": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3807": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3808": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3809": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2428,
        2432
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3810": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3812": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3813": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "2"
    },
    "3814": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3817": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3819": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3820": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "2"
    },
    "3821": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3822": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3823": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3824": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3825": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3826": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3829": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3830": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3831": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "DIV",
      "path": "2"
    },
    "3832": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3833": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3834": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "AND",
      "path": "2"
    },
    "3835": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3836": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2404
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8EDA9DF"
    },
    "3841": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2404
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3842": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x84"
    },
    "3844": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3845": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3846": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "2"
    },
    "3847": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3848": {
      "op": "SWAP3"
    },
    "3849": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3850": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3851": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3852": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "SUB",
      "path": "2"
    },
    "3853": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "2"
    },
    "3854": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3855": {
      "op": "DUP4"
    },
    "3856": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2396
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3857": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3858": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3859": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3860": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3861": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3862": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF1E"
    },
    "3865": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3866": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3868": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3869": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3870": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3871": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "POP",
      "path": "2"
    },
    "3872": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "GAS",
      "path": "2"
    },
    "3873": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "CALL",
      "path": "2"
    },
    "3874": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3875": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3876": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3877": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF32"
    },
    "3880": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3881": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3882": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3884": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3885": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3886": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3887": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3889": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3890": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2385,
        2436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x3"
    },
    "3895": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3896": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2469
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3897": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2469
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3898": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2469
      ],
      "op": "ADD",
      "path": "2"
    },
    "3899": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2469
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3900": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2469
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2493
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x16"
    },
    "3905": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2503
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3906": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2503
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3907": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2503
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3908": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2503
      ],
      "op": "ADD",
      "path": "2"
    },
    "3909": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2503
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3910": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2479,
        2503
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 20
    },
    "3913": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2446,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3915": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3916": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3917": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3918": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3920": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3922": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3923": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3925": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3926": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2538
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3927": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3928": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3929": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3930": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3931": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "ADD",
      "path": "2"
    },
    "3932": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3933": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2513,
        2548
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3934": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        1984,
        2557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3935": {
      "offset": [
        2919,
        2967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3936": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "3938": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3940": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3941": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3943": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3944": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3945": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3946": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3948": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3949": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3950": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3951": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2919,
        2967
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3952": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        2919,
        2967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3953": {
      "offset": [
        1660,
        1693
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3954": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "3956": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3957": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1660,
        1693
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3958": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        1660,
        1693
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3959": {
      "offset": [
        1841,
        1864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3960": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3962": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3963": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1841,
        1864
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3964": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        1841,
        1864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3965": {
      "offset": [
        1308,
        1339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3966": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3968": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3969": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        1308,
        1339
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3970": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        1308,
        1339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3971": {
      "offset": [
        2830,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3972": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "3974": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3976": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3977": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3979": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3980": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3981": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3982": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3984": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3985": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3986": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3987": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2830,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3988": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        2830,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3989": {
      "offset": [
        2362,
        2407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3990": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "3992": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3994": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3995": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3997": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3998": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3999": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4000": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4002": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4003": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4004": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "op": "SUB"
    },
    "4013": {
      "offset": [
        2362,
        2407
      ],
      "op": "AND",
      "path": "3"
    },
    "4014": {
      "fn": "AaveLossless.sponsor",
      "offset": [
        2362,
        2407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4015": {
      "fn": "AaveLossless.sponsor",
      "jump": "o",
      "offset": [
        2362,
        2407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4016": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4017": {
      "offset": [
        3124,
        3140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4019": {
      "offset": [
        3114,
        3120
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4020": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3120
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4025": {
      "op": "SHL"
    },
    "4026": {
      "offset": [
        3114,
        3120
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4027": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3120
      ],
      "op": "DIV",
      "path": "3"
    },
    "4028": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4030": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3120
      ],
      "op": "AND",
      "path": "3"
    },
    "4031": {
      "offset": [
        3114,
        3140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4033": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4034": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "GT",
      "path": "3"
    },
    "4035": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4036": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC9"
    },
    "4039": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4040": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "INVALID",
      "path": "3"
    },
    "4041": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4042": {
      "branch": 89,
      "fn": "AaveLossless.placeBet",
      "offset": [
        3114,
        3140
      ],
      "op": "EQ",
      "path": "3"
    },
    "4043": {
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100C"
    },
    "4046": {
      "branch": 89,
      "offset": [
        3106,
        3159
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4047": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4049": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4050": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "offset": [
        3106,
        3159
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4059": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4060": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4062": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4064": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4065": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "4066": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4067": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "4069": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4071": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4072": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "4073": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4074": {
      "op": "PUSH14",
      "value": "0x26B0BA31B4103737BA1037B832B7"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "4091": {
      "op": "SHL"
    },
    "4092": {
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4094": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4095": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "4096": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4097": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4098": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4099": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4100": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4101": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4102": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "SUB",
      "path": "3"
    },
    "4103": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4105": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "ADD",
      "path": "3"
    },
    "4106": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4107": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4108": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3106,
        3159
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4109": {
      "offset": [
        3192,
        3207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4111": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3192,
        3207
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4112": {
      "offset": [
        3177,
        3189
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "4113": {
      "offset": [
        3177,
        3207
      ],
      "op": "LT",
      "path": "3"
    },
    "4114": {
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1057"
    },
    "4117": {
      "offset": [
        3169,
        3230
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4118": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4120": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4121": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "offset": [
        3169,
        3230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4130": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4131": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4133": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4135": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4136": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "4137": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4138": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "4140": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4142": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4143": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "4144": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4145": {
      "op": "PUSH18",
      "value": "0x43616E7420706C61636520626574206E6F77"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4166": {
      "op": "SHL"
    },
    "4167": {
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4169": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4170": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "4171": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4172": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4173": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4174": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4175": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4176": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4177": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "SUB",
      "path": "3"
    },
    "4178": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4180": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "ADD",
      "path": "3"
    },
    "4181": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4182": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4183": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3169,
        3230
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4184": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2693,
        2700
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4185": {
      "offset": [
        1276,
        1288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4187": {
      "offset": [
        1265,
        1272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4188": {
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4190": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4191": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "GT",
      "path": "2"
    },
    "4192": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4193": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1066"
    },
    "4196": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4197": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "INVALID",
      "path": "2"
    },
    "4198": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4199": {
      "branch": 77,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1288
      ],
      "op": "EQ",
      "path": "2"
    },
    "4200": {
      "offset": [
        1265,
        1315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4201": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x107D"
    },
    "4204": {
      "branch": 77,
      "offset": [
        1265,
        1315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "offset": [
        1303,
        1315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4208": {
      "offset": [
        1292,
        1299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4209": {
      "offset": [
        1292,
        1315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4211": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4212": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "GT",
      "path": "2"
    },
    "4213": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4214": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x107B"
    },
    "4217": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4218": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "INVALID",
      "path": "2"
    },
    "4219": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4220": {
      "branch": 78,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1292,
        1315
      ],
      "op": "EQ",
      "path": "2"
    },
    "4221": {
      "offset": [
        1265,
        1315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4222": {
      "offset": [
        1265,
        1341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4223": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1265,
        1341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1093"
    },
    "4226": {
      "branch": 78,
      "offset": [
        1265,
        1341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "offset": [
        1329,
        1341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4230": {
      "offset": [
        1318,
        1325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4231": {
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4233": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4234": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "GT",
      "path": "2"
    },
    "4235": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4236": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1091"
    },
    "4239": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4240": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "INVALID",
      "path": "2"
    },
    "4241": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4242": {
      "branch": 79,
      "fn": "AaveLossless.placeBet",
      "offset": [
        1318,
        1341
      ],
      "op": "EQ",
      "path": "2"
    },
    "4243": {
      "offset": [
        1265,
        1341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4244": {
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E4"
    },
    "4247": {
      "branch": 79,
      "offset": [
        1257,
        1374
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4248": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4250": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4251": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4258": {
      "op": "SHL"
    },
    "4259": {
      "offset": [
        1257,
        1374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4260": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4261": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4263": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4265": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4266": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "4267": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4268": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "4270": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4272": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4273": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "4274": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4275": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x696E76616C696420617267756D656E7420666F72206265737469646500000000"
    },
    "4308": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4310": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4311": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "4312": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4313": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4314": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4315": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4316": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4317": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4318": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "SUB",
      "path": "2"
    },
    "4319": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "4321": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "ADD",
      "path": "2"
    },
    "4322": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4323": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4324": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1257,
        1374
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4325": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2729,
        2730
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x0"
    },
    "4327": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2720,
        2726
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4328": {
      "branch": 80,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2720,
        2730
      ],
      "op": "GT",
      "path": "2"
    },
    "4329": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1132"
    },
    "4332": {
      "branch": 80,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4333": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4335": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4336": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4345": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4346": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4348": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4350": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4351": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "ADD",
      "path": "2"
    },
    "4352": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4353": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "4355": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4357": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4358": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "ADD",
      "path": "2"
    },
    "4359": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4360": {
      "op": "PUSH22",
      "value": "0x30B6B7BAB73A1036BAB9BA103132903837B9B4BA34B3"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4388": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4389": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "ADD",
      "path": "2"
    },
    "4390": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4391": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4392": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4393": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4394": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4395": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4396": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "SUB",
      "path": "2"
    },
    "4397": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "4399": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "ADD",
      "path": "2"
    },
    "4400": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4401": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4402": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2712,
        2757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4403": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2780,
        2792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4405": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2778
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4406": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4408": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4409": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "GT",
      "path": "2"
    },
    "4410": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4411": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1140"
    },
    "4414": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4415": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "INVALID",
      "path": "2"
    },
    "4416": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4417": {
      "branch": 81,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2771,
        2792
      ],
      "op": "EQ",
      "path": "2"
    },
    "4418": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2767,
        2995
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4419": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2767,
        2995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1154"
    },
    "4422": {
      "branch": 81,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2767,
        2995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4423": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2808,
        2828
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0x114F"
    },
    "4426": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2821,
        2827
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4427": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2808,
        2820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170E"
    },
    "4430": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        2808,
        2828
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4431": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2808,
        2828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4432": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2767,
        2995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118E"
    },
    "4435": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2767,
        2995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4436": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2767,
        2995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4437": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2858,
        2870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4439": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2856
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4440": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4442": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4443": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "GT",
      "path": "2"
    },
    "4444": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4445": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1162"
    },
    "4448": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4449": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "INVALID",
      "path": "2"
    },
    "4450": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4451": {
      "branch": 82,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2849,
        2870
      ],
      "op": "EQ",
      "path": "2"
    },
    "4452": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2845,
        2995
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4453": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2845,
        2995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1171"
    },
    "4456": {
      "branch": 82,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2845,
        2995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4457": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2886,
        2906
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 23,
      "value": "0x114F"
    },
    "4460": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2899,
        2905
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4461": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2886,
        2898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1797"
    },
    "4464": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        2886,
        2906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4465": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2845,
        2995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4466": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2936,
        2948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4468": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2934
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4469": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4471": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4472": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "GT",
      "path": "2"
    },
    "4473": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4474": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117F"
    },
    "4477": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4478": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "INVALID",
      "path": "2"
    },
    "4479": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4480": {
      "branch": 83,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2927,
        2948
      ],
      "op": "EQ",
      "path": "2"
    },
    "4481": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2923,
        2995
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4482": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2923,
        2995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118E"
    },
    "4485": {
      "branch": 83,
      "fn": "AaveLossless.placeBet",
      "offset": [
        2923,
        2995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4486": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2964,
        2984
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 24,
      "value": "0x118E"
    },
    "4489": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2977,
        2983
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4490": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2964,
        2976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1820"
    },
    "4493": {
      "fn": "AaveLossless.placeBet",
      "jump": "i",
      "offset": [
        2964,
        2984
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4494": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2964,
        2984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4495": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3081,
        3086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4497": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3081,
        3086
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4498": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4500": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4501": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4502": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4509": {
      "op": "SHL"
    },
    "4510": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4511": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4512": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3098,
        3108
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4513": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4515": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4516": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ADD",
      "path": "2"
    },
    "4517": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4518": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3118,
        3122
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "4519": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4521": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4522": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ADD",
      "path": "2"
    },
    "4523": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4524": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4525": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4526": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3054,
        3071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4528": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3054,
        3071
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4535": {
      "op": "SHL"
    },
    "4536": {
      "op": "SUB"
    },
    "4537": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3081,
        3086
      ],
      "op": "AND",
      "path": "2"
    },
    "4538": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3081,
        3086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4539": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3097
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "4544": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4545": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4547": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4548": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4549": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ADD",
      "path": "2"
    },
    "4550": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4551": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4553": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4554": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4555": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4556": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4557": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4558": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SUB",
      "path": "2"
    },
    "4559": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ADD",
      "path": "2"
    },
    "4560": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4561": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3081,
        3086
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4562": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4563": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "4564": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4565": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4566": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4567": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11DF"
    },
    "4570": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4571": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4573": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4574": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4575": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4576": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "POP",
      "path": "2"
    },
    "4577": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "GAS",
      "path": "2"
    },
    "4578": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4579": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4580": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4581": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4582": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F3"
    },
    "4585": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4586": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4587": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4589": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4590": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4591": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4592": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4594": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4595": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4596": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "POP",
      "path": "2"
    },
    "4597": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "POP",
      "path": "2"
    },
    "4598": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "POP",
      "path": "2"
    },
    "4599": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "POP",
      "path": "2"
    },
    "4600": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4602": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4603": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4604": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4606": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4607": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "LT",
      "path": "2"
    },
    "4608": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4609": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1209"
    },
    "4612": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4613": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4615": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4616": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4617": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4618": {
      "op": "POP"
    },
    "4619": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4620": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3074,
        3124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4621": {
      "op": "POP"
    },
    "4622": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3142,
        3161
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 25
    },
    "4623": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3142,
        3161
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4624": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3142,
        3161
      ],
      "op": "LT",
      "path": "2"
    },
    "4625": {
      "branch": 84,
      "fn": "AaveLossless.placeBet",
      "offset": [
        3142,
        3161
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4626": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125E"
    },
    "4629": {
      "branch": 84,
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4630": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4632": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4633": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4640": {
      "op": "SHL"
    },
    "4641": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4642": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4643": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4645": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4647": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4648": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "ADD",
      "path": "2"
    },
    "4649": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4650": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "4652": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4654": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4655": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "ADD",
      "path": "2"
    },
    "4656": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4657": {
      "op": "PUSH25",
      "value": "0x436865636B2074686520746F6B656E20616C6C6F77616E6365"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4688": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4689": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "ADD",
      "path": "2"
    },
    "4690": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4691": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4692": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4693": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4694": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4695": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4696": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "SUB",
      "path": "2"
    },
    "4697": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "4699": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "ADD",
      "path": "2"
    },
    "4700": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4701": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4702": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3134,
        3191
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4703": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x14"
    },
    "4705": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4706": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4708": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4709": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4710": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4717": {
      "op": "SHL"
    },
    "4718": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4719": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4720": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3228,
        3238
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4721": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4723": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4724": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4725": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4726": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3248,
        3252
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "4727": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4729": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4730": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4731": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4732": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4734": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4735": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4736": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4737": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4738": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4739": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4740": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4747": {
      "op": "SHL"
    },
    "4748": {
      "op": "SUB"
    },
    "4749": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4750": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4751": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "AND",
      "path": "2"
    },
    "4752": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4753": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3227
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "4758": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3227
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4759": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "4761": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4762": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4763": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4764": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4765": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4767": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4768": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4769": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4770": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4771": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4772": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4773": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SUB",
      "path": "2"
    },
    "4774": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4775": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4776": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4778": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3208,
        3213
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4779": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4780": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "4781": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4782": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4783": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4784": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B8"
    },
    "4787": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4788": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4790": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4791": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4792": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4793": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "POP",
      "path": "2"
    },
    "4794": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "GAS",
      "path": "2"
    },
    "4795": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "CALL",
      "path": "2"
    },
    "4796": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4797": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4798": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4799": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12CC"
    },
    "4802": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4803": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4804": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4806": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4807": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4808": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4809": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4811": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4812": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4813": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "POP",
      "path": "2"
    },
    "4814": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "POP",
      "path": "2"
    },
    "4815": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "POP",
      "path": "2"
    },
    "4816": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "POP",
      "path": "2"
    },
    "4817": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4819": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4820": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4821": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4823": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4824": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "LT",
      "path": "2"
    },
    "4825": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4826": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E2"
    },
    "4829": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4830": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4832": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4833": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4834": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x14"
    },
    "4839": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4840": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "4842": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4843": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4845": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4846": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4847": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4856": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4857": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4860": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4861": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4862": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "DIV",
      "path": "2"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "SUB"
    },
    "4871": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4872": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4873": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3302,
        3313
      ],
      "op": "AND",
      "path": "2"
    },
    "4874": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4876": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4877": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ADD",
      "path": "2"
    },
    "4878": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4879": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4881": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4882": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ADD",
      "path": "2"
    },
    "4883": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4884": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4885": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4886": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4887": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4888": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4889": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "AND",
      "path": "2"
    },
    "4890": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4891": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3293
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "4896": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4897": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4899": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4900": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4901": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ADD",
      "path": "2"
    },
    "4902": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4903": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4905": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3201,
        3262
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4906": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4907": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4908": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4909": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4910": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4911": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "SUB",
      "path": "2"
    },
    "4912": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ADD",
      "path": "2"
    },
    "4913": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4914": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4916": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3279,
        3284
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4917": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4918": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "4919": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4920": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4921": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4922": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1342"
    },
    "4925": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4926": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4928": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4929": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4930": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4931": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "POP",
      "path": "2"
    },
    "4932": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "GAS",
      "path": "2"
    },
    "4933": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "CALL",
      "path": "2"
    },
    "4934": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4935": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4936": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4937": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1356"
    },
    "4940": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4941": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4942": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4944": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4945": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4946": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4947": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4949": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4950": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4951": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "POP",
      "path": "2"
    },
    "4952": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "POP",
      "path": "2"
    },
    "4953": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "POP",
      "path": "2"
    },
    "4954": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "POP",
      "path": "2"
    },
    "4955": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4957": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4958": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4959": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4961": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4962": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "LT",
      "path": "2"
    },
    "4963": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4964": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136C"
    },
    "4967": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4968": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4970": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4971": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4972": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3272,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4973": {
      "op": "POP"
    },
    "4974": {
      "op": "POP"
    },
    "4975": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x17"
    },
    "4977": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4978": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3353,
        3358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4980": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3353,
        3358
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4981": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4983": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4984": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4985": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4992": {
      "op": "SHL"
    },
    "4993": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4994": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5001": {
      "op": "SHL"
    },
    "5002": {
      "op": "SUB"
    },
    "5003": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3353,
        3358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5004": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3353,
        3358
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5005": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3353,
        3358
      ],
      "op": "AND",
      "path": "2"
    },
    "5006": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5008": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5009": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5010": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5011": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5013": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5014": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5015": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5016": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5017": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5018": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3376,
        3380
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "5019": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "5021": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5022": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5023": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5026": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "5028": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5029": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5030": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5031": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5032": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5033": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5034": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5035": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5038": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5039": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5040": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "DIV",
      "path": "2"
    },
    "5041": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5042": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5043": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "AND",
      "path": "2"
    },
    "5044": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5045": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3352
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8EDA9DF"
    },
    "5050": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3352
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5051": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x84"
    },
    "5053": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5054": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5055": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5056": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5057": {
      "op": "SWAP3"
    },
    "5058": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5059": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5060": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5061": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "SUB",
      "path": "2"
    },
    "5062": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5063": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5064": {
      "op": "DUP4"
    },
    "5065": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3344
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5066": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5067": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5068": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5069": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5070": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5071": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D7"
    },
    "5074": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5075": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5077": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5078": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5079": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5080": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "POP",
      "path": "2"
    },
    "5081": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "GAS",
      "path": "2"
    },
    "5082": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "CALL",
      "path": "2"
    },
    "5083": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5084": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5085": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5086": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13EB"
    },
    "5089": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5090": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5091": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5093": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5094": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5095": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5096": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5098": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5099": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3333,
        3384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "POP"
    },
    "5102": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3407
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x3"
    },
    "5104": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5105": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5106": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3417
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5107": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3417
      ],
      "op": "ADD",
      "path": "2"
    },
    "5108": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5109": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3417
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5110": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3441,
        3451
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 30
    },
    "5111": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3394,
        3407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5113": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5114": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5115": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5116": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5118": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5120": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5121": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5122": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5123": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5125": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5126": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5127": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5128": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3452
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5129": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5130": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5131": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3462
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5132": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3462
      ],
      "op": "ADD",
      "path": "2"
    },
    "5133": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5134": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3427,
        3462
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5135": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 31
    },
    "5136": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5137": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5138": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5139": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5140": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8D3970B91D4F8DBB1A8368398F1AC8BDD7A7FB5682C8360B7396214F65D7E55F"
    },
    "5173": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5174": {
      "op": "POP"
    },
    "5175": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3441,
        3451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5176": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3441,
        3451
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5177": {
      "op": "POP"
    },
    "5178": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3499,
        3506
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5179": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3499,
        3506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5180": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3411,
        3417
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5181": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3411,
        3417
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5182": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3516,
        3528
      ],
      "op": "NUMBER",
      "path": "2"
    },
    "5183": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3516,
        3528
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5184": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5185": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5186": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5187": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5188": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "5189": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5190": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3499,
        3506
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5191": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3499,
        3506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5192": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5193": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "GT",
      "path": "2"
    },
    "5194": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5195": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1450"
    },
    "5198": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5199": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "INVALID",
      "path": "2"
    },
    "5200": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5201": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5202": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5203": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5205": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "5206": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5207": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5208": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5209": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5211": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "5212": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5213": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5214": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5215": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5217": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "5218": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5219": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "5220": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "5221": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "5222": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "5223": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "5224": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5226": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5227": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5228": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5229": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SUB",
      "path": "2"
    },
    "5230": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5231": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        3477,
        3529
      ],
      "op": "LOG1",
      "path": "2"
    },
    "5232": {
      "offset": [
        1384,
        1385
      ],
      "op": "POP",
      "path": "2"
    },
    "5233": {
      "offset": [
        3240,
        3241
      ],
      "op": "POP",
      "path": "3"
    },
    "5234": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "POP",
      "path": "2"
    },
    "5235": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        2607,
        3537
      ],
      "op": "POP",
      "path": "2"
    },
    "5236": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        2607,
        3537
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5237": {
      "offset": [
        743,
        764
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5238": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x15"
    },
    "5240": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5247": {
      "op": "SHL"
    },
    "5248": {
      "op": "SUB"
    },
    "5249": {
      "offset": [
        743,
        764
      ],
      "op": "AND",
      "path": "2"
    },
    "5250": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        743,
        764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5251": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        743,
        764
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5252": {
      "offset": [
        1569,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5253": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "5255": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5256": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1569,
        1602
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5257": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        1569,
        1602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5258": {
      "offset": [
        1727,
        1750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5259": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "5261": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5262": {
      "fn": "AaveLossless.placeBet",
      "offset": [
        1727,
        1750
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5263": {
      "fn": "AaveLossless.placeBet",
      "jump": "o",
      "offset": [
        1727,
        1750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5265": {
      "offset": [
        1301,
        1313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1498"
    },
    "5268": {
      "offset": [
        1301,
        1311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15BC"
    },
    "5271": {
      "jump": "i",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5272": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1301,
        1313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5279": {
      "op": "SHL"
    },
    "5280": {
      "op": "SUB"
    },
    "5281": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "5"
    },
    "5282": {
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14A9"
    },
    "5285": {
      "offset": [
        1290,
        1295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB66"
    },
    "5288": {
      "jump": "i",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1290,
        1297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "op": "SUB"
    },
    "5298": {
      "offset": [
        1290,
        1313
      ],
      "op": "AND",
      "path": "5"
    },
    "5299": {
      "branch": 99,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1290,
        1313
      ],
      "op": "EQ",
      "path": "5"
    },
    "5300": {
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1504"
    },
    "5303": {
      "branch": 99,
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5314": {
      "op": "SHL"
    },
    "5315": {
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "5323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5329": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "5330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "5366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "5368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5369": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5370": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5371": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5372": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5373": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5374": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SUB",
      "path": "5"
    },
    "5375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "5377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "ADD",
      "path": "5"
    },
    "5378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1282,
        1350
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5387": {
      "op": "SHL"
    },
    "5388": {
      "op": "SUB"
    },
    "5389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2092,
        2114
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 32
    },
    "5390": {
      "branch": 100,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2092,
        2114
      ],
      "op": "AND",
      "path": "5"
    },
    "5391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1549"
    },
    "5394": {
      "branch": 100,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5404": {
      "op": "SHL"
    },
    "5405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "5"
    },
    "5410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "5"
    },
    "5415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SUB",
      "path": "5"
    },
    "5418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "5422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "5"
    },
    "5427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C91"
    },
    "5431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "5433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "ADD",
      "path": "5"
    },
    "5438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5439": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "POP",
      "path": "5"
    },
    "5440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "POP",
      "path": "5"
    },
    "5441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SUB",
      "path": "5"
    },
    "5447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2084,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 33,
      "value": "0x0"
    },
    "5452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5463": {
      "op": "SHL"
    },
    "5464": {
      "op": "SUB"
    },
    "5465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5466": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "AND",
      "path": "5"
    },
    "5468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "AND",
      "path": "5"
    },
    "5471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2193,
        2199
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2210
      ],
      "op": "LOG3",
      "path": "5"
    },
    "5507": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2226
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x0"
    },
    "5509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5517": {
      "op": "SHL"
    },
    "5518": {
      "op": "SUB"
    },
    "5519": {
      "op": "NOT"
    },
    "5520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "AND",
      "path": "5"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5527": {
      "op": "SHL"
    },
    "5528": {
      "op": "SUB"
    },
    "5529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5530": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "AND",
      "path": "5"
    },
    "5533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "OR",
      "path": "5"
    },
    "5537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2220,
        2237
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5539": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2004,
        2244
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5540": {
      "offset": [
        864,
        890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "5543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "AND",
      "path": "2"
    },
    "5547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5548": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        864,
        890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5549": {
      "offset": [
        660,
        680
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "offset": [
        660,
        680
      ],
      "op": "AND",
      "path": "2"
    },
    "5562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5563": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        660,
        680
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5564": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5565": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 35
    },
    "5566": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5567": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5568": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4500,
        4807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5569": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4559,
        4571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5571": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "5573": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4555
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5574": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5576": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4555
      ],
      "op": "AND",
      "path": "2"
    },
    "5577": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5579": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5580": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "GT",
      "path": "2"
    },
    "5581": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5582": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15D3"
    },
    "5585": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5586": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "INVALID",
      "path": "2"
    },
    "5587": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5588": {
      "branch": 85,
      "fn": "AaveLossless.findWinner",
      "offset": [
        4544,
        4571
      ],
      "op": "EQ",
      "path": "2"
    },
    "5589": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4541,
        4801
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5590": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4541,
        4801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1606"
    },
    "5593": {
      "branch": 85,
      "fn": "AaveLossless.findWinner",
      "offset": [
        4541,
        4801
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5594": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4596,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 36,
      "value": "0x15E1"
    },
    "5597": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4596,
        4610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18AB"
    },
    "5600": {
      "fn": "AaveLossless.findWinner",
      "jump": "i",
      "offset": [
        4596,
        4612
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5601": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4596,
        4612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5602": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x15"
    },
    "5604": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5605": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5612": {
      "op": "SHL"
    },
    "5613": {
      "op": "SUB"
    },
    "5614": {
      "op": "NOT"
    },
    "5615": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "AND",
      "path": "2"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5622": {
      "op": "SHL"
    },
    "5623": {
      "op": "SUB"
    },
    "5624": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5625": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5626": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5627": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "AND",
      "path": "2"
    },
    "5628": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5629": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5630": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5631": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "OR",
      "path": "2"
    },
    "5632": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5633": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4587,
        4612
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5634": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4541,
        4801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1669"
    },
    "5637": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4541,
        4801
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5638": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4541,
        4801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5639": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4648,
        4660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5641": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "5643": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5644": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5646": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4644
      ],
      "op": "AND",
      "path": "2"
    },
    "5647": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5649": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5650": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "GT",
      "path": "2"
    },
    "5651": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5652": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1619"
    },
    "5655": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5656": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "INVALID",
      "path": "2"
    },
    "5657": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5658": {
      "branch": 86,
      "fn": "AaveLossless.findWinner",
      "offset": [
        4633,
        4660
      ],
      "op": "EQ",
      "path": "2"
    },
    "5659": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4629,
        4801
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5660": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4629,
        4801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1627"
    },
    "5663": {
      "branch": 86,
      "fn": "AaveLossless.findWinner",
      "offset": [
        4629,
        4801
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5664": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4685,
        4701
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 37,
      "value": "0x15E1"
    },
    "5667": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4685,
        4699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19DD"
    },
    "5670": {
      "fn": "AaveLossless.findWinner",
      "jump": "i",
      "offset": [
        4685,
        4701
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5671": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4629,
        4801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5672": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4737,
        4749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5674": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "5676": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4733
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5677": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5679": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4733
      ],
      "op": "AND",
      "path": "2"
    },
    "5680": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5682": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5683": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "GT",
      "path": "2"
    },
    "5684": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5685": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x163A"
    },
    "5688": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5689": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "INVALID",
      "path": "2"
    },
    "5690": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5691": {
      "branch": 87,
      "fn": "AaveLossless.findWinner",
      "offset": [
        4722,
        4749
      ],
      "op": "EQ",
      "path": "2"
    },
    "5692": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4718,
        4801
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5693": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4718,
        4801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1669"
    },
    "5696": {
      "branch": 87,
      "fn": "AaveLossless.findWinner",
      "offset": [
        4718,
        4801
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5697": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4774,
        4790
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0x1648"
    },
    "5700": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4774,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0F"
    },
    "5703": {
      "fn": "AaveLossless.findWinner",
      "jump": "i",
      "offset": [
        4774,
        4790
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5704": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4774,
        4790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5705": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x15"
    },
    "5707": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5708": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5715": {
      "op": "SHL"
    },
    "5716": {
      "op": "SUB"
    },
    "5717": {
      "op": "NOT"
    },
    "5718": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "AND",
      "path": "2"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5725": {
      "op": "SHL"
    },
    "5726": {
      "op": "SUB"
    },
    "5727": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5728": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5729": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5730": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "AND",
      "path": "2"
    },
    "5731": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5732": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5733": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5734": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "OR",
      "path": "2"
    },
    "5735": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5736": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4765,
        4790
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5737": {
      "fn": "AaveLossless.findWinner",
      "offset": [
        4718,
        4801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5738": {
      "fn": "AaveLossless.findWinner",
      "jump": "o",
      "offset": [
        4500,
        4807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5739": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4912,
        5087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5740": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5020,
        5033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5742": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5020,
        5033
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5743": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4986,
        4991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5745": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4986,
        4991
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5746": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5748": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5749": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5750": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5757": {
      "op": "SHL"
    },
    "5758": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5759": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5760": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5011,
        5015
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "5761": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5763": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5764": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ADD",
      "path": "2"
    },
    "5765": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5766": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5767": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5768": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4956,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5770": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4956,
        4976
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5771": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5020,
        5033
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5778": {
      "op": "SHL"
    },
    "5779": {
      "op": "SUB"
    },
    "5780": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4986,
        4991
      ],
      "op": "AND",
      "path": "2"
    },
    "5781": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4986,
        4991
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5782": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5002
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "5787": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5788": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5790": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5791": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5792": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ADD",
      "path": "2"
    },
    "5793": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5794": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5796": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5797": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5798": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5799": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5800": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5801": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "SUB",
      "path": "2"
    },
    "5802": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ADD",
      "path": "2"
    },
    "5803": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5804": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4986,
        4991
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5805": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5806": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5807": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5808": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5809": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5810": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16BA"
    },
    "5813": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5814": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5816": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5817": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5818": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5819": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "POP",
      "path": "2"
    },
    "5820": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "GAS",
      "path": "2"
    },
    "5821": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5822": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5823": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5824": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5825": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16CE"
    },
    "5828": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5829": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5830": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5832": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5833": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5834": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5835": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5837": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5838": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5839": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "POP",
      "path": "2"
    },
    "5840": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "POP",
      "path": "2"
    },
    "5841": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "POP",
      "path": "2"
    },
    "5842": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "POP",
      "path": "2"
    },
    "5843": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5845": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5846": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5847": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5849": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5850": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "LT",
      "path": "2"
    },
    "5851": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5852": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E4"
    },
    "5855": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5856": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5858": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5859": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5860": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5863": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5057,
        5063
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x15"
    },
    "5865": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5057,
        5063
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5872": {
      "op": "SHL"
    },
    "5873": {
      "op": "SUB"
    },
    "5874": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5057,
        5063
      ],
      "op": "AND",
      "path": "2"
    },
    "5875": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5877": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5878": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5879": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5880": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5882": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5884": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5885": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5887": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5888": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5064
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5889": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5890": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5891": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5033
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5892": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5033
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5893": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5033
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5894": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        4979,
        5033
      ],
      "op": "SUB",
      "path": "2"
    },
    "5895": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5896": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5897": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "ADD",
      "path": "2"
    },
    "5898": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5899": {
      "fn": "AaveLossless.payoutWinner",
      "offset": [
        5043,
        5080
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5900": {
      "op": "POP"
    },
    "5901": {
      "fn": "AaveLossless.payoutWinner",
      "jump": "o",
      "offset": [
        4912,
        5087
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5902": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        3978,
        4363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5903": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4108,
        4123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5905": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4108,
        4123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5906": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4108,
        4123
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5907": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4166,
        4176
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 40
    },
    "5908": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4035,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5910": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5911": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5912": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5913": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "5915": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5917": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5918": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5919": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5920": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5922": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5923": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5924": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4177
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5925": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5926": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5927": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4058,
        4070
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "5928": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4108,
        4138
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5929": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4108,
        4138
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "5930": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4108,
        4138
      ],
      "op": "SUB",
      "path": "3"
    },
    "5931": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4097,
        4139
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "5932": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4097,
        4139
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5933": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4097,
        4139
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "5934": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4097,
        4139
      ],
      "op": "MUL",
      "path": "3"
    },
    "5935": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5936": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5937": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "ADD",
      "path": "3"
    },
    "5938": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5939": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "5940": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4149,
        4187
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5941": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4215
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 41,
      "value": "0x4"
    },
    "5943": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5944": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5945": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5946": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5947": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "ADD",
      "path": "3"
    },
    "5948": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5949": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5950": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5951": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4197,
        4225
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5952": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4253
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0xA"
    },
    "5954": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5955": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5956": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5957": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5958": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "ADD",
      "path": "3"
    },
    "5959": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5960": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5961": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5962": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
    },
    "5995": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "ADD",
      "path": "3"
    },
    "5996": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5997": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5998": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5999": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4235,
        4278
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6000": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4302,
        4310
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0x7"
    },
    "6002": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4302,
        4310
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6003": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4302,
        4310
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6004": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6005": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6006": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6008": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6009": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6010": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6011": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6012": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6013": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6014": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4311
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6015": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6016": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6023": {
      "op": "SHL"
    },
    "6024": {
      "op": "SUB"
    },
    "6025": {
      "op": "NOT"
    },
    "6026": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "AND",
      "path": "3"
    },
    "6027": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6028": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6029": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "OR",
      "path": "3"
    },
    "6030": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6031": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6032": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4288,
        4324
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6033": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4334,
        4347
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 44
    },
    "6034": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4334,
        4347
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6035": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4334,
        4347
      ],
      "op": "ADD",
      "path": "3"
    },
    "6036": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4334,
        4347
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6037": {
      "fn": "Lossless.placeHomeBet",
      "offset": [
        4334,
        4347
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6038": {
      "fn": "Lossless.placeHomeBet",
      "jump": "o",
      "offset": [
        3978,
        4363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6039": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4850,
        5235
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6040": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4979,
        4994
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6042": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4979,
        4994
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6043": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4979,
        4994
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6044": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5037,
        5047
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 45
    },
    "6045": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4907,
        4927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6047": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6048": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6049": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6050": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "6052": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6054": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6055": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6056": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6057": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6059": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6060": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6061": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5048
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6062": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6063": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6064": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4930,
        4942
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "6065": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4979,
        5009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6066": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4979,
        5009
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "6067": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4979,
        5009
      ],
      "op": "SUB",
      "path": "3"
    },
    "6068": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4969,
        5010
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "6069": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4969,
        5010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6070": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4969,
        5010
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "6071": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        4969,
        5010
      ],
      "op": "MUL",
      "path": "3"
    },
    "6072": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6073": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6074": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "ADD",
      "path": "3"
    },
    "6075": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6076": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "6077": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5020,
        5058
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6078": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5086
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 46,
      "value": "0x6"
    },
    "6080": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6081": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6082": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6083": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6084": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "ADD",
      "path": "3"
    },
    "6085": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6086": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6087": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6088": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5068,
        5096
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6089": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5124
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0xC"
    },
    "6091": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6092": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6093": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6094": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6095": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "ADD",
      "path": "3"
    },
    "6096": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6097": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6098": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6099": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7"
    },
    "6132": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "ADD",
      "path": "3"
    },
    "6133": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6134": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6135": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6136": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5106,
        5149
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6137": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5174,
        5182
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0x9"
    },
    "6139": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5174,
        5182
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6140": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5174,
        5182
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6141": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6142": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6143": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5173
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6145": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6146": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6147": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6148": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6149": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6150": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6151": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5183
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6152": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6153": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6160": {
      "op": "SHL"
    },
    "6161": {
      "op": "SUB"
    },
    "6162": {
      "op": "NOT"
    },
    "6163": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "AND",
      "path": "3"
    },
    "6164": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6165": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6166": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "OR",
      "path": "3"
    },
    "6167": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6168": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6169": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5160,
        5196
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6170": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5206,
        5219
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 49
    },
    "6171": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5206,
        5219
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6172": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5206,
        5219
      ],
      "op": "ADD",
      "path": "3"
    },
    "6173": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5206,
        5219
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6174": {
      "fn": "Lossless.placeAwayBet",
      "offset": [
        5206,
        5219
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6175": {
      "fn": "Lossless.placeAwayBet",
      "jump": "o",
      "offset": [
        4850,
        5235
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6176": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4414,
        4799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6177": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4544,
        4559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6179": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4544,
        4559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6180": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4544,
        4559
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6181": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4602,
        4612
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 50
    },
    "6182": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4471,
        4491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6184": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6185": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6186": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6187": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "6189": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6191": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6192": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6193": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6194": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6196": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6197": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6198": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4613
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6199": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6200": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6201": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4494,
        4506
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "6202": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4544,
        4574
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6203": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4544,
        4574
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "6204": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4544,
        4574
      ],
      "op": "SUB",
      "path": "3"
    },
    "6205": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4533,
        4575
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "6206": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4533,
        4575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6207": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4533,
        4575
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "6208": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4533,
        4575
      ],
      "op": "MUL",
      "path": "3"
    },
    "6209": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6210": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6211": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "ADD",
      "path": "3"
    },
    "6212": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6213": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "6214": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4585,
        4623
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6215": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4651
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 51,
      "value": "0x5"
    },
    "6217": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6218": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6219": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6220": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6221": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "ADD",
      "path": "3"
    },
    "6222": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6223": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6224": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6225": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4633,
        4661
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6226": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4689
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 52,
      "value": "0xB"
    },
    "6228": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6229": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6230": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6231": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6232": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "ADD",
      "path": "3"
    },
    "6233": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6234": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6235": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6236": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
    },
    "6269": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "ADD",
      "path": "3"
    },
    "6270": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6271": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6272": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6273": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4671,
        4714
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6274": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4738,
        4746
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 53,
      "value": "0x7"
    },
    "6276": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4738,
        4746
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6277": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6278": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6279": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "6281": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6282": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6283": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6284": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6285": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6286": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4747
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6287": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6288": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6295": {
      "op": "SHL"
    },
    "6296": {
      "op": "SUB"
    },
    "6297": {
      "op": "NOT"
    },
    "6298": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "AND",
      "path": "3"
    },
    "6299": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6300": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6301": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "OR",
      "path": "3"
    },
    "6302": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6303": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6304": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4724,
        4760
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6305": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4778
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 54,
      "value": "0x8"
    },
    "6307": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6308": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6309": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6310": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6311": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "ADD",
      "path": "3"
    },
    "6312": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6313": {
      "fn": "Lossless.placeDrawBet",
      "offset": [
        4770,
        4783
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6314": {
      "fn": "Lossless.placeDrawBet",
      "jump": "o",
      "offset": [
        4414,
        4799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6315": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5289,
        5952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6316": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5332,
        5339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6318": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5351,
        5365
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6319": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5368,
        5376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18B6"
    },
    "6322": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5368,
        5374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C41"
    },
    "6325": {
      "fn": "Lossless.findHomeWinner",
      "jump": "i",
      "offset": [
        5368,
        5376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6326": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5368,
        5376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6327": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5351,
        5376
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6328": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5351,
        5376
      ],
      "op": "POP",
      "path": "3"
    },
    "6329": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5404,
        5422
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 55,
      "value": "0x4"
    },
    "6331": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5404,
        5422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6332": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6333": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5422
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6334": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18C3"
    },
    "6337": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5422
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6338": {
      "dev": "Modulus by zero",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5422
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6339": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5422
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6340": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5395,
        5422
      ],
      "op": "MOD",
      "path": "3"
    },
    "6341": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5386,
        5422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6342": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5386,
        5422
      ],
      "op": "POP",
      "path": "3"
    },
    "6343": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6345": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5464,
        5465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6347": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6348": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6349": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6350": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "LT",
      "path": "3"
    },
    "6351": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D4"
    },
    "6354": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6355": {
      "dev": "Index out of range",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6356": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6357": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6358": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6360": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6361": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6363": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6365": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6366": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "ADD",
      "path": "3"
    },
    "6367": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5445,
        5466
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6368": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5436,
        5442
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6369": {
      "branch": 90,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5436,
        5466
      ],
      "op": "LT",
      "path": "3"
    },
    "6370": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5433,
        5516
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6371": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5433,
        5516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "6374": {
      "branch": 90,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5433,
        5516
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "op": "POP"
    },
    "6377": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 56,
      "value": "0x0"
    },
    "6379": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6380": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6381": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6383": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6385": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6386": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE"
    },
    "6419": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6426": {
      "op": "SHL"
    },
    "6427": {
      "op": "SUB"
    },
    "6428": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5489,
        5505
      ],
      "op": "AND",
      "path": "3"
    },
    "6429": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5482,
        5505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "6432": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5482,
        5505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6433": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5433,
        5516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6434": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6436": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5536,
        5561
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6439": {
      "op": "NOT"
    },
    "6440": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5536,
        5563
      ],
      "op": "ADD",
      "path": "3"
    },
    "6441": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5526,
        5533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6443": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6444": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5607,
        5609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6445": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5601,
        5603
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6446": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5601,
        5609
      ],
      "op": "GT",
      "path": "3"
    },
    "6447": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19BE"
    },
    "6450": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6451": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5625,
        5636
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6453": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5652,
        5653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6455": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5645,
        5650
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6456": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5645,
        5650
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6457": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5645,
        5650
      ],
      "op": "SUB",
      "path": "3"
    },
    "6458": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5644,
        5653
      ],
      "op": "DIV",
      "path": "3"
    },
    "6459": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5639,
        5641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6460": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5639,
        5653
      ],
      "op": "ADD",
      "path": "3"
    },
    "6461": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5625,
        5653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6462": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5625,
        5653
      ],
      "op": "POP",
      "path": "3"
    },
    "6463": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6465": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5698,
        5701
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6466": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6467": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6468": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6469": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "LT",
      "path": "3"
    },
    "6470": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x194B"
    },
    "6473": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6474": {
      "dev": "Index out of range",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6475": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6476": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6477": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6479": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6480": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6482": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6484": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6485": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "ADD",
      "path": "3"
    },
    "6486": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5679,
        5702
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6487": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5670,
        5676
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6488": {
      "branch": 91,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5670,
        5702
      ],
      "op": "LT",
      "path": "3"
    },
    "6489": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5667,
        5901
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6490": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5667,
        5901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1968"
    },
    "6493": {
      "branch": 91,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5667,
        5901
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6494": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5730,
        5731
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 57,
      "value": "0x1"
    },
    "6496": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5726,
        5729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6497": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5726,
        5731
      ],
      "op": "SUB",
      "path": "3"
    },
    "6498": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5721,
        5731
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6499": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5721,
        5731
      ],
      "op": "POP",
      "path": "3"
    },
    "6500": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5667,
        5901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B8"
    },
    "6503": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5667,
        5901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6504": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5667,
        5901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6505": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6507": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5784,
        5787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6508": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6509": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6510": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6511": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "LT",
      "path": "3"
    },
    "6512": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1975"
    },
    "6515": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6516": {
      "dev": "Index out of range",
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6517": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6518": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6519": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6521": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6522": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6524": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6526": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6527": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "ADD",
      "path": "3"
    },
    "6528": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5765,
        5788
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6529": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5757,
        5763
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6530": {
      "branch": 92,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5757,
        5788
      ],
      "op": "GT",
      "path": "3"
    },
    "6531": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6532": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1992"
    },
    "6535": {
      "branch": 92,
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6536": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5813,
        5816
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 58
    },
    "6537": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5819,
        5820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6539": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5813,
        5820
      ],
      "op": "ADD",
      "path": "3"
    },
    "6540": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5808,
        5820
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6541": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5808,
        5820
      ],
      "op": "POP",
      "path": "3"
    },
    "6542": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B8"
    },
    "6545": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6546": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6547": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5884,
        5885
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 59,
      "value": "0x1"
    },
    "6549": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5880,
        5885
      ],
      "op": "ADD",
      "path": "3"
    },
    "6550": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6552": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6553": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6554": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6555": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6557": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6559": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6560": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6562": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6563": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6564": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6571": {
      "op": "SHL"
    },
    "6572": {
      "op": "SUB"
    },
    "6573": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "AND",
      "path": "3"
    },
    "6574": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5866,
        5886
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6575": {
      "op": "POP"
    },
    "6576": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5859,
        5886
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "6579": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5859,
        5886
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6580": {
      "op": "POP"
    },
    "6581": {
      "op": "POP"
    },
    "6582": {
      "op": "POP"
    },
    "6583": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5859,
        5886
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6584": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5753,
        5901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6585": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "POP",
      "path": "3"
    },
    "6586": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x192B"
    },
    "6589": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6590": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5595,
        5911
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6591": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 60,
      "value": "0x0"
    },
    "6593": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6594": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6595": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6596": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5940
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6598": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6600": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6601": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6603": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6604": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6605": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6612": {
      "op": "SHL"
    },
    "6613": {
      "op": "SUB"
    },
    "6614": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "AND",
      "path": "3"
    },
    "6615": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5927,
        5944
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6616": {
      "op": "POP"
    },
    "6617": {
      "op": "POP"
    },
    "6618": {
      "op": "POP"
    },
    "6619": {
      "fn": "Lossless.findHomeWinner",
      "offset": [
        5289,
        5952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6620": {
      "fn": "Lossless.findHomeWinner",
      "jump": "o",
      "offset": [
        5289,
        5952
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6621": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6719,
        7382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6622": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6762,
        6769
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6624": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6781,
        6795
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6625": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6798,
        6806
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19E8"
    },
    "6628": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6798,
        6804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C41"
    },
    "6631": {
      "fn": "Lossless.findAwayWinner",
      "jump": "i",
      "offset": [
        6798,
        6806
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6632": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6798,
        6806
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6633": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6634": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6781,
        6806
      ],
      "op": "POP",
      "path": "3"
    },
    "6635": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6834,
        6852
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 61,
      "value": "0x6"
    },
    "6637": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6834,
        6852
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6638": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6639": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6852
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6640": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19F5"
    },
    "6643": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6644": {
      "dev": "Modulus by zero",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6852
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6645": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6646": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6825,
        6852
      ],
      "op": "MOD",
      "path": "3"
    },
    "6647": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6816,
        6852
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6648": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6816,
        6852
      ],
      "op": "POP",
      "path": "3"
    },
    "6649": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6893
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "6651": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6894,
        6895
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6653": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6654": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6655": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6656": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "LT",
      "path": "3"
    },
    "6657": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A06"
    },
    "6660": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6661": {
      "dev": "Index out of range",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6662": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6663": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6664": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6666": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6667": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6669": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6671": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6672": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "ADD",
      "path": "3"
    },
    "6673": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6875,
        6896
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6674": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6866,
        6872
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6675": {
      "branch": 93,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6866,
        6896
      ],
      "op": "LT",
      "path": "3"
    },
    "6676": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6863,
        6946
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6677": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6863,
        6946
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A53"
    },
    "6680": {
      "branch": 93,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6863,
        6946
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6681": {
      "op": "POP"
    },
    "6682": {
      "op": "POP"
    },
    "6683": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 62,
      "value": "0x0"
    },
    "6685": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6686": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6687": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6689": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6691": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6692": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF4803E074BD026BAAF6ED2E288C9515F68C72FB7216EEBDD7CAE1718A53EC375"
    },
    "6725": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6732": {
      "op": "SHL"
    },
    "6733": {
      "op": "SUB"
    },
    "6734": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6919,
        6935
      ],
      "op": "AND",
      "path": "3"
    },
    "6735": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6912,
        6935
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "6738": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6912,
        6935
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6739": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6863,
        6946
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6740": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6966,
        6984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "6742": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6966,
        6991
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6745": {
      "op": "NOT"
    },
    "6746": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6966,
        6993
      ],
      "op": "ADD",
      "path": "3"
    },
    "6747": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6956,
        6963
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6749": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6750": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7037,
        7039
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6751": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7031,
        7033
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6752": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7031,
        7039
      ],
      "op": "GT",
      "path": "3"
    },
    "6753": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AF0"
    },
    "6756": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6757": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7055,
        7066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6759": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7082,
        7083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6761": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7075,
        7080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6762": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7075,
        7080
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6763": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7075,
        7080
      ],
      "op": "SUB",
      "path": "3"
    },
    "6764": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7074,
        7083
      ],
      "op": "DIV",
      "path": "3"
    },
    "6765": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7069,
        7071
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6766": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7069,
        7083
      ],
      "op": "ADD",
      "path": "3"
    },
    "6767": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7055,
        7083
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6768": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7055,
        7083
      ],
      "op": "POP",
      "path": "3"
    },
    "6769": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "6771": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7128,
        7131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6772": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6773": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6774": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6775": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "LT",
      "path": "3"
    },
    "6776": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A7D"
    },
    "6779": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6780": {
      "dev": "Index out of range",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6781": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6782": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6783": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6785": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6786": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6788": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6790": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6791": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "ADD",
      "path": "3"
    },
    "6792": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7109,
        7132
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6793": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7100,
        7106
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6794": {
      "branch": 94,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7100,
        7132
      ],
      "op": "LT",
      "path": "3"
    },
    "6795": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7097,
        7331
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6796": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7097,
        7331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A9A"
    },
    "6799": {
      "branch": 94,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7097,
        7331
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6800": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7160,
        7161
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x1"
    },
    "6802": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7156,
        7159
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6803": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7156,
        7161
      ],
      "op": "SUB",
      "path": "3"
    },
    "6804": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7151,
        7161
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6805": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7151,
        7161
      ],
      "op": "POP",
      "path": "3"
    },
    "6806": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7097,
        7331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AEA"
    },
    "6809": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7097,
        7331
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6810": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7097,
        7331
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6811": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "6813": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7214,
        7217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6814": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6815": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6816": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6817": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "LT",
      "path": "3"
    },
    "6818": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA7"
    },
    "6821": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6822": {
      "dev": "Index out of range",
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6823": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6824": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6825": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6827": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6828": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6830": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6832": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6833": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "ADD",
      "path": "3"
    },
    "6834": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7195,
        7218
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6835": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7187,
        7193
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6836": {
      "branch": 95,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7187,
        7218
      ],
      "op": "GT",
      "path": "3"
    },
    "6837": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6838": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC4"
    },
    "6841": {
      "branch": 95,
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6842": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7243,
        7246
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 64
    },
    "6843": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7249,
        7250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6845": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7243,
        7250
      ],
      "op": "ADD",
      "path": "3"
    },
    "6846": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7238,
        7250
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6847": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7238,
        7250
      ],
      "op": "POP",
      "path": "3"
    },
    "6848": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AEA"
    },
    "6851": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6852": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6853": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7314,
        7315
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x1"
    },
    "6855": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7310,
        7315
      ],
      "op": "ADD",
      "path": "3"
    },
    "6856": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6858": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6859": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6860": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6861": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6863": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6865": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6866": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6868": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6869": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6870": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6877": {
      "op": "SHL"
    },
    "6878": {
      "op": "SUB"
    },
    "6879": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "AND",
      "path": "3"
    },
    "6880": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7296,
        7316
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6881": {
      "op": "POP"
    },
    "6882": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "6885": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7289,
        7316
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6886": {
      "op": "POP"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7289,
        7316
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6890": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7183,
        7331
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6891": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "POP",
      "path": "3"
    },
    "6892": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A5D"
    },
    "6895": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6896": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7025,
        7341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6897": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 66,
      "value": "0x0"
    },
    "6899": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6900": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6901": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6902": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6904": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6906": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6907": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6909": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6910": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6911": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6918": {
      "op": "SHL"
    },
    "6919": {
      "op": "SUB"
    },
    "6920": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "AND",
      "path": "3"
    },
    "6921": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        7357,
        7374
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6922": {
      "op": "POP"
    },
    "6923": {
      "op": "POP"
    },
    "6924": {
      "op": "POP"
    },
    "6925": {
      "fn": "Lossless.findAwayWinner",
      "offset": [
        6719,
        7382
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6926": {
      "fn": "Lossless.findAwayWinner",
      "jump": "o",
      "offset": [
        6719,
        7382
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6927": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6004,
        6667
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6928": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6047,
        6054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6930": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6066,
        6080
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6931": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6083,
        6091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B1A"
    },
    "6934": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6083,
        6089
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C41"
    },
    "6937": {
      "fn": "Lossless.findDrawWinner",
      "jump": "i",
      "offset": [
        6083,
        6091
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6938": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6083,
        6091
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6939": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6066,
        6091
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6940": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6066,
        6091
      ],
      "op": "POP",
      "path": "3"
    },
    "6941": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6119,
        6137
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x5"
    },
    "6943": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6119,
        6137
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6944": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6116
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6945": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6137
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6946": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B27"
    },
    "6949": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6137
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6950": {
      "dev": "Modulus by zero",
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6137
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6951": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6137
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6952": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6110,
        6137
      ],
      "op": "MOD",
      "path": "3"
    },
    "6953": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6101,
        6137
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6954": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6101,
        6137
      ],
      "op": "POP",
      "path": "3"
    },
    "6955": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6178
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "6957": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6179,
        6180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6959": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6960": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6961": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6962": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "LT",
      "path": "3"
    },
    "6963": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B38"
    },
    "6966": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6967": {
      "dev": "Index out of range",
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6968": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6969": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6970": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6972": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6973": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6975": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6977": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6978": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "ADD",
      "path": "3"
    },
    "6979": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6160,
        6181
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6980": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6151,
        6157
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6981": {
      "branch": 96,
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6151,
        6181
      ],
      "op": "LT",
      "path": "3"
    },
    "6982": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6148,
        6231
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6983": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6148,
        6231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B85"
    },
    "6986": {
      "branch": 96,
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6148,
        6231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6987": {
      "op": "POP"
    },
    "6988": {
      "op": "POP"
    },
    "6989": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x0"
    },
    "6991": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6992": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6993": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "6995": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6997": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6998": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xE710864318D4A32F37D6CE54CB3FADBEF648DD12D8DBDF53973564D56B7F881C"
    },
    "7031": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7038": {
      "op": "SHL"
    },
    "7039": {
      "op": "SUB"
    },
    "7040": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6204,
        6220
      ],
      "op": "AND",
      "path": "3"
    },
    "7041": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6197,
        6220
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "7044": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6197,
        6220
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7045": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6148,
        6231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7046": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6251,
        6269
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "7048": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6251,
        6276
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7051": {
      "op": "NOT"
    },
    "7052": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6251,
        6278
      ],
      "op": "ADD",
      "path": "3"
    },
    "7053": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6241,
        6248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7055": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7056": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6322,
        6324
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7057": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6316,
        6318
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7058": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6316,
        6324
      ],
      "op": "GT",
      "path": "3"
    },
    "7059": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C22"
    },
    "7062": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7063": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6340,
        6351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7065": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6367,
        6368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7067": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6360,
        6365
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7068": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6360,
        6365
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7069": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6360,
        6365
      ],
      "op": "SUB",
      "path": "3"
    },
    "7070": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6359,
        6368
      ],
      "op": "DIV",
      "path": "3"
    },
    "7071": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6354,
        6356
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7072": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6354,
        6368
      ],
      "op": "ADD",
      "path": "3"
    },
    "7073": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6340,
        6368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7074": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6340,
        6368
      ],
      "op": "POP",
      "path": "3"
    },
    "7075": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "7077": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6413,
        6416
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7078": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7079": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7080": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7081": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "LT",
      "path": "3"
    },
    "7082": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAF"
    },
    "7085": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7086": {
      "dev": "Index out of range",
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "INVALID",
      "path": "3"
    },
    "7087": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7088": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7089": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7091": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7092": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7094": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7096": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7097": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "ADD",
      "path": "3"
    },
    "7098": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6394,
        6417
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7099": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6385,
        6391
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7100": {
      "branch": 97,
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6385,
        6417
      ],
      "op": "LT",
      "path": "3"
    },
    "7101": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6382,
        6616
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7102": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6382,
        6616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BCC"
    },
    "7105": {
      "branch": 97,
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6382,
        6616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7106": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6445,
        6446
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 69,
      "value": "0x1"
    },
    "7108": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6441,
        6444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7109": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6441,
        6446
      ],
      "op": "SUB",
      "path": "3"
    },
    "7110": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6436,
        6446
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7111": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6436,
        6446
      ],
      "op": "POP",
      "path": "3"
    },
    "7112": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6382,
        6616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1C"
    },
    "7115": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6382,
        6616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7116": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6382,
        6616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7117": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "7119": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6499,
        6502
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7120": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7121": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7122": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7123": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "LT",
      "path": "3"
    },
    "7124": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD9"
    },
    "7127": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7128": {
      "dev": "Index out of range",
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "INVALID",
      "path": "3"
    },
    "7129": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7130": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7131": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7133": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7134": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7136": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7138": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7139": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "ADD",
      "path": "3"
    },
    "7140": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6480,
        6503
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7141": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6472,
        6478
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7142": {
      "branch": 98,
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6472,
        6503
      ],
      "op": "GT",
      "path": "3"
    },
    "7143": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7144": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF6"
    },
    "7147": {
      "branch": 98,
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7148": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6528,
        6531
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 70
    },
    "7149": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6534,
        6535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7151": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6528,
        6535
      ],
      "op": "ADD",
      "path": "3"
    },
    "7152": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6523,
        6535
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7153": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6523,
        6535
      ],
      "op": "POP",
      "path": "3"
    },
    "7154": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1C"
    },
    "7157": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7158": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7159": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6599,
        6600
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 71,
      "value": "0x1"
    },
    "7161": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6595,
        6600
      ],
      "op": "ADD",
      "path": "3"
    },
    "7162": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7164": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7165": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7166": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7167": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7169": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7171": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7172": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7174": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7175": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7176": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7183": {
      "op": "SHL"
    },
    "7184": {
      "op": "SUB"
    },
    "7185": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "AND",
      "path": "3"
    },
    "7186": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6581,
        6601
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7187": {
      "op": "POP"
    },
    "7188": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6574,
        6601
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "7191": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6574,
        6601
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7192": {
      "op": "POP"
    },
    "7193": {
      "op": "POP"
    },
    "7194": {
      "op": "POP"
    },
    "7195": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6574,
        6601
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7196": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6468,
        6616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7197": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "POP",
      "path": "3"
    },
    "7198": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8F"
    },
    "7201": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7202": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6310,
        6626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7203": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 72,
      "value": "0x0"
    },
    "7205": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7206": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7207": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7208": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6655
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7210": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7212": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7213": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7215": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7216": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7217": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7224": {
      "op": "SHL"
    },
    "7225": {
      "op": "SUB"
    },
    "7226": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "AND",
      "path": "3"
    },
    "7227": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6642,
        6659
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7228": {
      "op": "POP"
    },
    "7229": {
      "op": "POP"
    },
    "7230": {
      "op": "POP"
    },
    "7231": {
      "fn": "Lossless.findDrawWinner",
      "offset": [
        6004,
        6667
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7232": {
      "fn": "Lossless.findDrawWinner",
      "jump": "o",
      "offset": [
        6004,
        6667
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7233": {
      "fn": "Lossless.random",
      "offset": [
        7500,
        7688
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7234": {
      "fn": "Lossless.random",
      "offset": [
        7629,
        7642
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x3"
    },
    "7236": {
      "fn": "Lossless.random",
      "offset": [
        7629,
        7642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7237": {
      "fn": "Lossless.random",
      "offset": [
        7644,
        7659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7239": {
      "fn": "Lossless.random",
      "offset": [
        7644,
        7659
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7240": {
      "fn": "Lossless.random",
      "offset": [
        7661,
        7677
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7242": {
      "fn": "Lossless.random",
      "offset": [
        7661,
        7677
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7243": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7245": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7246": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7247": {
      "fn": "Lossless.random",
      "offset": [
        7594,
        7610
      ],
      "op": "DIFFICULTY",
      "path": "3"
    },
    "7248": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7250": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7251": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7252": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7253": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7254": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7255": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7256": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7257": {
      "fn": "Lossless.random",
      "offset": [
        7612,
        7627
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7258": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7259": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7260": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7261": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7262": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7264": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7265": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7266": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "7267": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7268": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "7269": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7270": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "7272": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7273": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7274": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7275": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7276": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7277": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7278": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "7280": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7281": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7282": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7283": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7284": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7285": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7286": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7287": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7288": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7289": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7290": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7291": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SUB",
      "path": "3"
    },
    "7292": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7293": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7294": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7295": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7296": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7297": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "7299": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7300": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7301": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "ADD",
      "path": "3"
    },
    "7302": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7303": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7304": {
      "fn": "Lossless.random",
      "offset": [
        7577,
        7679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7305": {
      "fn": "Lossless.random",
      "offset": [
        7567,
        7680
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7306": {
      "fn": "Lossless.random",
      "offset": [
        7567,
        7680
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7307": {
      "fn": "Lossless.random",
      "offset": [
        7567,
        7680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7308": {
      "fn": "Lossless.random",
      "offset": [
        7567,
        7680
      ],
      "op": "ADD",
      "path": "3"
    },
    "7309": {
      "fn": "Lossless.random",
      "offset": [
        7567,
        7680
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7310": {
      "fn": "Lossless.random",
      "offset": [
        7500,
        7688
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7311": {
      "fn": "Lossless.random",
      "jump": "o",
      "offset": [
        7500,
        7688
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "6a21a64819986c4a5507fbe3a61fed2ab747b163",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport '../../interfaces/ILendingPool.sol';\nimport '../../interfaces/IERC20.sol';\nimport './Lossless.sol';\n\n\n\n/** @title AaveLossless\n *  @dev This contract implement is a lossless betting contracts for football 1X2 that use Aave to generate yield\n * Contract has an owner to settle the bet, to be replaced by Chainlink.\n * Process : - Owner creates contract, sets token and lendingpool : token for betting and lending pool to use.\n *           - Contract can also be sponsored : someone deposit without participating in betting.\n */\ncontract AaveLossless is Lossless  {\n\n    /// token used to bet\n    address public token;\n    /// player winning the lottery after game is settled\n    address public winner;\n    /// amount of deposit by sponsors\n    uint256 public sponsorDeposit;\n    /// team winning\n    BetSide public winningSide;\n    /// Aave Lending pool to deposit tokens\n    ILendingPool public lendingPool;\n    enum BetSide {OPEN, HOME, DRAW, AWAY}\n    \n    event BetPlaced(address player, BetSide betside, uint256 amount, uint256 _block);\n    event Winner(address _winner);\n    \n     /**\n     * @dev Throws if betside is not valid\n     */\n    modifier correctBet(BetSide betSide) {\n        require(betSide == BetSide.HOME || betSide == BetSide.AWAY|| betSide == BetSide.DRAW, 'invalid argument for bestide');\n        _;\n    }\n\n    /**\n     * @dev Initialize the contract settings : matchStartBlock, matchFinishBlock, token and lending pool.\n     */\n    constructor(address _token, address _lendingPoolAddress, uint256 _matchStartBlock, uint256 _matchFinishBlock)\n    public  \n    Lossless(_matchStartBlock, _matchFinishBlock ){\n        status = MatchStatus.OPEN;\n        token = _token;\n        lendingPool = ILendingPool(_lendingPoolAddress);\n        winningSide = BetSide.OPEN;\n        winner = address(0);\n    }\n\n    /**\n     * @dev Sponsor the contract, funds received will be used to generate yield.\n     */\n    function sponsor(uint256 amount) public payable isOpen() {\n        require(amount > 0, 'amount must be positif');\n        uint256 allowance = IERC20(token).allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Check the token allowance\");\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\n        IERC20(token).approve(address(lendingPool), amount);\n        lendingPool.deposit(token, amount, address(this),0);\n        totalDeposits += amount;\n        sponsorDeposit += amount;\n        playerBalance[msg.sender] += amount;\n\n\n    }\n\n    /**\n     * @dev Places the bet.\n     */\n    function placeBet(BetSide betSide, uint256 amount) public payable isOpen() correctBet(betSide) {\n        require(amount > 0, 'amount must be positif');\n        if (betSide==BetSide.HOME) {\n            placeHomeBet(amount);\n        } else if (betSide==BetSide.AWAY) {\n            placeAwayBet(amount);\n        } else if (betSide==BetSide.DRAW) {\n            placeDrawBet(amount);\n        }\n        \n        // placing money in aave logique\n        uint256 allowance = IERC20(token).allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Check the token allowance\");\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\n        IERC20(token).approve(address(lendingPool), amount);\n        lendingPool.deposit(token, amount, address(this),0);\n        totalDeposits += amount;\n        playerBalance[msg.sender] += amount;\n        emit BetPlaced(msg.sender, betSide, amount, block.number);\n\n    }\n    \n    /**\n     * @dev Withdraw balance after game is over.\n     */\n    function withdraw() public isPaid() {\n\n        require(playerBalance[msg.sender]>0 , 'balance is zero');\n        uint256 amount = playerBalance[msg.sender];\n        playerBalance[msg.sender] = 0;\n        IERC20(token).transfer(msg.sender, amount);\n\n    }\n\n    /**\n     * @dev can be called by owner to settle game and withdraw from the pool : To be replaced by chainlink.\n     */\n    function setMatchWinnerAndWithdrawFromPool(BetSide _winningSide) public isFinished() onlyOwner() correctBet(_winningSide) {\n        require(status == MatchStatus.OPEN, 'Cant settle this match');\n        status = MatchStatus.PAID;\n        winningSide = _winningSide;\n        lendingPool.withdraw(token, type(uint).max, address(this));\n        findWinner();\n        payoutWinner(); \n        emit Winner(winner);\n\n    }\n\n    /**\n     * @dev Internal function to find the winnner of the lottery.\n     */\n    function findWinner() internal {\n        if(winningSide == BetSide.HOME) {\n            winner = findHomeWinner();\n        } else if (winningSide == BetSide.AWAY) {\n            winner = findAwayWinner();\n        } else if (winningSide == BetSide.DRAW) {\n            winner = findDrawWinner();\n        }\n    }\n\n    /**\n     * @dev Internal function to update the balance of the winnner of the lottery.\n     */\n    function payoutWinner() internal  {\n        uint256 winnerPayout = IERC20(token).balanceOf(address(this)) - totalDeposits;\n        playerBalance[winner] += winnerPayout;\n    }\n   \n  \n\n\n    \n   \n    \n     \n  \n\n  \n\n}",
  "sourceMap": "592:4534:2:-:0;;;1520:361;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1520:361:2;;;;;;;;;;;;;;;;;;;;;877:17:5;897:12;:10;:12::i;:::-;919:6;:18;;-1:-1:-1;;;;;;919:18:5;-1:-1:-1;;;;;919:18:5;;;;;;;952:43;;919:18;;-1:-1:-1;919:18:5;952:43;;919:6;;952:43;-1:-1:-1;3812:16:3;3803:25;;-1:-1:-1;;;;3803:25:3;;;-1:-1:-1;3838:34:3;;;;3883:16;:36;-1:-1:-1;;1738:5:2::1;:14:::0;;-1:-1:-1;;;;;;1738:14:2;;::::1;-1:-1:-1::0;;;;;1738:14:2;;::::1;;::::0;;;1762:11:::1;:47:::0;;-1:-1:-1;;;;;;1762:47:2::1;1738:14;1762:47:::0;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;1819:26:2::1;::::0;;1855:6:::1;:19:::0;;;;::::1;::::0;;592:4534;;598:104:4;685:10;598:104;:::o;592:4534:2:-;;;;;;;",
  "sourcePath": "contracts/AaveLossless.sol",
  "type": "contract"
}